/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package externalversions

import (
	"fmt"

	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cache "k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/accesscontext/v1alpha1"
	activev1alpha1 "kubeform.dev/provider-google-api/apis/active/v1alpha1"
	apigeev1alpha1 "kubeform.dev/provider-google-api/apis/apigee/v1alpha1"
	appenginev1alpha1 "kubeform.dev/provider-google-api/apis/appengine/v1alpha1"
	bigqueryv1alpha1 "kubeform.dev/provider-google-api/apis/bigquery/v1alpha1"
	bigtablev1alpha1 "kubeform.dev/provider-google-api/apis/bigtable/v1alpha1"
	billingaccountv1alpha1 "kubeform.dev/provider-google-api/apis/billingaccount/v1alpha1"
	billingbudgetv1alpha1 "kubeform.dev/provider-google-api/apis/billingbudget/v1alpha1"
	billingsubaccountv1alpha1 "kubeform.dev/provider-google-api/apis/billingsubaccount/v1alpha1"
	binaryauthorizationv1alpha1 "kubeform.dev/provider-google-api/apis/binaryauthorization/v1alpha1"
	cloudv1alpha1 "kubeform.dev/provider-google-api/apis/cloud/v1alpha1"
	cloudbuildv1alpha1 "kubeform.dev/provider-google-api/apis/cloudbuild/v1alpha1"
	cloudfunctionsfunctionv1alpha1 "kubeform.dev/provider-google-api/apis/cloudfunctionsfunction/v1alpha1"
	cloudiotv1alpha1 "kubeform.dev/provider-google-api/apis/cloudiot/v1alpha1"
	composerv1alpha1 "kubeform.dev/provider-google-api/apis/composer/v1alpha1"
	computev1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"
	containerv1alpha1 "kubeform.dev/provider-google-api/apis/container/v1alpha1"
	datav1alpha1 "kubeform.dev/provider-google-api/apis/data/v1alpha1"
	dataflowv1alpha1 "kubeform.dev/provider-google-api/apis/dataflow/v1alpha1"
	dataprocv1alpha1 "kubeform.dev/provider-google-api/apis/dataproc/v1alpha1"
	datastorev1alpha1 "kubeform.dev/provider-google-api/apis/datastore/v1alpha1"
	deploymentv1alpha1 "kubeform.dev/provider-google-api/apis/deployment/v1alpha1"
	dialogflowv1alpha1 "kubeform.dev/provider-google-api/apis/dialogflow/v1alpha1"
	dnsv1alpha1 "kubeform.dev/provider-google-api/apis/dns/v1alpha1"
	endpointsv1alpha1 "kubeform.dev/provider-google-api/apis/endpoints/v1alpha1"
	eventarcv1alpha1 "kubeform.dev/provider-google-api/apis/eventarc/v1alpha1"
	filestorev1alpha1 "kubeform.dev/provider-google-api/apis/filestore/v1alpha1"
	firestorev1alpha1 "kubeform.dev/provider-google-api/apis/firestore/v1alpha1"
	folderv1alpha1 "kubeform.dev/provider-google-api/apis/folder/v1alpha1"
	gamev1alpha1 "kubeform.dev/provider-google-api/apis/game/v1alpha1"
	healthcarev1alpha1 "kubeform.dev/provider-google-api/apis/healthcare/v1alpha1"
	iapv1alpha1 "kubeform.dev/provider-google-api/apis/iap/v1alpha1"
	identityv1alpha1 "kubeform.dev/provider-google-api/apis/identity/v1alpha1"
	kmsv1alpha1 "kubeform.dev/provider-google-api/apis/kms/v1alpha1"
	loggingv1alpha1 "kubeform.dev/provider-google-api/apis/logging/v1alpha1"
	memcachev1alpha1 "kubeform.dev/provider-google-api/apis/memcache/v1alpha1"
	mlv1alpha1 "kubeform.dev/provider-google-api/apis/ml/v1alpha1"
	monitoringv1alpha1 "kubeform.dev/provider-google-api/apis/monitoring/v1alpha1"
	networkv1alpha1 "kubeform.dev/provider-google-api/apis/network/v1alpha1"
	notebooksv1alpha1 "kubeform.dev/provider-google-api/apis/notebooks/v1alpha1"
	organizationv1alpha1 "kubeform.dev/provider-google-api/apis/organization/v1alpha1"
	osv1alpha1 "kubeform.dev/provider-google-api/apis/os/v1alpha1"
	projectv1alpha1 "kubeform.dev/provider-google-api/apis/project/v1alpha1"
	pubsubv1alpha1 "kubeform.dev/provider-google-api/apis/pubsub/v1alpha1"
	redisv1alpha1 "kubeform.dev/provider-google-api/apis/redis/v1alpha1"
	resourcev1alpha1 "kubeform.dev/provider-google-api/apis/resource/v1alpha1"
	runtimeconfigv1alpha1 "kubeform.dev/provider-google-api/apis/runtimeconfig/v1alpha1"
	sccv1alpha1 "kubeform.dev/provider-google-api/apis/scc/v1alpha1"
	secretv1alpha1 "kubeform.dev/provider-google-api/apis/secret/v1alpha1"
	servicev1alpha1 "kubeform.dev/provider-google-api/apis/service/v1alpha1"
	sourcereporepositoryv1alpha1 "kubeform.dev/provider-google-api/apis/sourcereporepository/v1alpha1"
	spannerv1alpha1 "kubeform.dev/provider-google-api/apis/spanner/v1alpha1"
	sqlv1alpha1 "kubeform.dev/provider-google-api/apis/sql/v1alpha1"
	storagev1alpha1 "kubeform.dev/provider-google-api/apis/storage/v1alpha1"
	tagsv1alpha1 "kubeform.dev/provider-google-api/apis/tags/v1alpha1"
	tpuv1alpha1 "kubeform.dev/provider-google-api/apis/tpu/v1alpha1"
	vertexv1alpha1 "kubeform.dev/provider-google-api/apis/vertex/v1alpha1"
	vpcv1alpha1 "kubeform.dev/provider-google-api/apis/vpc/v1alpha1"
	workflowsv1alpha1 "kubeform.dev/provider-google-api/apis/workflows/v1alpha1"
)

// GenericInformer is type of SharedIndexInformer which will locate and delegate to other
// sharedInformers based on type
type GenericInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() cache.GenericLister
}

type genericInformer struct {
	informer cache.SharedIndexInformer
	resource schema.GroupResource
}

// Informer returns the SharedIndexInformer.
func (f *genericInformer) Informer() cache.SharedIndexInformer {
	return f.informer
}

// Lister returns the GenericLister.
func (f *genericInformer) Lister() cache.GenericLister {
	return cache.NewGenericLister(f.Informer().GetIndexer(), f.resource)
}

// ForResource gives generic access to a shared informer of the matching type
// TODO extend this to unknown resources with a client pool
func (f *sharedInformerFactory) ForResource(resource schema.GroupVersionResource) (GenericInformer, error) {
	switch resource {
	// Group=accesscontext.google.kubeform.com, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithResource("manageraccesslevels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerAccessLevels().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("manageraccesslevelbatches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerAccessLevelBatches().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("manageraccesslevelconditions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerAccessLevelConditions().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("manageraccesspolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerAccessPolicies().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("managergcpuseraccessbindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerGcpUserAccessBindings().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("managerserviceperimeters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerServicePerimeters().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("managerserviceperimeterbatches"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerServicePerimeterBatches().Informer()}, nil
	case v1alpha1.SchemeGroupVersion.WithResource("managerserviceperimeterresources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Accesscontext().V1alpha1().ManagerServicePerimeterResources().Informer()}, nil

		// Group=active.google.kubeform.com, Version=v1alpha1
	case activev1alpha1.SchemeGroupVersion.WithResource("directorydomains"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Active().V1alpha1().DirectoryDomains().Informer()}, nil
	case activev1alpha1.SchemeGroupVersion.WithResource("directorydomaintrusts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Active().V1alpha1().DirectoryDomainTrusts().Informer()}, nil

		// Group=apigee.google.kubeform.com, Version=v1alpha1
	case apigeev1alpha1.SchemeGroupVersion.WithResource("envgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigee().V1alpha1().Envgroups().Informer()}, nil
	case apigeev1alpha1.SchemeGroupVersion.WithResource("envgroupattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigee().V1alpha1().EnvgroupAttachments().Informer()}, nil
	case apigeev1alpha1.SchemeGroupVersion.WithResource("environments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigee().V1alpha1().Environments().Informer()}, nil
	case apigeev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigee().V1alpha1().Instances().Informer()}, nil
	case apigeev1alpha1.SchemeGroupVersion.WithResource("instanceattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigee().V1alpha1().InstanceAttachments().Informer()}, nil
	case apigeev1alpha1.SchemeGroupVersion.WithResource("organizations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Apigee().V1alpha1().Organizations().Informer()}, nil

		// Group=appengine.google.kubeform.com, Version=v1alpha1
	case appenginev1alpha1.SchemeGroupVersion.WithResource("applications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().Applications().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("applicationurldispatchruleses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().ApplicationURLDispatchRuleses().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("domainmappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().DomainMappings().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("firewallrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().FirewallRules().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("flexibleappversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().FlexibleAppVersions().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("servicenetworksettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().ServiceNetworkSettingses().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("servicesplittraffics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().ServiceSplitTraffics().Informer()}, nil
	case appenginev1alpha1.SchemeGroupVersion.WithResource("standardappversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Appengine().V1alpha1().StandardAppVersions().Informer()}, nil

		// Group=bigquery.google.kubeform.com, Version=v1alpha1
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("datatransferconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().DataTransferConfigs().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("datasets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().Datasets().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("datasetaccesses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().DatasetAccesses().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("datasetiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().DatasetIamBindings().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("datasetiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().DatasetIamMembers().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("datasetiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().DatasetIamPolicies().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().Jobs().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("reservations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().Reservations().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("routines"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().Routines().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().Tables().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("tableiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().TableIamBindings().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("tableiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().TableIamMembers().Informer()}, nil
	case bigqueryv1alpha1.SchemeGroupVersion.WithResource("tableiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigquery().V1alpha1().TableIamPolicies().Informer()}, nil

		// Group=bigtable.google.kubeform.com, Version=v1alpha1
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("appprofiles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().AppProfiles().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("gcpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().GcPolicies().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().Instances().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("instanceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().InstanceIamBindings().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("instanceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().InstanceIamMembers().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("instanceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().InstanceIamPolicies().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("tables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().Tables().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("tableiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().TableIamBindings().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("tableiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().TableIamMembers().Informer()}, nil
	case bigtablev1alpha1.SchemeGroupVersion.WithResource("tableiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Bigtable().V1alpha1().TableIamPolicies().Informer()}, nil

		// Group=billingaccount.google.kubeform.com, Version=v1alpha1
	case billingaccountv1alpha1.SchemeGroupVersion.WithResource("iambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Billingaccount().V1alpha1().IamBindings().Informer()}, nil
	case billingaccountv1alpha1.SchemeGroupVersion.WithResource("iammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Billingaccount().V1alpha1().IamMembers().Informer()}, nil
	case billingaccountv1alpha1.SchemeGroupVersion.WithResource("iampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Billingaccount().V1alpha1().IamPolicies().Informer()}, nil

		// Group=billingbudget.google.kubeform.com, Version=v1alpha1
	case billingbudgetv1alpha1.SchemeGroupVersion.WithResource("billingbudgets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Billingbudget().V1alpha1().BillingBudgets().Informer()}, nil

		// Group=billingsubaccount.google.kubeform.com, Version=v1alpha1
	case billingsubaccountv1alpha1.SchemeGroupVersion.WithResource("billingsubaccounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Billingsubaccount().V1alpha1().BillingSubaccounts().Informer()}, nil

		// Group=binaryauthorization.google.kubeform.com, Version=v1alpha1
	case binaryauthorizationv1alpha1.SchemeGroupVersion.WithResource("attestors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Binaryauthorization().V1alpha1().Attestors().Informer()}, nil
	case binaryauthorizationv1alpha1.SchemeGroupVersion.WithResource("attestoriambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Binaryauthorization().V1alpha1().AttestorIamBindings().Informer()}, nil
	case binaryauthorizationv1alpha1.SchemeGroupVersion.WithResource("attestoriammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Binaryauthorization().V1alpha1().AttestorIamMembers().Informer()}, nil
	case binaryauthorizationv1alpha1.SchemeGroupVersion.WithResource("attestoriampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Binaryauthorization().V1alpha1().AttestorIamPolicies().Informer()}, nil
	case binaryauthorizationv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Binaryauthorization().V1alpha1().Policies().Informer()}, nil

		// Group=cloud.google.kubeform.com, Version=v1alpha1
	case cloudv1alpha1.SchemeGroupVersion.WithResource("assetfolderfeeds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().AssetFolderFeeds().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("assetorganizationfeeds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().AssetOrganizationFeeds().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("assetprojectfeeds"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().AssetProjectFeeds().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("identitygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().IdentityGroups().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("identitygroupmemberships"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().IdentityGroupMemberships().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("rundomainmappings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().RunDomainMappings().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("runservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().RunServices().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("runserviceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().RunServiceIamBindings().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("runserviceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().RunServiceIamMembers().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("runserviceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().RunServiceIamPolicies().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("schedulerjobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().SchedulerJobs().Informer()}, nil
	case cloudv1alpha1.SchemeGroupVersion.WithResource("tasksqueues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloud().V1alpha1().TasksQueues().Informer()}, nil

		// Group=cloudbuild.google.kubeform.com, Version=v1alpha1
	case cloudbuildv1alpha1.SchemeGroupVersion.WithResource("triggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudbuild().V1alpha1().Triggers().Informer()}, nil

		// Group=cloudfunctionsfunction.google.kubeform.com, Version=v1alpha1
	case cloudfunctionsfunctionv1alpha1.SchemeGroupVersion.WithResource("cloudfunctionsfunctions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfunctionsfunction().V1alpha1().CloudfunctionsFunctions().Informer()}, nil
	case cloudfunctionsfunctionv1alpha1.SchemeGroupVersion.WithResource("iambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfunctionsfunction().V1alpha1().IamBindings().Informer()}, nil
	case cloudfunctionsfunctionv1alpha1.SchemeGroupVersion.WithResource("iammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfunctionsfunction().V1alpha1().IamMembers().Informer()}, nil
	case cloudfunctionsfunctionv1alpha1.SchemeGroupVersion.WithResource("iampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudfunctionsfunction().V1alpha1().IamPolicies().Informer()}, nil

		// Group=cloudiot.google.kubeform.com, Version=v1alpha1
	case cloudiotv1alpha1.SchemeGroupVersion.WithResource("devices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudiot().V1alpha1().Devices().Informer()}, nil
	case cloudiotv1alpha1.SchemeGroupVersion.WithResource("registries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Cloudiot().V1alpha1().Registries().Informer()}, nil

		// Group=composer.google.kubeform.com, Version=v1alpha1
	case composerv1alpha1.SchemeGroupVersion.WithResource("environments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Composer().V1alpha1().Environments().Informer()}, nil

		// Group=compute.google.kubeform.com, Version=v1alpha1
	case computev1alpha1.SchemeGroupVersion.WithResource("addresses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Addresses().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("attacheddisks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().AttachedDisks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("autoscalers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Autoscalers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("backendbuckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().BackendBuckets().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("backendbucketsignedurlkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().BackendBucketSignedURLKeys().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("backendservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().BackendServices().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("backendservicesignedurlkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().BackendServiceSignedURLKeys().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("disks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Disks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("diskiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().DiskIamBindings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("diskiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().DiskIamMembers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("diskiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().DiskIamPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("diskresourcepolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().DiskResourcePolicyAttachments().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("externalvpngateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ExternalVPNGateways().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("firewalls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Firewalls().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("forwardingrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ForwardingRules().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("globaladdresses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().GlobalAddresses().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("globalforwardingrules"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().GlobalForwardingRules().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("globalnetworkendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().GlobalNetworkEndpoints().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("globalnetworkendpointgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().GlobalNetworkEndpointGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("havpngateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().HaVPNGateways().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("healthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().HealthChecks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("httphealthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().HttpHealthChecks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("httpshealthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().HttpsHealthChecks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("images"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Images().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("imageiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ImageIamBindings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("imageiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ImageIamMembers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("imageiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ImageIamPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Instances().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instancefromtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceFromTemplates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instancegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instancegroupmanagers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceGroupManagers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instancegroupnamedports"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceGroupNamedPorts().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instanceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceIamBindings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instanceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceIamMembers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instanceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceIamPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("instancetemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InstanceTemplates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("interconnectattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().InterconnectAttachments().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("managedsslcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ManagedSslCertificates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("networks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Networks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("networkendpoints"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().NetworkEndpoints().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("networkendpointgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().NetworkEndpointGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("networkpeerings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().NetworkPeerings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("networkpeeringroutesconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().NetworkPeeringRoutesConfigs().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("nodegroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().NodeGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("nodetemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().NodeTemplates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("packetmirrorings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().PacketMirrorings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("perinstanceconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().PerInstanceConfigs().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("projectdefaultnetworktiers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ProjectDefaultNetworkTiers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("projectmetadatas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ProjectMetadatas().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("projectmetadataitems"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ProjectMetadataItems().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionautoscalers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionAutoscalers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionbackendservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionBackendServices().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiondisks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionDisks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiondiskiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionDiskIamBindings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiondiskiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionDiskIamMembers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiondiskiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionDiskIamPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiondiskresourcepolicyattachments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionDiskResourcePolicyAttachments().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionhealthchecks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionHealthChecks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regioninstancegroupmanagers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionInstanceGroupManagers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionnetworkendpointgroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionNetworkEndpointGroups().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionperinstanceconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionPerInstanceConfigs().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionsslcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionSslCertificates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiontargethttpproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionTargetHTTPProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regiontargethttpsproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionTargetHTTPSProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("regionurlmaps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RegionURLMaps().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("reservations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Reservations().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("resourcepolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().ResourcePolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("routes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Routes().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("routers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Routers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("routerinterfaces"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RouterInterfaces().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("routernats"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RouterNATs().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("routerpeers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().RouterPeers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("securitypolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SecurityPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("sharedvpchostprojects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SharedVpcHostProjects().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("sharedvpcserviceprojects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SharedVpcServiceProjects().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("snapshots"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Snapshots().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("sslcertificates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SslCertificates().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("sslpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SslPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("subnetworks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().Subnetworks().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("subnetworkiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SubnetworkIamBindings().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("subnetworkiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SubnetworkIamMembers().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("subnetworkiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().SubnetworkIamPolicies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targetgrpcproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetGrpcProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targethttpproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetHTTPProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targethttpsproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetHTTPSProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targetinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetInstances().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targetpools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetPools().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targetsslproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetSslProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("targettcpproxies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().TargetTcpProxies().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("urlmaps"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().UrlMaps().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("vpngateways"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().VpnGateways().Informer()}, nil
	case computev1alpha1.SchemeGroupVersion.WithResource("vpntunnels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Compute().V1alpha1().VpnTunnels().Informer()}, nil

		// Group=container.google.kubeform.com, Version=v1alpha1
	case containerv1alpha1.SchemeGroupVersion.WithResource("analysisnotes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().AnalysisNotes().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("analysisoccurrences"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().AnalysisOccurrences().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Clusters().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("nodepools"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().NodePools().Informer()}, nil
	case containerv1alpha1.SchemeGroupVersion.WithResource("registries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Container().V1alpha1().Registries().Informer()}, nil

		// Group=data.google.kubeform.com, Version=v1alpha1
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogentries"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogEntries().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogentrygroups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogEntryGroups().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogentrygroupiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogEntryGroupIamBindings().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogentrygroupiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogEntryGroupIamMembers().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogentrygroupiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogEntryGroupIamPolicies().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogtags"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogTags().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogtagtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogTagTemplates().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogtagtemplateiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogTagTemplateIamBindings().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogtagtemplateiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogTagTemplateIamMembers().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("catalogtagtemplateiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().CatalogTagTemplateIamPolicies().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("losspreventiondeidentifytemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LossPreventionDeidentifyTemplates().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("losspreventioninspecttemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LossPreventionInspectTemplates().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("losspreventionjobtriggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LossPreventionJobTriggers().Informer()}, nil
	case datav1alpha1.SchemeGroupVersion.WithResource("losspreventionstoredinfotypes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Data().V1alpha1().LossPreventionStoredInfoTypes().Informer()}, nil

		// Group=dataflow.google.kubeform.com, Version=v1alpha1
	case dataflowv1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataflow().V1alpha1().Jobs().Informer()}, nil

		// Group=dataproc.google.kubeform.com, Version=v1alpha1
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("autoscalingpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().AutoscalingPolicies().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("clusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().Clusters().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("clusteriambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().ClusterIamBindings().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("clusteriammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().ClusterIamMembers().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("clusteriampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().ClusterIamPolicies().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("jobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().Jobs().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("jobiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().JobIamBindings().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("jobiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().JobIamMembers().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("jobiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().JobIamPolicies().Informer()}, nil
	case dataprocv1alpha1.SchemeGroupVersion.WithResource("workflowtemplates"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dataproc().V1alpha1().WorkflowTemplates().Informer()}, nil

		// Group=datastore.google.kubeform.com, Version=v1alpha1
	case datastorev1alpha1.SchemeGroupVersion.WithResource("indexes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Datastore().V1alpha1().Indexes().Informer()}, nil

		// Group=deployment.google.kubeform.com, Version=v1alpha1
	case deploymentv1alpha1.SchemeGroupVersion.WithResource("managerdeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Deployment().V1alpha1().ManagerDeployments().Informer()}, nil

		// Group=dialogflow.google.kubeform.com, Version=v1alpha1
	case dialogflowv1alpha1.SchemeGroupVersion.WithResource("agents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dialogflow().V1alpha1().Agents().Informer()}, nil
	case dialogflowv1alpha1.SchemeGroupVersion.WithResource("cxagents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dialogflow().V1alpha1().CxAgents().Informer()}, nil
	case dialogflowv1alpha1.SchemeGroupVersion.WithResource("entitytypes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dialogflow().V1alpha1().EntityTypes().Informer()}, nil
	case dialogflowv1alpha1.SchemeGroupVersion.WithResource("fulfillments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dialogflow().V1alpha1().Fulfillments().Informer()}, nil
	case dialogflowv1alpha1.SchemeGroupVersion.WithResource("intents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dialogflow().V1alpha1().Intents().Informer()}, nil

		// Group=dns.google.kubeform.com, Version=v1alpha1
	case dnsv1alpha1.SchemeGroupVersion.WithResource("managedzones"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().ManagedZones().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().Policies().Informer()}, nil
	case dnsv1alpha1.SchemeGroupVersion.WithResource("recordsets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Dns().V1alpha1().RecordSets().Informer()}, nil

		// Group=endpoints.google.kubeform.com, Version=v1alpha1
	case endpointsv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Endpoints().V1alpha1().Services().Informer()}, nil
	case endpointsv1alpha1.SchemeGroupVersion.WithResource("serviceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Endpoints().V1alpha1().ServiceIamBindings().Informer()}, nil
	case endpointsv1alpha1.SchemeGroupVersion.WithResource("serviceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Endpoints().V1alpha1().ServiceIamMembers().Informer()}, nil
	case endpointsv1alpha1.SchemeGroupVersion.WithResource("serviceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Endpoints().V1alpha1().ServiceIamPolicies().Informer()}, nil

		// Group=eventarc.google.kubeform.com, Version=v1alpha1
	case eventarcv1alpha1.SchemeGroupVersion.WithResource("triggers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Eventarc().V1alpha1().Triggers().Informer()}, nil

		// Group=filestore.google.kubeform.com, Version=v1alpha1
	case filestorev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Filestore().V1alpha1().Instances().Informer()}, nil

		// Group=firestore.google.kubeform.com, Version=v1alpha1
	case firestorev1alpha1.SchemeGroupVersion.WithResource("documents"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firestore().V1alpha1().Documents().Informer()}, nil
	case firestorev1alpha1.SchemeGroupVersion.WithResource("indexes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Firestore().V1alpha1().Indexes().Informer()}, nil

		// Group=folder.google.kubeform.com, Version=v1alpha1
	case folderv1alpha1.SchemeGroupVersion.WithResource("accessapprovalsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().AccessApprovalSettingses().Informer()}, nil
	case folderv1alpha1.SchemeGroupVersion.WithResource("folders"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().Folders().Informer()}, nil
	case folderv1alpha1.SchemeGroupVersion.WithResource("iamauditconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().IamAuditConfigs().Informer()}, nil
	case folderv1alpha1.SchemeGroupVersion.WithResource("iambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().IamBindings().Informer()}, nil
	case folderv1alpha1.SchemeGroupVersion.WithResource("iammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().IamMembers().Informer()}, nil
	case folderv1alpha1.SchemeGroupVersion.WithResource("iampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().IamPolicies().Informer()}, nil
	case folderv1alpha1.SchemeGroupVersion.WithResource("organizationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Folder().V1alpha1().OrganizationPolicies().Informer()}, nil

		// Group=game.google.kubeform.com, Version=v1alpha1
	case gamev1alpha1.SchemeGroupVersion.WithResource("servicesgameserverclusters"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Game().V1alpha1().ServicesGameServerClusters().Informer()}, nil
	case gamev1alpha1.SchemeGroupVersion.WithResource("servicesgameserverconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Game().V1alpha1().ServicesGameServerConfigs().Informer()}, nil
	case gamev1alpha1.SchemeGroupVersion.WithResource("servicesgameserverdeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Game().V1alpha1().ServicesGameServerDeployments().Informer()}, nil
	case gamev1alpha1.SchemeGroupVersion.WithResource("servicesgameserverdeploymentrollouts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Game().V1alpha1().ServicesGameServerDeploymentRollouts().Informer()}, nil
	case gamev1alpha1.SchemeGroupVersion.WithResource("servicesrealms"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Game().V1alpha1().ServicesRealms().Informer()}, nil

		// Group=healthcare.google.kubeform.com, Version=v1alpha1
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("consentstores"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().ConsentStores().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("consentstoreiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().ConsentStoreIamBindings().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("consentstoreiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().ConsentStoreIamMembers().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("consentstoreiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().ConsentStoreIamPolicies().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("datasets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().Datasets().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("datasetiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DatasetIamBindings().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("datasetiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DatasetIamMembers().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("datasetiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DatasetIamPolicies().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("dicomstores"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DicomStores().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("dicomstoreiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DicomStoreIamBindings().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("dicomstoreiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DicomStoreIamMembers().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("dicomstoreiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().DicomStoreIamPolicies().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("fhirstores"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().FhirStores().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("fhirstoreiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().FhirStoreIamBindings().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("fhirstoreiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().FhirStoreIamMembers().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("fhirstoreiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().FhirStoreIamPolicies().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("hl7v2stores"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().Hl7V2Stores().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("hl7v2storeiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().Hl7V2StoreIamBindings().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("hl7v2storeiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().Hl7V2StoreIamMembers().Informer()}, nil
	case healthcarev1alpha1.SchemeGroupVersion.WithResource("hl7v2storeiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Healthcare().V1alpha1().Hl7V2StoreIamPolicies().Informer()}, nil

		// Group=iap.google.kubeform.com, Version=v1alpha1
	case iapv1alpha1.SchemeGroupVersion.WithResource("appengineserviceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().AppEngineServiceIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("appengineserviceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().AppEngineServiceIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("appengineserviceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().AppEngineServiceIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("appengineversioniambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().AppEngineVersionIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("appengineversioniammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().AppEngineVersionIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("appengineversioniampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().AppEngineVersionIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("brands"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().Brands().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("clients"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().Clients().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("tunneliambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().TunnelIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("tunneliammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().TunnelIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("tunneliampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().TunnelIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("tunnelinstanceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().TunnelInstanceIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("tunnelinstanceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().TunnelInstanceIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("tunnelinstanceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().TunnelInstanceIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webbackendserviceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebBackendServiceIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webbackendserviceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebBackendServiceIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webbackendserviceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebBackendServiceIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webtypeappengineiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebTypeAppEngineIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webtypeappengineiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebTypeAppEngineIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webtypeappengineiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebTypeAppEngineIamPolicies().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webtypecomputeiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebTypeComputeIamBindings().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webtypecomputeiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebTypeComputeIamMembers().Informer()}, nil
	case iapv1alpha1.SchemeGroupVersion.WithResource("webtypecomputeiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Iap().V1alpha1().WebTypeComputeIamPolicies().Informer()}, nil

		// Group=identity.google.kubeform.com, Version=v1alpha1
	case identityv1alpha1.SchemeGroupVersion.WithResource("platformdefaultsupportedidpconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformDefaultSupportedIdpConfigs().Informer()}, nil
	case identityv1alpha1.SchemeGroupVersion.WithResource("platforminboundsamlconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformInboundSamlConfigs().Informer()}, nil
	case identityv1alpha1.SchemeGroupVersion.WithResource("platformoauthidpconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformOauthIdpConfigs().Informer()}, nil
	case identityv1alpha1.SchemeGroupVersion.WithResource("platformtenants"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformTenants().Informer()}, nil
	case identityv1alpha1.SchemeGroupVersion.WithResource("platformtenantdefaultsupportedidpconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformTenantDefaultSupportedIdpConfigs().Informer()}, nil
	case identityv1alpha1.SchemeGroupVersion.WithResource("platformtenantinboundsamlconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformTenantInboundSamlConfigs().Informer()}, nil
	case identityv1alpha1.SchemeGroupVersion.WithResource("platformtenantoauthidpconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Identity().V1alpha1().PlatformTenantOauthIdpConfigs().Informer()}, nil

		// Group=kms.google.kubeform.com, Version=v1alpha1
	case kmsv1alpha1.SchemeGroupVersion.WithResource("cryptokeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().CryptoKeys().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("cryptokeyiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().CryptoKeyIamBindings().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("cryptokeyiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().CryptoKeyIamMembers().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("cryptokeyiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().CryptoKeyIamPolicies().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyrings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyRings().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyringiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyRingIamBindings().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyringiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyRingIamMembers().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyringiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyRingIamPolicies().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("keyringimportjobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().KeyRingImportJobs().Informer()}, nil
	case kmsv1alpha1.SchemeGroupVersion.WithResource("secretciphertexts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Kms().V1alpha1().SecretCiphertexts().Informer()}, nil

		// Group=logging.google.kubeform.com, Version=v1alpha1
	case loggingv1alpha1.SchemeGroupVersion.WithResource("billingaccountbucketconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().BillingAccountBucketConfigs().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("billingaccountexclusions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().BillingAccountExclusions().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("billingaccountsinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().BillingAccountSinks().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("folderbucketconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().FolderBucketConfigs().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("folderexclusions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().FolderExclusions().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("foldersinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().FolderSinks().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("metrics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().Metrics().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("organizationbucketconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().OrganizationBucketConfigs().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("organizationexclusions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().OrganizationExclusions().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("organizationsinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().OrganizationSinks().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("projectbucketconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().ProjectBucketConfigs().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("projectexclusions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().ProjectExclusions().Informer()}, nil
	case loggingv1alpha1.SchemeGroupVersion.WithResource("projectsinks"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Logging().V1alpha1().ProjectSinks().Informer()}, nil

		// Group=memcache.google.kubeform.com, Version=v1alpha1
	case memcachev1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Memcache().V1alpha1().Instances().Informer()}, nil

		// Group=ml.google.kubeform.com, Version=v1alpha1
	case mlv1alpha1.SchemeGroupVersion.WithResource("enginemodels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Ml().V1alpha1().EngineModels().Informer()}, nil

		// Group=monitoring.google.kubeform.com, Version=v1alpha1
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("alertpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().AlertPolicies().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("customservices"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().CustomServices().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("dashboards"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().Dashboards().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("groups"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().Groups().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("metricdescriptors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().MetricDescriptors().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("notificationchannels"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().NotificationChannels().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("slos"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().Slos().Informer()}, nil
	case monitoringv1alpha1.SchemeGroupVersion.WithResource("uptimecheckconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Monitoring().V1alpha1().UptimeCheckConfigs().Informer()}, nil

		// Group=network.google.kubeform.com, Version=v1alpha1
	case networkv1alpha1.SchemeGroupVersion.WithResource("managementconnectivitytests"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Network().V1alpha1().ManagementConnectivityTests().Informer()}, nil

		// Group=notebooks.google.kubeform.com, Version=v1alpha1
	case notebooksv1alpha1.SchemeGroupVersion.WithResource("environments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notebooks().V1alpha1().Environments().Informer()}, nil
	case notebooksv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notebooks().V1alpha1().Instances().Informer()}, nil
	case notebooksv1alpha1.SchemeGroupVersion.WithResource("instanceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notebooks().V1alpha1().InstanceIamBindings().Informer()}, nil
	case notebooksv1alpha1.SchemeGroupVersion.WithResource("instanceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notebooks().V1alpha1().InstanceIamMembers().Informer()}, nil
	case notebooksv1alpha1.SchemeGroupVersion.WithResource("instanceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notebooks().V1alpha1().InstanceIamPolicies().Informer()}, nil
	case notebooksv1alpha1.SchemeGroupVersion.WithResource("locations"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Notebooks().V1alpha1().Locations().Informer()}, nil

		// Group=organization.google.kubeform.com, Version=v1alpha1
	case organizationv1alpha1.SchemeGroupVersion.WithResource("accessapprovalsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().AccessApprovalSettingses().Informer()}, nil
	case organizationv1alpha1.SchemeGroupVersion.WithResource("iamauditconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().IamAuditConfigs().Informer()}, nil
	case organizationv1alpha1.SchemeGroupVersion.WithResource("iambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().IamBindings().Informer()}, nil
	case organizationv1alpha1.SchemeGroupVersion.WithResource("iamcustomroles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().IamCustomRoles().Informer()}, nil
	case organizationv1alpha1.SchemeGroupVersion.WithResource("iammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().IamMembers().Informer()}, nil
	case organizationv1alpha1.SchemeGroupVersion.WithResource("iampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().IamPolicies().Informer()}, nil
	case organizationv1alpha1.SchemeGroupVersion.WithResource("policies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Organization().V1alpha1().Policies().Informer()}, nil

		// Group=os.google.kubeform.com, Version=v1alpha1
	case osv1alpha1.SchemeGroupVersion.WithResource("configpatchdeployments"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Os().V1alpha1().ConfigPatchDeployments().Informer()}, nil
	case osv1alpha1.SchemeGroupVersion.WithResource("loginsshpublickeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Os().V1alpha1().LoginSSHPublicKeys().Informer()}, nil

		// Group=project.google.kubeform.com, Version=v1alpha1
	case projectv1alpha1.SchemeGroupVersion.WithResource("accessapprovalsettingses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().AccessApprovalSettingses().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("defaultserviceaccountses"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().DefaultServiceAccountses().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("iamauditconfigs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().IamAuditConfigs().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("iambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().IamBindings().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("iamcustomroles"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().IamCustomRoles().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("iammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().IamMembers().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("iampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().IamPolicies().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("organizationpolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().OrganizationPolicies().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("projects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().Projects().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("services"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().Services().Informer()}, nil
	case projectv1alpha1.SchemeGroupVersion.WithResource("usageexportbuckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Project().V1alpha1().UsageExportBuckets().Informer()}, nil

		// Group=pubsub.google.kubeform.com, Version=v1alpha1
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("litesubscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().LiteSubscriptions().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("litetopics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().LiteTopics().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("schemas"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().Schemas().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("subscriptions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().Subscriptions().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("subscriptioniambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().SubscriptionIamBindings().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("subscriptioniammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().SubscriptionIamMembers().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("subscriptioniampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().SubscriptionIamPolicies().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("topics"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().Topics().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("topiciambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().TopicIamBindings().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("topiciammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().TopicIamMembers().Informer()}, nil
	case pubsubv1alpha1.SchemeGroupVersion.WithResource("topiciampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Pubsub().V1alpha1().TopicIamPolicies().Informer()}, nil

		// Group=redis.google.kubeform.com, Version=v1alpha1
	case redisv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Redis().V1alpha1().Instances().Informer()}, nil

		// Group=resource.google.kubeform.com, Version=v1alpha1
	case resourcev1alpha1.SchemeGroupVersion.WithResource("managerliens"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Resource().V1alpha1().ManagerLiens().Informer()}, nil

		// Group=runtimeconfig.google.kubeform.com, Version=v1alpha1
	case runtimeconfigv1alpha1.SchemeGroupVersion.WithResource("configs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Runtimeconfig().V1alpha1().Configs().Informer()}, nil
	case runtimeconfigv1alpha1.SchemeGroupVersion.WithResource("configiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Runtimeconfig().V1alpha1().ConfigIamBindings().Informer()}, nil
	case runtimeconfigv1alpha1.SchemeGroupVersion.WithResource("configiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Runtimeconfig().V1alpha1().ConfigIamMembers().Informer()}, nil
	case runtimeconfigv1alpha1.SchemeGroupVersion.WithResource("configiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Runtimeconfig().V1alpha1().ConfigIamPolicies().Informer()}, nil
	case runtimeconfigv1alpha1.SchemeGroupVersion.WithResource("variables"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Runtimeconfig().V1alpha1().Variables().Informer()}, nil

		// Group=scc.google.kubeform.com, Version=v1alpha1
	case sccv1alpha1.SchemeGroupVersion.WithResource("sources"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Scc().V1alpha1().Sources().Informer()}, nil

		// Group=secret.google.kubeform.com, Version=v1alpha1
	case secretv1alpha1.SchemeGroupVersion.WithResource("managersecrets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secret().V1alpha1().ManagerSecrets().Informer()}, nil
	case secretv1alpha1.SchemeGroupVersion.WithResource("managersecretiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secret().V1alpha1().ManagerSecretIamBindings().Informer()}, nil
	case secretv1alpha1.SchemeGroupVersion.WithResource("managersecretiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secret().V1alpha1().ManagerSecretIamMembers().Informer()}, nil
	case secretv1alpha1.SchemeGroupVersion.WithResource("managersecretiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secret().V1alpha1().ManagerSecretIamPolicies().Informer()}, nil
	case secretv1alpha1.SchemeGroupVersion.WithResource("managersecretversions"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Secret().V1alpha1().ManagerSecretVersions().Informer()}, nil

		// Group=service.google.kubeform.com, Version=v1alpha1
	case servicev1alpha1.SchemeGroupVersion.WithResource("accounts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().Accounts().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("accountiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().AccountIamBindings().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("accountiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().AccountIamMembers().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("accountiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().AccountIamPolicies().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("accountkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().AccountKeys().Informer()}, nil
	case servicev1alpha1.SchemeGroupVersion.WithResource("networkingconnections"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Service().V1alpha1().NetworkingConnections().Informer()}, nil

		// Group=sourcereporepository.google.kubeform.com, Version=v1alpha1
	case sourcereporepositoryv1alpha1.SchemeGroupVersion.WithResource("iambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sourcereporepository().V1alpha1().IamBindings().Informer()}, nil
	case sourcereporepositoryv1alpha1.SchemeGroupVersion.WithResource("iammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sourcereporepository().V1alpha1().IamMembers().Informer()}, nil
	case sourcereporepositoryv1alpha1.SchemeGroupVersion.WithResource("iampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sourcereporepository().V1alpha1().IamPolicies().Informer()}, nil
	case sourcereporepositoryv1alpha1.SchemeGroupVersion.WithResource("sourcereporepositories"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sourcereporepository().V1alpha1().SourcerepoRepositories().Informer()}, nil

		// Group=spanner.google.kubeform.com, Version=v1alpha1
	case spannerv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().Databases().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("databaseiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().DatabaseIamBindings().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("databaseiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().DatabaseIamMembers().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("databaseiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().DatabaseIamPolicies().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("instances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().Instances().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("instanceiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().InstanceIamBindings().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("instanceiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().InstanceIamMembers().Informer()}, nil
	case spannerv1alpha1.SchemeGroupVersion.WithResource("instanceiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Spanner().V1alpha1().InstanceIamPolicies().Informer()}, nil

		// Group=sql.google.kubeform.com, Version=v1alpha1
	case sqlv1alpha1.SchemeGroupVersion.WithResource("databases"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().Databases().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("databaseinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().DatabaseInstances().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("sourcerepresentationinstances"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().SourceRepresentationInstances().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("sslcerts"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().SslCerts().Informer()}, nil
	case sqlv1alpha1.SchemeGroupVersion.WithResource("users"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Sql().V1alpha1().Users().Informer()}, nil

		// Group=storage.google.kubeform.com, Version=v1alpha1
	case storagev1alpha1.SchemeGroupVersion.WithResource("buckets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Buckets().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("bucketacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BucketACLs().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("bucketaccesscontrols"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BucketAccessControls().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("bucketiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BucketIamBindings().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("bucketiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BucketIamMembers().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("bucketiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BucketIamPolicies().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("bucketobjects"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().BucketObjects().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("defaultobjectacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().DefaultObjectACLs().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("defaultobjectaccesscontrols"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().DefaultObjectAccessControls().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("hmackeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().HmacKeys().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("notifications"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().Notifications().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("objectacls"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().ObjectACLs().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("objectaccesscontrols"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().ObjectAccessControls().Informer()}, nil
	case storagev1alpha1.SchemeGroupVersion.WithResource("transferjobs"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Storage().V1alpha1().TransferJobs().Informer()}, nil

		// Group=tags.google.kubeform.com, Version=v1alpha1
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagbindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagBindings().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagkeys"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagKeys().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagkeyiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagKeyIamBindings().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagkeyiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagKeyIamMembers().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagkeyiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagKeyIamPolicies().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagvalues"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagValues().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagvalueiambindings"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagValueIamBindings().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagvalueiammembers"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagValueIamMembers().Informer()}, nil
	case tagsv1alpha1.SchemeGroupVersion.WithResource("tagvalueiampolicies"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tags().V1alpha1().TagValueIamPolicies().Informer()}, nil

		// Group=tpu.google.kubeform.com, Version=v1alpha1
	case tpuv1alpha1.SchemeGroupVersion.WithResource("nodes"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Tpu().V1alpha1().Nodes().Informer()}, nil

		// Group=vertex.google.kubeform.com, Version=v1alpha1
	case vertexv1alpha1.SchemeGroupVersion.WithResource("aidatasets"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vertex().V1alpha1().AiDatasets().Informer()}, nil

		// Group=vpc.google.kubeform.com, Version=v1alpha1
	case vpcv1alpha1.SchemeGroupVersion.WithResource("accessconnectors"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Vpc().V1alpha1().AccessConnectors().Informer()}, nil

		// Group=workflows.google.kubeform.com, Version=v1alpha1
	case workflowsv1alpha1.SchemeGroupVersion.WithResource("workflows"):
		return &genericInformer{resource: resource.GroupResource(), informer: f.Workflows().V1alpha1().Workflows().Informer()}, nil

	}

	return nil, fmt.Errorf("no informer found for %v", resource)
}
