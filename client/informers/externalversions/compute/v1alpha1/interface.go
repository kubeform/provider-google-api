/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "kubeform.dev/provider-google-api/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Addresses returns a AddressInformer.
	Addresses() AddressInformer
	// AttachedDisks returns a AttachedDiskInformer.
	AttachedDisks() AttachedDiskInformer
	// Autoscalers returns a AutoscalerInformer.
	Autoscalers() AutoscalerInformer
	// BackendBuckets returns a BackendBucketInformer.
	BackendBuckets() BackendBucketInformer
	// BackendBucketSignedURLKeys returns a BackendBucketSignedURLKeyInformer.
	BackendBucketSignedURLKeys() BackendBucketSignedURLKeyInformer
	// BackendServices returns a BackendServiceInformer.
	BackendServices() BackendServiceInformer
	// BackendServiceSignedURLKeys returns a BackendServiceSignedURLKeyInformer.
	BackendServiceSignedURLKeys() BackendServiceSignedURLKeyInformer
	// Disks returns a DiskInformer.
	Disks() DiskInformer
	// DiskIamBindings returns a DiskIamBindingInformer.
	DiskIamBindings() DiskIamBindingInformer
	// DiskIamMembers returns a DiskIamMemberInformer.
	DiskIamMembers() DiskIamMemberInformer
	// DiskIamPolicies returns a DiskIamPolicyInformer.
	DiskIamPolicies() DiskIamPolicyInformer
	// DiskResourcePolicyAttachments returns a DiskResourcePolicyAttachmentInformer.
	DiskResourcePolicyAttachments() DiskResourcePolicyAttachmentInformer
	// ExternalVPNGateways returns a ExternalVPNGatewayInformer.
	ExternalVPNGateways() ExternalVPNGatewayInformer
	// Firewalls returns a FirewallInformer.
	Firewalls() FirewallInformer
	// ForwardingRules returns a ForwardingRuleInformer.
	ForwardingRules() ForwardingRuleInformer
	// GlobalAddresses returns a GlobalAddressInformer.
	GlobalAddresses() GlobalAddressInformer
	// GlobalForwardingRules returns a GlobalForwardingRuleInformer.
	GlobalForwardingRules() GlobalForwardingRuleInformer
	// GlobalNetworkEndpoints returns a GlobalNetworkEndpointInformer.
	GlobalNetworkEndpoints() GlobalNetworkEndpointInformer
	// GlobalNetworkEndpointGroups returns a GlobalNetworkEndpointGroupInformer.
	GlobalNetworkEndpointGroups() GlobalNetworkEndpointGroupInformer
	// HaVPNGateways returns a HaVPNGatewayInformer.
	HaVPNGateways() HaVPNGatewayInformer
	// HealthChecks returns a HealthCheckInformer.
	HealthChecks() HealthCheckInformer
	// HttpHealthChecks returns a HttpHealthCheckInformer.
	HttpHealthChecks() HttpHealthCheckInformer
	// HttpsHealthChecks returns a HttpsHealthCheckInformer.
	HttpsHealthChecks() HttpsHealthCheckInformer
	// Images returns a ImageInformer.
	Images() ImageInformer
	// ImageIamBindings returns a ImageIamBindingInformer.
	ImageIamBindings() ImageIamBindingInformer
	// ImageIamMembers returns a ImageIamMemberInformer.
	ImageIamMembers() ImageIamMemberInformer
	// ImageIamPolicies returns a ImageIamPolicyInformer.
	ImageIamPolicies() ImageIamPolicyInformer
	// Instances returns a InstanceInformer.
	Instances() InstanceInformer
	// InstanceFromTemplates returns a InstanceFromTemplateInformer.
	InstanceFromTemplates() InstanceFromTemplateInformer
	// InstanceGroups returns a InstanceGroupInformer.
	InstanceGroups() InstanceGroupInformer
	// InstanceGroupManagers returns a InstanceGroupManagerInformer.
	InstanceGroupManagers() InstanceGroupManagerInformer
	// InstanceGroupNamedPorts returns a InstanceGroupNamedPortInformer.
	InstanceGroupNamedPorts() InstanceGroupNamedPortInformer
	// InstanceIamBindings returns a InstanceIamBindingInformer.
	InstanceIamBindings() InstanceIamBindingInformer
	// InstanceIamMembers returns a InstanceIamMemberInformer.
	InstanceIamMembers() InstanceIamMemberInformer
	// InstanceIamPolicies returns a InstanceIamPolicyInformer.
	InstanceIamPolicies() InstanceIamPolicyInformer
	// InstanceTemplates returns a InstanceTemplateInformer.
	InstanceTemplates() InstanceTemplateInformer
	// InterconnectAttachments returns a InterconnectAttachmentInformer.
	InterconnectAttachments() InterconnectAttachmentInformer
	// ManagedSslCertificates returns a ManagedSslCertificateInformer.
	ManagedSslCertificates() ManagedSslCertificateInformer
	// Networks returns a NetworkInformer.
	Networks() NetworkInformer
	// NetworkEndpoints returns a NetworkEndpointInformer.
	NetworkEndpoints() NetworkEndpointInformer
	// NetworkEndpointGroups returns a NetworkEndpointGroupInformer.
	NetworkEndpointGroups() NetworkEndpointGroupInformer
	// NetworkPeerings returns a NetworkPeeringInformer.
	NetworkPeerings() NetworkPeeringInformer
	// NetworkPeeringRoutesConfigs returns a NetworkPeeringRoutesConfigInformer.
	NetworkPeeringRoutesConfigs() NetworkPeeringRoutesConfigInformer
	// NodeGroups returns a NodeGroupInformer.
	NodeGroups() NodeGroupInformer
	// NodeTemplates returns a NodeTemplateInformer.
	NodeTemplates() NodeTemplateInformer
	// PacketMirrorings returns a PacketMirroringInformer.
	PacketMirrorings() PacketMirroringInformer
	// PerInstanceConfigs returns a PerInstanceConfigInformer.
	PerInstanceConfigs() PerInstanceConfigInformer
	// ProjectDefaultNetworkTiers returns a ProjectDefaultNetworkTierInformer.
	ProjectDefaultNetworkTiers() ProjectDefaultNetworkTierInformer
	// ProjectMetadatas returns a ProjectMetadataInformer.
	ProjectMetadatas() ProjectMetadataInformer
	// ProjectMetadataItems returns a ProjectMetadataItemInformer.
	ProjectMetadataItems() ProjectMetadataItemInformer
	// RegionAutoscalers returns a RegionAutoscalerInformer.
	RegionAutoscalers() RegionAutoscalerInformer
	// RegionBackendServices returns a RegionBackendServiceInformer.
	RegionBackendServices() RegionBackendServiceInformer
	// RegionDisks returns a RegionDiskInformer.
	RegionDisks() RegionDiskInformer
	// RegionDiskIamBindings returns a RegionDiskIamBindingInformer.
	RegionDiskIamBindings() RegionDiskIamBindingInformer
	// RegionDiskIamMembers returns a RegionDiskIamMemberInformer.
	RegionDiskIamMembers() RegionDiskIamMemberInformer
	// RegionDiskIamPolicies returns a RegionDiskIamPolicyInformer.
	RegionDiskIamPolicies() RegionDiskIamPolicyInformer
	// RegionDiskResourcePolicyAttachments returns a RegionDiskResourcePolicyAttachmentInformer.
	RegionDiskResourcePolicyAttachments() RegionDiskResourcePolicyAttachmentInformer
	// RegionHealthChecks returns a RegionHealthCheckInformer.
	RegionHealthChecks() RegionHealthCheckInformer
	// RegionInstanceGroupManagers returns a RegionInstanceGroupManagerInformer.
	RegionInstanceGroupManagers() RegionInstanceGroupManagerInformer
	// RegionNetworkEndpointGroups returns a RegionNetworkEndpointGroupInformer.
	RegionNetworkEndpointGroups() RegionNetworkEndpointGroupInformer
	// RegionPerInstanceConfigs returns a RegionPerInstanceConfigInformer.
	RegionPerInstanceConfigs() RegionPerInstanceConfigInformer
	// RegionSslCertificates returns a RegionSslCertificateInformer.
	RegionSslCertificates() RegionSslCertificateInformer
	// RegionTargetHTTPProxies returns a RegionTargetHTTPProxyInformer.
	RegionTargetHTTPProxies() RegionTargetHTTPProxyInformer
	// RegionTargetHTTPSProxies returns a RegionTargetHTTPSProxyInformer.
	RegionTargetHTTPSProxies() RegionTargetHTTPSProxyInformer
	// RegionURLMaps returns a RegionURLMapInformer.
	RegionURLMaps() RegionURLMapInformer
	// Reservations returns a ReservationInformer.
	Reservations() ReservationInformer
	// ResourcePolicies returns a ResourcePolicyInformer.
	ResourcePolicies() ResourcePolicyInformer
	// Routes returns a RouteInformer.
	Routes() RouteInformer
	// Routers returns a RouterInformer.
	Routers() RouterInformer
	// RouterInterfaces returns a RouterInterfaceInformer.
	RouterInterfaces() RouterInterfaceInformer
	// RouterNATs returns a RouterNATInformer.
	RouterNATs() RouterNATInformer
	// RouterPeers returns a RouterPeerInformer.
	RouterPeers() RouterPeerInformer
	// SecurityPolicies returns a SecurityPolicyInformer.
	SecurityPolicies() SecurityPolicyInformer
	// SharedVpcHostProjects returns a SharedVpcHostProjectInformer.
	SharedVpcHostProjects() SharedVpcHostProjectInformer
	// SharedVpcServiceProjects returns a SharedVpcServiceProjectInformer.
	SharedVpcServiceProjects() SharedVpcServiceProjectInformer
	// Snapshots returns a SnapshotInformer.
	Snapshots() SnapshotInformer
	// SslCertificates returns a SslCertificateInformer.
	SslCertificates() SslCertificateInformer
	// SslPolicies returns a SslPolicyInformer.
	SslPolicies() SslPolicyInformer
	// Subnetworks returns a SubnetworkInformer.
	Subnetworks() SubnetworkInformer
	// SubnetworkIamBindings returns a SubnetworkIamBindingInformer.
	SubnetworkIamBindings() SubnetworkIamBindingInformer
	// SubnetworkIamMembers returns a SubnetworkIamMemberInformer.
	SubnetworkIamMembers() SubnetworkIamMemberInformer
	// SubnetworkIamPolicies returns a SubnetworkIamPolicyInformer.
	SubnetworkIamPolicies() SubnetworkIamPolicyInformer
	// TargetGrpcProxies returns a TargetGrpcProxyInformer.
	TargetGrpcProxies() TargetGrpcProxyInformer
	// TargetHTTPProxies returns a TargetHTTPProxyInformer.
	TargetHTTPProxies() TargetHTTPProxyInformer
	// TargetHTTPSProxies returns a TargetHTTPSProxyInformer.
	TargetHTTPSProxies() TargetHTTPSProxyInformer
	// TargetInstances returns a TargetInstanceInformer.
	TargetInstances() TargetInstanceInformer
	// TargetPools returns a TargetPoolInformer.
	TargetPools() TargetPoolInformer
	// TargetSslProxies returns a TargetSslProxyInformer.
	TargetSslProxies() TargetSslProxyInformer
	// TargetTcpProxies returns a TargetTcpProxyInformer.
	TargetTcpProxies() TargetTcpProxyInformer
	// UrlMaps returns a UrlMapInformer.
	UrlMaps() UrlMapInformer
	// VpnGateways returns a VpnGatewayInformer.
	VpnGateways() VpnGatewayInformer
	// VpnTunnels returns a VpnTunnelInformer.
	VpnTunnels() VpnTunnelInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Addresses returns a AddressInformer.
func (v *version) Addresses() AddressInformer {
	return &addressInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// AttachedDisks returns a AttachedDiskInformer.
func (v *version) AttachedDisks() AttachedDiskInformer {
	return &attachedDiskInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Autoscalers returns a AutoscalerInformer.
func (v *version) Autoscalers() AutoscalerInformer {
	return &autoscalerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BackendBuckets returns a BackendBucketInformer.
func (v *version) BackendBuckets() BackendBucketInformer {
	return &backendBucketInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BackendBucketSignedURLKeys returns a BackendBucketSignedURLKeyInformer.
func (v *version) BackendBucketSignedURLKeys() BackendBucketSignedURLKeyInformer {
	return &backendBucketSignedURLKeyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BackendServices returns a BackendServiceInformer.
func (v *version) BackendServices() BackendServiceInformer {
	return &backendServiceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// BackendServiceSignedURLKeys returns a BackendServiceSignedURLKeyInformer.
func (v *version) BackendServiceSignedURLKeys() BackendServiceSignedURLKeyInformer {
	return &backendServiceSignedURLKeyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Disks returns a DiskInformer.
func (v *version) Disks() DiskInformer {
	return &diskInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DiskIamBindings returns a DiskIamBindingInformer.
func (v *version) DiskIamBindings() DiskIamBindingInformer {
	return &diskIamBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DiskIamMembers returns a DiskIamMemberInformer.
func (v *version) DiskIamMembers() DiskIamMemberInformer {
	return &diskIamMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DiskIamPolicies returns a DiskIamPolicyInformer.
func (v *version) DiskIamPolicies() DiskIamPolicyInformer {
	return &diskIamPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// DiskResourcePolicyAttachments returns a DiskResourcePolicyAttachmentInformer.
func (v *version) DiskResourcePolicyAttachments() DiskResourcePolicyAttachmentInformer {
	return &diskResourcePolicyAttachmentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ExternalVPNGateways returns a ExternalVPNGatewayInformer.
func (v *version) ExternalVPNGateways() ExternalVPNGatewayInformer {
	return &externalVPNGatewayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Firewalls returns a FirewallInformer.
func (v *version) Firewalls() FirewallInformer {
	return &firewallInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ForwardingRules returns a ForwardingRuleInformer.
func (v *version) ForwardingRules() ForwardingRuleInformer {
	return &forwardingRuleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// GlobalAddresses returns a GlobalAddressInformer.
func (v *version) GlobalAddresses() GlobalAddressInformer {
	return &globalAddressInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// GlobalForwardingRules returns a GlobalForwardingRuleInformer.
func (v *version) GlobalForwardingRules() GlobalForwardingRuleInformer {
	return &globalForwardingRuleInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// GlobalNetworkEndpoints returns a GlobalNetworkEndpointInformer.
func (v *version) GlobalNetworkEndpoints() GlobalNetworkEndpointInformer {
	return &globalNetworkEndpointInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// GlobalNetworkEndpointGroups returns a GlobalNetworkEndpointGroupInformer.
func (v *version) GlobalNetworkEndpointGroups() GlobalNetworkEndpointGroupInformer {
	return &globalNetworkEndpointGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// HaVPNGateways returns a HaVPNGatewayInformer.
func (v *version) HaVPNGateways() HaVPNGatewayInformer {
	return &haVPNGatewayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// HealthChecks returns a HealthCheckInformer.
func (v *version) HealthChecks() HealthCheckInformer {
	return &healthCheckInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// HttpHealthChecks returns a HttpHealthCheckInformer.
func (v *version) HttpHealthChecks() HttpHealthCheckInformer {
	return &httpHealthCheckInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// HttpsHealthChecks returns a HttpsHealthCheckInformer.
func (v *version) HttpsHealthChecks() HttpsHealthCheckInformer {
	return &httpsHealthCheckInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Images returns a ImageInformer.
func (v *version) Images() ImageInformer {
	return &imageInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ImageIamBindings returns a ImageIamBindingInformer.
func (v *version) ImageIamBindings() ImageIamBindingInformer {
	return &imageIamBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ImageIamMembers returns a ImageIamMemberInformer.
func (v *version) ImageIamMembers() ImageIamMemberInformer {
	return &imageIamMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ImageIamPolicies returns a ImageIamPolicyInformer.
func (v *version) ImageIamPolicies() ImageIamPolicyInformer {
	return &imageIamPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Instances returns a InstanceInformer.
func (v *version) Instances() InstanceInformer {
	return &instanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceFromTemplates returns a InstanceFromTemplateInformer.
func (v *version) InstanceFromTemplates() InstanceFromTemplateInformer {
	return &instanceFromTemplateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroups returns a InstanceGroupInformer.
func (v *version) InstanceGroups() InstanceGroupInformer {
	return &instanceGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroupManagers returns a InstanceGroupManagerInformer.
func (v *version) InstanceGroupManagers() InstanceGroupManagerInformer {
	return &instanceGroupManagerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceGroupNamedPorts returns a InstanceGroupNamedPortInformer.
func (v *version) InstanceGroupNamedPorts() InstanceGroupNamedPortInformer {
	return &instanceGroupNamedPortInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceIamBindings returns a InstanceIamBindingInformer.
func (v *version) InstanceIamBindings() InstanceIamBindingInformer {
	return &instanceIamBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceIamMembers returns a InstanceIamMemberInformer.
func (v *version) InstanceIamMembers() InstanceIamMemberInformer {
	return &instanceIamMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceIamPolicies returns a InstanceIamPolicyInformer.
func (v *version) InstanceIamPolicies() InstanceIamPolicyInformer {
	return &instanceIamPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstanceTemplates returns a InstanceTemplateInformer.
func (v *version) InstanceTemplates() InstanceTemplateInformer {
	return &instanceTemplateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InterconnectAttachments returns a InterconnectAttachmentInformer.
func (v *version) InterconnectAttachments() InterconnectAttachmentInformer {
	return &interconnectAttachmentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ManagedSslCertificates returns a ManagedSslCertificateInformer.
func (v *version) ManagedSslCertificates() ManagedSslCertificateInformer {
	return &managedSslCertificateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Networks returns a NetworkInformer.
func (v *version) Networks() NetworkInformer {
	return &networkInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkEndpoints returns a NetworkEndpointInformer.
func (v *version) NetworkEndpoints() NetworkEndpointInformer {
	return &networkEndpointInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkEndpointGroups returns a NetworkEndpointGroupInformer.
func (v *version) NetworkEndpointGroups() NetworkEndpointGroupInformer {
	return &networkEndpointGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkPeerings returns a NetworkPeeringInformer.
func (v *version) NetworkPeerings() NetworkPeeringInformer {
	return &networkPeeringInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NetworkPeeringRoutesConfigs returns a NetworkPeeringRoutesConfigInformer.
func (v *version) NetworkPeeringRoutesConfigs() NetworkPeeringRoutesConfigInformer {
	return &networkPeeringRoutesConfigInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NodeGroups returns a NodeGroupInformer.
func (v *version) NodeGroups() NodeGroupInformer {
	return &nodeGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// NodeTemplates returns a NodeTemplateInformer.
func (v *version) NodeTemplates() NodeTemplateInformer {
	return &nodeTemplateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PacketMirrorings returns a PacketMirroringInformer.
func (v *version) PacketMirrorings() PacketMirroringInformer {
	return &packetMirroringInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PerInstanceConfigs returns a PerInstanceConfigInformer.
func (v *version) PerInstanceConfigs() PerInstanceConfigInformer {
	return &perInstanceConfigInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ProjectDefaultNetworkTiers returns a ProjectDefaultNetworkTierInformer.
func (v *version) ProjectDefaultNetworkTiers() ProjectDefaultNetworkTierInformer {
	return &projectDefaultNetworkTierInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ProjectMetadatas returns a ProjectMetadataInformer.
func (v *version) ProjectMetadatas() ProjectMetadataInformer {
	return &projectMetadataInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ProjectMetadataItems returns a ProjectMetadataItemInformer.
func (v *version) ProjectMetadataItems() ProjectMetadataItemInformer {
	return &projectMetadataItemInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionAutoscalers returns a RegionAutoscalerInformer.
func (v *version) RegionAutoscalers() RegionAutoscalerInformer {
	return &regionAutoscalerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionBackendServices returns a RegionBackendServiceInformer.
func (v *version) RegionBackendServices() RegionBackendServiceInformer {
	return &regionBackendServiceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionDisks returns a RegionDiskInformer.
func (v *version) RegionDisks() RegionDiskInformer {
	return &regionDiskInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionDiskIamBindings returns a RegionDiskIamBindingInformer.
func (v *version) RegionDiskIamBindings() RegionDiskIamBindingInformer {
	return &regionDiskIamBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionDiskIamMembers returns a RegionDiskIamMemberInformer.
func (v *version) RegionDiskIamMembers() RegionDiskIamMemberInformer {
	return &regionDiskIamMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionDiskIamPolicies returns a RegionDiskIamPolicyInformer.
func (v *version) RegionDiskIamPolicies() RegionDiskIamPolicyInformer {
	return &regionDiskIamPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionDiskResourcePolicyAttachments returns a RegionDiskResourcePolicyAttachmentInformer.
func (v *version) RegionDiskResourcePolicyAttachments() RegionDiskResourcePolicyAttachmentInformer {
	return &regionDiskResourcePolicyAttachmentInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionHealthChecks returns a RegionHealthCheckInformer.
func (v *version) RegionHealthChecks() RegionHealthCheckInformer {
	return &regionHealthCheckInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionInstanceGroupManagers returns a RegionInstanceGroupManagerInformer.
func (v *version) RegionInstanceGroupManagers() RegionInstanceGroupManagerInformer {
	return &regionInstanceGroupManagerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionNetworkEndpointGroups returns a RegionNetworkEndpointGroupInformer.
func (v *version) RegionNetworkEndpointGroups() RegionNetworkEndpointGroupInformer {
	return &regionNetworkEndpointGroupInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionPerInstanceConfigs returns a RegionPerInstanceConfigInformer.
func (v *version) RegionPerInstanceConfigs() RegionPerInstanceConfigInformer {
	return &regionPerInstanceConfigInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionSslCertificates returns a RegionSslCertificateInformer.
func (v *version) RegionSslCertificates() RegionSslCertificateInformer {
	return &regionSslCertificateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionTargetHTTPProxies returns a RegionTargetHTTPProxyInformer.
func (v *version) RegionTargetHTTPProxies() RegionTargetHTTPProxyInformer {
	return &regionTargetHTTPProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionTargetHTTPSProxies returns a RegionTargetHTTPSProxyInformer.
func (v *version) RegionTargetHTTPSProxies() RegionTargetHTTPSProxyInformer {
	return &regionTargetHTTPSProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RegionURLMaps returns a RegionURLMapInformer.
func (v *version) RegionURLMaps() RegionURLMapInformer {
	return &regionURLMapInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Reservations returns a ReservationInformer.
func (v *version) Reservations() ReservationInformer {
	return &reservationInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// ResourcePolicies returns a ResourcePolicyInformer.
func (v *version) ResourcePolicies() ResourcePolicyInformer {
	return &resourcePolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Routes returns a RouteInformer.
func (v *version) Routes() RouteInformer {
	return &routeInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Routers returns a RouterInformer.
func (v *version) Routers() RouterInformer {
	return &routerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RouterInterfaces returns a RouterInterfaceInformer.
func (v *version) RouterInterfaces() RouterInterfaceInformer {
	return &routerInterfaceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RouterNATs returns a RouterNATInformer.
func (v *version) RouterNATs() RouterNATInformer {
	return &routerNATInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// RouterPeers returns a RouterPeerInformer.
func (v *version) RouterPeers() RouterPeerInformer {
	return &routerPeerInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SecurityPolicies returns a SecurityPolicyInformer.
func (v *version) SecurityPolicies() SecurityPolicyInformer {
	return &securityPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SharedVpcHostProjects returns a SharedVpcHostProjectInformer.
func (v *version) SharedVpcHostProjects() SharedVpcHostProjectInformer {
	return &sharedVpcHostProjectInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SharedVpcServiceProjects returns a SharedVpcServiceProjectInformer.
func (v *version) SharedVpcServiceProjects() SharedVpcServiceProjectInformer {
	return &sharedVpcServiceProjectInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Snapshots returns a SnapshotInformer.
func (v *version) Snapshots() SnapshotInformer {
	return &snapshotInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SslCertificates returns a SslCertificateInformer.
func (v *version) SslCertificates() SslCertificateInformer {
	return &sslCertificateInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SslPolicies returns a SslPolicyInformer.
func (v *version) SslPolicies() SslPolicyInformer {
	return &sslPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Subnetworks returns a SubnetworkInformer.
func (v *version) Subnetworks() SubnetworkInformer {
	return &subnetworkInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SubnetworkIamBindings returns a SubnetworkIamBindingInformer.
func (v *version) SubnetworkIamBindings() SubnetworkIamBindingInformer {
	return &subnetworkIamBindingInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SubnetworkIamMembers returns a SubnetworkIamMemberInformer.
func (v *version) SubnetworkIamMembers() SubnetworkIamMemberInformer {
	return &subnetworkIamMemberInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// SubnetworkIamPolicies returns a SubnetworkIamPolicyInformer.
func (v *version) SubnetworkIamPolicies() SubnetworkIamPolicyInformer {
	return &subnetworkIamPolicyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetGrpcProxies returns a TargetGrpcProxyInformer.
func (v *version) TargetGrpcProxies() TargetGrpcProxyInformer {
	return &targetGrpcProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetHTTPProxies returns a TargetHTTPProxyInformer.
func (v *version) TargetHTTPProxies() TargetHTTPProxyInformer {
	return &targetHTTPProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetHTTPSProxies returns a TargetHTTPSProxyInformer.
func (v *version) TargetHTTPSProxies() TargetHTTPSProxyInformer {
	return &targetHTTPSProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetInstances returns a TargetInstanceInformer.
func (v *version) TargetInstances() TargetInstanceInformer {
	return &targetInstanceInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetPools returns a TargetPoolInformer.
func (v *version) TargetPools() TargetPoolInformer {
	return &targetPoolInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetSslProxies returns a TargetSslProxyInformer.
func (v *version) TargetSslProxies() TargetSslProxyInformer {
	return &targetSslProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// TargetTcpProxies returns a TargetTcpProxyInformer.
func (v *version) TargetTcpProxies() TargetTcpProxyInformer {
	return &targetTcpProxyInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// UrlMaps returns a UrlMapInformer.
func (v *version) UrlMaps() UrlMapInformer {
	return &urlMapInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpnGateways returns a VpnGatewayInformer.
func (v *version) VpnGateways() VpnGatewayInformer {
	return &vpnGatewayInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// VpnTunnels returns a VpnTunnelInformer.
func (v *version) VpnTunnels() VpnTunnelInformer {
	return &vpnTunnelInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
