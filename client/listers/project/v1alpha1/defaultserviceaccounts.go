/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/project/v1alpha1"
)

// DefaultServiceAccountsLister helps list DefaultServiceAccountses.
// All objects returned here must be treated as read-only.
type DefaultServiceAccountsLister interface {
	// List lists all DefaultServiceAccountses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DefaultServiceAccounts, err error)
	// DefaultServiceAccountses returns an object that can list and get DefaultServiceAccountses.
	DefaultServiceAccountses(namespace string) DefaultServiceAccountsNamespaceLister
	DefaultServiceAccountsListerExpansion
}

// defaultServiceAccountsLister implements the DefaultServiceAccountsLister interface.
type defaultServiceAccountsLister struct {
	indexer cache.Indexer
}

// NewDefaultServiceAccountsLister returns a new DefaultServiceAccountsLister.
func NewDefaultServiceAccountsLister(indexer cache.Indexer) DefaultServiceAccountsLister {
	return &defaultServiceAccountsLister{indexer: indexer}
}

// List lists all DefaultServiceAccountses in the indexer.
func (s *defaultServiceAccountsLister) List(selector labels.Selector) (ret []*v1alpha1.DefaultServiceAccounts, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DefaultServiceAccounts))
	})
	return ret, err
}

// DefaultServiceAccountses returns an object that can list and get DefaultServiceAccountses.
func (s *defaultServiceAccountsLister) DefaultServiceAccountses(namespace string) DefaultServiceAccountsNamespaceLister {
	return defaultServiceAccountsNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DefaultServiceAccountsNamespaceLister helps list and get DefaultServiceAccountses.
// All objects returned here must be treated as read-only.
type DefaultServiceAccountsNamespaceLister interface {
	// List lists all DefaultServiceAccountses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.DefaultServiceAccounts, err error)
	// Get retrieves the DefaultServiceAccounts from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.DefaultServiceAccounts, error)
	DefaultServiceAccountsNamespaceListerExpansion
}

// defaultServiceAccountsNamespaceLister implements the DefaultServiceAccountsNamespaceLister
// interface.
type defaultServiceAccountsNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DefaultServiceAccountses in the indexer for a given namespace.
func (s defaultServiceAccountsNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.DefaultServiceAccounts, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.DefaultServiceAccounts))
	})
	return ret, err
}

// Get retrieves the DefaultServiceAccounts from the indexer for a given namespace and name.
func (s defaultServiceAccountsNamespaceLister) Get(name string) (*v1alpha1.DefaultServiceAccounts, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("defaultserviceaccounts"), name)
	}
	return obj.(*v1alpha1.DefaultServiceAccounts), nil
}
