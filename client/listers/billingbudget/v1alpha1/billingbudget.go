/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/billingbudget/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BillingBudgetLister helps list BillingBudgets.
// All objects returned here must be treated as read-only.
type BillingBudgetLister interface {
	// List lists all BillingBudgets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingBudget, err error)
	// BillingBudgets returns an object that can list and get BillingBudgets.
	BillingBudgets(namespace string) BillingBudgetNamespaceLister
	BillingBudgetListerExpansion
}

// billingBudgetLister implements the BillingBudgetLister interface.
type billingBudgetLister struct {
	indexer cache.Indexer
}

// NewBillingBudgetLister returns a new BillingBudgetLister.
func NewBillingBudgetLister(indexer cache.Indexer) BillingBudgetLister {
	return &billingBudgetLister{indexer: indexer}
}

// List lists all BillingBudgets in the indexer.
func (s *billingBudgetLister) List(selector labels.Selector) (ret []*v1alpha1.BillingBudget, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingBudget))
	})
	return ret, err
}

// BillingBudgets returns an object that can list and get BillingBudgets.
func (s *billingBudgetLister) BillingBudgets(namespace string) BillingBudgetNamespaceLister {
	return billingBudgetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BillingBudgetNamespaceLister helps list and get BillingBudgets.
// All objects returned here must be treated as read-only.
type BillingBudgetNamespaceLister interface {
	// List lists all BillingBudgets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingBudget, err error)
	// Get retrieves the BillingBudget from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BillingBudget, error)
	BillingBudgetNamespaceListerExpansion
}

// billingBudgetNamespaceLister implements the BillingBudgetNamespaceLister
// interface.
type billingBudgetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BillingBudgets in the indexer for a given namespace.
func (s billingBudgetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BillingBudget, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingBudget))
	})
	return ret, err
}

// Get retrieves the BillingBudget from the indexer for a given namespace and name.
func (s billingBudgetNamespaceLister) Get(name string) (*v1alpha1.BillingBudget, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("billingbudget"), name)
	}
	return obj.(*v1alpha1.BillingBudget), nil
}
