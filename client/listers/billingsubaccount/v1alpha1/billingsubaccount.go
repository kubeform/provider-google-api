/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/billingsubaccount/v1alpha1"
)

// BillingSubaccountLister helps list BillingSubaccounts.
// All objects returned here must be treated as read-only.
type BillingSubaccountLister interface {
	// List lists all BillingSubaccounts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingSubaccount, err error)
	// BillingSubaccounts returns an object that can list and get BillingSubaccounts.
	BillingSubaccounts(namespace string) BillingSubaccountNamespaceLister
	BillingSubaccountListerExpansion
}

// billingSubaccountLister implements the BillingSubaccountLister interface.
type billingSubaccountLister struct {
	indexer cache.Indexer
}

// NewBillingSubaccountLister returns a new BillingSubaccountLister.
func NewBillingSubaccountLister(indexer cache.Indexer) BillingSubaccountLister {
	return &billingSubaccountLister{indexer: indexer}
}

// List lists all BillingSubaccounts in the indexer.
func (s *billingSubaccountLister) List(selector labels.Selector) (ret []*v1alpha1.BillingSubaccount, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingSubaccount))
	})
	return ret, err
}

// BillingSubaccounts returns an object that can list and get BillingSubaccounts.
func (s *billingSubaccountLister) BillingSubaccounts(namespace string) BillingSubaccountNamespaceLister {
	return billingSubaccountNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BillingSubaccountNamespaceLister helps list and get BillingSubaccounts.
// All objects returned here must be treated as read-only.
type BillingSubaccountNamespaceLister interface {
	// List lists all BillingSubaccounts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingSubaccount, err error)
	// Get retrieves the BillingSubaccount from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BillingSubaccount, error)
	BillingSubaccountNamespaceListerExpansion
}

// billingSubaccountNamespaceLister implements the BillingSubaccountNamespaceLister
// interface.
type billingSubaccountNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BillingSubaccounts in the indexer for a given namespace.
func (s billingSubaccountNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BillingSubaccount, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingSubaccount))
	})
	return ret, err
}

// Get retrieves the BillingSubaccount from the indexer for a given namespace and name.
func (s billingSubaccountNamespaceLister) Get(name string) (*v1alpha1.BillingSubaccount, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("billingsubaccount"), name)
	}
	return obj.(*v1alpha1.BillingSubaccount), nil
}
