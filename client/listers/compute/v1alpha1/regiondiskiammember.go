/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RegionDiskIamMemberLister helps list RegionDiskIamMembers.
// All objects returned here must be treated as read-only.
type RegionDiskIamMemberLister interface {
	// List lists all RegionDiskIamMembers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionDiskIamMember, err error)
	// RegionDiskIamMembers returns an object that can list and get RegionDiskIamMembers.
	RegionDiskIamMembers(namespace string) RegionDiskIamMemberNamespaceLister
	RegionDiskIamMemberListerExpansion
}

// regionDiskIamMemberLister implements the RegionDiskIamMemberLister interface.
type regionDiskIamMemberLister struct {
	indexer cache.Indexer
}

// NewRegionDiskIamMemberLister returns a new RegionDiskIamMemberLister.
func NewRegionDiskIamMemberLister(indexer cache.Indexer) RegionDiskIamMemberLister {
	return &regionDiskIamMemberLister{indexer: indexer}
}

// List lists all RegionDiskIamMembers in the indexer.
func (s *regionDiskIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.RegionDiskIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionDiskIamMember))
	})
	return ret, err
}

// RegionDiskIamMembers returns an object that can list and get RegionDiskIamMembers.
func (s *regionDiskIamMemberLister) RegionDiskIamMembers(namespace string) RegionDiskIamMemberNamespaceLister {
	return regionDiskIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RegionDiskIamMemberNamespaceLister helps list and get RegionDiskIamMembers.
// All objects returned here must be treated as read-only.
type RegionDiskIamMemberNamespaceLister interface {
	// List lists all RegionDiskIamMembers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionDiskIamMember, err error)
	// Get retrieves the RegionDiskIamMember from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RegionDiskIamMember, error)
	RegionDiskIamMemberNamespaceListerExpansion
}

// regionDiskIamMemberNamespaceLister implements the RegionDiskIamMemberNamespaceLister
// interface.
type regionDiskIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RegionDiskIamMembers in the indexer for a given namespace.
func (s regionDiskIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RegionDiskIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionDiskIamMember))
	})
	return ret, err
}

// Get retrieves the RegionDiskIamMember from the indexer for a given namespace and name.
func (s regionDiskIamMemberNamespaceLister) Get(name string) (*v1alpha1.RegionDiskIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("regiondiskiammember"), name)
	}
	return obj.(*v1alpha1.RegionDiskIamMember), nil
}
