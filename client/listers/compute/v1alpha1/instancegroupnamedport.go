/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"
)

// InstanceGroupNamedPortLister helps list InstanceGroupNamedPorts.
// All objects returned here must be treated as read-only.
type InstanceGroupNamedPortLister interface {
	// List lists all InstanceGroupNamedPorts in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupNamedPort, err error)
	// InstanceGroupNamedPorts returns an object that can list and get InstanceGroupNamedPorts.
	InstanceGroupNamedPorts(namespace string) InstanceGroupNamedPortNamespaceLister
	InstanceGroupNamedPortListerExpansion
}

// instanceGroupNamedPortLister implements the InstanceGroupNamedPortLister interface.
type instanceGroupNamedPortLister struct {
	indexer cache.Indexer
}

// NewInstanceGroupNamedPortLister returns a new InstanceGroupNamedPortLister.
func NewInstanceGroupNamedPortLister(indexer cache.Indexer) InstanceGroupNamedPortLister {
	return &instanceGroupNamedPortLister{indexer: indexer}
}

// List lists all InstanceGroupNamedPorts in the indexer.
func (s *instanceGroupNamedPortLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupNamedPort, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceGroupNamedPort))
	})
	return ret, err
}

// InstanceGroupNamedPorts returns an object that can list and get InstanceGroupNamedPorts.
func (s *instanceGroupNamedPortLister) InstanceGroupNamedPorts(namespace string) InstanceGroupNamedPortNamespaceLister {
	return instanceGroupNamedPortNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// InstanceGroupNamedPortNamespaceLister helps list and get InstanceGroupNamedPorts.
// All objects returned here must be treated as read-only.
type InstanceGroupNamedPortNamespaceLister interface {
	// List lists all InstanceGroupNamedPorts in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupNamedPort, err error)
	// Get retrieves the InstanceGroupNamedPort from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.InstanceGroupNamedPort, error)
	InstanceGroupNamedPortNamespaceListerExpansion
}

// instanceGroupNamedPortNamespaceLister implements the InstanceGroupNamedPortNamespaceLister
// interface.
type instanceGroupNamedPortNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all InstanceGroupNamedPorts in the indexer for a given namespace.
func (s instanceGroupNamedPortNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.InstanceGroupNamedPort, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.InstanceGroupNamedPort))
	})
	return ret, err
}

// Get retrieves the InstanceGroupNamedPort from the indexer for a given namespace and name.
func (s instanceGroupNamedPortNamespaceLister) Get(name string) (*v1alpha1.InstanceGroupNamedPort, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("instancegroupnamedport"), name)
	}
	return obj.(*v1alpha1.InstanceGroupNamedPort), nil
}
