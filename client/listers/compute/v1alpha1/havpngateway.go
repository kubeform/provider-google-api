/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HaVPNGatewayLister helps list HaVPNGateways.
// All objects returned here must be treated as read-only.
type HaVPNGatewayLister interface {
	// List lists all HaVPNGateways in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HaVPNGateway, err error)
	// HaVPNGateways returns an object that can list and get HaVPNGateways.
	HaVPNGateways(namespace string) HaVPNGatewayNamespaceLister
	HaVPNGatewayListerExpansion
}

// haVPNGatewayLister implements the HaVPNGatewayLister interface.
type haVPNGatewayLister struct {
	indexer cache.Indexer
}

// NewHaVPNGatewayLister returns a new HaVPNGatewayLister.
func NewHaVPNGatewayLister(indexer cache.Indexer) HaVPNGatewayLister {
	return &haVPNGatewayLister{indexer: indexer}
}

// List lists all HaVPNGateways in the indexer.
func (s *haVPNGatewayLister) List(selector labels.Selector) (ret []*v1alpha1.HaVPNGateway, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HaVPNGateway))
	})
	return ret, err
}

// HaVPNGateways returns an object that can list and get HaVPNGateways.
func (s *haVPNGatewayLister) HaVPNGateways(namespace string) HaVPNGatewayNamespaceLister {
	return haVPNGatewayNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HaVPNGatewayNamespaceLister helps list and get HaVPNGateways.
// All objects returned here must be treated as read-only.
type HaVPNGatewayNamespaceLister interface {
	// List lists all HaVPNGateways in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.HaVPNGateway, err error)
	// Get retrieves the HaVPNGateway from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.HaVPNGateway, error)
	HaVPNGatewayNamespaceListerExpansion
}

// haVPNGatewayNamespaceLister implements the HaVPNGatewayNamespaceLister
// interface.
type haVPNGatewayNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HaVPNGateways in the indexer for a given namespace.
func (s haVPNGatewayNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.HaVPNGateway, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.HaVPNGateway))
	})
	return ret, err
}

// Get retrieves the HaVPNGateway from the indexer for a given namespace and name.
func (s haVPNGatewayNamespaceLister) Get(name string) (*v1alpha1.HaVPNGateway, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("havpngateway"), name)
	}
	return obj.(*v1alpha1.HaVPNGateway), nil
}
