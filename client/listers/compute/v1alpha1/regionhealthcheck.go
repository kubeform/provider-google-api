/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RegionHealthCheckLister helps list RegionHealthChecks.
// All objects returned here must be treated as read-only.
type RegionHealthCheckLister interface {
	// List lists all RegionHealthChecks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionHealthCheck, err error)
	// RegionHealthChecks returns an object that can list and get RegionHealthChecks.
	RegionHealthChecks(namespace string) RegionHealthCheckNamespaceLister
	RegionHealthCheckListerExpansion
}

// regionHealthCheckLister implements the RegionHealthCheckLister interface.
type regionHealthCheckLister struct {
	indexer cache.Indexer
}

// NewRegionHealthCheckLister returns a new RegionHealthCheckLister.
func NewRegionHealthCheckLister(indexer cache.Indexer) RegionHealthCheckLister {
	return &regionHealthCheckLister{indexer: indexer}
}

// List lists all RegionHealthChecks in the indexer.
func (s *regionHealthCheckLister) List(selector labels.Selector) (ret []*v1alpha1.RegionHealthCheck, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionHealthCheck))
	})
	return ret, err
}

// RegionHealthChecks returns an object that can list and get RegionHealthChecks.
func (s *regionHealthCheckLister) RegionHealthChecks(namespace string) RegionHealthCheckNamespaceLister {
	return regionHealthCheckNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RegionHealthCheckNamespaceLister helps list and get RegionHealthChecks.
// All objects returned here must be treated as read-only.
type RegionHealthCheckNamespaceLister interface {
	// List lists all RegionHealthChecks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionHealthCheck, err error)
	// Get retrieves the RegionHealthCheck from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RegionHealthCheck, error)
	RegionHealthCheckNamespaceListerExpansion
}

// regionHealthCheckNamespaceLister implements the RegionHealthCheckNamespaceLister
// interface.
type regionHealthCheckNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RegionHealthChecks in the indexer for a given namespace.
func (s regionHealthCheckNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RegionHealthCheck, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionHealthCheck))
	})
	return ret, err
}

// Get retrieves the RegionHealthCheck from the indexer for a given namespace and name.
func (s regionHealthCheckNamespaceLister) Get(name string) (*v1alpha1.RegionHealthCheck, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("regionhealthcheck"), name)
	}
	return obj.(*v1alpha1.RegionHealthCheck), nil
}
