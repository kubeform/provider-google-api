/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RegionDiskResourcePolicyAttachmentLister helps list RegionDiskResourcePolicyAttachments.
// All objects returned here must be treated as read-only.
type RegionDiskResourcePolicyAttachmentLister interface {
	// List lists all RegionDiskResourcePolicyAttachments in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionDiskResourcePolicyAttachment, err error)
	// RegionDiskResourcePolicyAttachments returns an object that can list and get RegionDiskResourcePolicyAttachments.
	RegionDiskResourcePolicyAttachments(namespace string) RegionDiskResourcePolicyAttachmentNamespaceLister
	RegionDiskResourcePolicyAttachmentListerExpansion
}

// regionDiskResourcePolicyAttachmentLister implements the RegionDiskResourcePolicyAttachmentLister interface.
type regionDiskResourcePolicyAttachmentLister struct {
	indexer cache.Indexer
}

// NewRegionDiskResourcePolicyAttachmentLister returns a new RegionDiskResourcePolicyAttachmentLister.
func NewRegionDiskResourcePolicyAttachmentLister(indexer cache.Indexer) RegionDiskResourcePolicyAttachmentLister {
	return &regionDiskResourcePolicyAttachmentLister{indexer: indexer}
}

// List lists all RegionDiskResourcePolicyAttachments in the indexer.
func (s *regionDiskResourcePolicyAttachmentLister) List(selector labels.Selector) (ret []*v1alpha1.RegionDiskResourcePolicyAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionDiskResourcePolicyAttachment))
	})
	return ret, err
}

// RegionDiskResourcePolicyAttachments returns an object that can list and get RegionDiskResourcePolicyAttachments.
func (s *regionDiskResourcePolicyAttachmentLister) RegionDiskResourcePolicyAttachments(namespace string) RegionDiskResourcePolicyAttachmentNamespaceLister {
	return regionDiskResourcePolicyAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RegionDiskResourcePolicyAttachmentNamespaceLister helps list and get RegionDiskResourcePolicyAttachments.
// All objects returned here must be treated as read-only.
type RegionDiskResourcePolicyAttachmentNamespaceLister interface {
	// List lists all RegionDiskResourcePolicyAttachments in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.RegionDiskResourcePolicyAttachment, err error)
	// Get retrieves the RegionDiskResourcePolicyAttachment from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.RegionDiskResourcePolicyAttachment, error)
	RegionDiskResourcePolicyAttachmentNamespaceListerExpansion
}

// regionDiskResourcePolicyAttachmentNamespaceLister implements the RegionDiskResourcePolicyAttachmentNamespaceLister
// interface.
type regionDiskResourcePolicyAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RegionDiskResourcePolicyAttachments in the indexer for a given namespace.
func (s regionDiskResourcePolicyAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.RegionDiskResourcePolicyAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.RegionDiskResourcePolicyAttachment))
	})
	return ret, err
}

// Get retrieves the RegionDiskResourcePolicyAttachment from the indexer for a given namespace and name.
func (s regionDiskResourcePolicyAttachmentNamespaceLister) Get(name string) (*v1alpha1.RegionDiskResourcePolicyAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("regiondiskresourcepolicyattachment"), name)
	}
	return obj.(*v1alpha1.RegionDiskResourcePolicyAttachment), nil
}
