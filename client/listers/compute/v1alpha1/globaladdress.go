/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/compute/v1alpha1"
)

// GlobalAddressLister helps list GlobalAddresses.
// All objects returned here must be treated as read-only.
type GlobalAddressLister interface {
	// List lists all GlobalAddresses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GlobalAddress, err error)
	// GlobalAddresses returns an object that can list and get GlobalAddresses.
	GlobalAddresses(namespace string) GlobalAddressNamespaceLister
	GlobalAddressListerExpansion
}

// globalAddressLister implements the GlobalAddressLister interface.
type globalAddressLister struct {
	indexer cache.Indexer
}

// NewGlobalAddressLister returns a new GlobalAddressLister.
func NewGlobalAddressLister(indexer cache.Indexer) GlobalAddressLister {
	return &globalAddressLister{indexer: indexer}
}

// List lists all GlobalAddresses in the indexer.
func (s *globalAddressLister) List(selector labels.Selector) (ret []*v1alpha1.GlobalAddress, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlobalAddress))
	})
	return ret, err
}

// GlobalAddresses returns an object that can list and get GlobalAddresses.
func (s *globalAddressLister) GlobalAddresses(namespace string) GlobalAddressNamespaceLister {
	return globalAddressNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// GlobalAddressNamespaceLister helps list and get GlobalAddresses.
// All objects returned here must be treated as read-only.
type GlobalAddressNamespaceLister interface {
	// List lists all GlobalAddresses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.GlobalAddress, err error)
	// Get retrieves the GlobalAddress from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.GlobalAddress, error)
	GlobalAddressNamespaceListerExpansion
}

// globalAddressNamespaceLister implements the GlobalAddressNamespaceLister
// interface.
type globalAddressNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all GlobalAddresses in the indexer for a given namespace.
func (s globalAddressNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.GlobalAddress, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.GlobalAddress))
	})
	return ret, err
}

// Get retrieves the GlobalAddress from the indexer for a given namespace and name.
func (s globalAddressNamespaceLister) Get(name string) (*v1alpha1.GlobalAddress, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("globaladdress"), name)
	}
	return obj.(*v1alpha1.GlobalAddress), nil
}
