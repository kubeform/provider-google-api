/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/tags/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TagValueIamMemberLister helps list TagValueIamMembers.
// All objects returned here must be treated as read-only.
type TagValueIamMemberLister interface {
	// List lists all TagValueIamMembers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TagValueIamMember, err error)
	// TagValueIamMembers returns an object that can list and get TagValueIamMembers.
	TagValueIamMembers(namespace string) TagValueIamMemberNamespaceLister
	TagValueIamMemberListerExpansion
}

// tagValueIamMemberLister implements the TagValueIamMemberLister interface.
type tagValueIamMemberLister struct {
	indexer cache.Indexer
}

// NewTagValueIamMemberLister returns a new TagValueIamMemberLister.
func NewTagValueIamMemberLister(indexer cache.Indexer) TagValueIamMemberLister {
	return &tagValueIamMemberLister{indexer: indexer}
}

// List lists all TagValueIamMembers in the indexer.
func (s *tagValueIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.TagValueIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TagValueIamMember))
	})
	return ret, err
}

// TagValueIamMembers returns an object that can list and get TagValueIamMembers.
func (s *tagValueIamMemberLister) TagValueIamMembers(namespace string) TagValueIamMemberNamespaceLister {
	return tagValueIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TagValueIamMemberNamespaceLister helps list and get TagValueIamMembers.
// All objects returned here must be treated as read-only.
type TagValueIamMemberNamespaceLister interface {
	// List lists all TagValueIamMembers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TagValueIamMember, err error)
	// Get retrieves the TagValueIamMember from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TagValueIamMember, error)
	TagValueIamMemberNamespaceListerExpansion
}

// tagValueIamMemberNamespaceLister implements the TagValueIamMemberNamespaceLister
// interface.
type tagValueIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TagValueIamMembers in the indexer for a given namespace.
func (s tagValueIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TagValueIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TagValueIamMember))
	})
	return ret, err
}

// Get retrieves the TagValueIamMember from the indexer for a given namespace and name.
func (s tagValueIamMemberNamespaceLister) Get(name string) (*v1alpha1.TagValueIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("tagvalueiammember"), name)
	}
	return obj.(*v1alpha1.TagValueIamMember), nil
}
