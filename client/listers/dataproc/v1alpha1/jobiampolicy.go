/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/dataproc/v1alpha1"
)

// JobIamPolicyLister helps list JobIamPolicies.
// All objects returned here must be treated as read-only.
type JobIamPolicyLister interface {
	// List lists all JobIamPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobIamPolicy, err error)
	// JobIamPolicies returns an object that can list and get JobIamPolicies.
	JobIamPolicies(namespace string) JobIamPolicyNamespaceLister
	JobIamPolicyListerExpansion
}

// jobIamPolicyLister implements the JobIamPolicyLister interface.
type jobIamPolicyLister struct {
	indexer cache.Indexer
}

// NewJobIamPolicyLister returns a new JobIamPolicyLister.
func NewJobIamPolicyLister(indexer cache.Indexer) JobIamPolicyLister {
	return &jobIamPolicyLister{indexer: indexer}
}

// List lists all JobIamPolicies in the indexer.
func (s *jobIamPolicyLister) List(selector labels.Selector) (ret []*v1alpha1.JobIamPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobIamPolicy))
	})
	return ret, err
}

// JobIamPolicies returns an object that can list and get JobIamPolicies.
func (s *jobIamPolicyLister) JobIamPolicies(namespace string) JobIamPolicyNamespaceLister {
	return jobIamPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JobIamPolicyNamespaceLister helps list and get JobIamPolicies.
// All objects returned here must be treated as read-only.
type JobIamPolicyNamespaceLister interface {
	// List lists all JobIamPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobIamPolicy, err error)
	// Get retrieves the JobIamPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.JobIamPolicy, error)
	JobIamPolicyNamespaceListerExpansion
}

// jobIamPolicyNamespaceLister implements the JobIamPolicyNamespaceLister
// interface.
type jobIamPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JobIamPolicies in the indexer for a given namespace.
func (s jobIamPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JobIamPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobIamPolicy))
	})
	return ret, err
}

// Get retrieves the JobIamPolicy from the indexer for a given namespace and name.
func (s jobIamPolicyNamespaceLister) Get(name string) (*v1alpha1.JobIamPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jobiampolicy"), name)
	}
	return obj.(*v1alpha1.JobIamPolicy), nil
}
