/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/dataproc/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JobIamBindingLister helps list JobIamBindings.
// All objects returned here must be treated as read-only.
type JobIamBindingLister interface {
	// List lists all JobIamBindings in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobIamBinding, err error)
	// JobIamBindings returns an object that can list and get JobIamBindings.
	JobIamBindings(namespace string) JobIamBindingNamespaceLister
	JobIamBindingListerExpansion
}

// jobIamBindingLister implements the JobIamBindingLister interface.
type jobIamBindingLister struct {
	indexer cache.Indexer
}

// NewJobIamBindingLister returns a new JobIamBindingLister.
func NewJobIamBindingLister(indexer cache.Indexer) JobIamBindingLister {
	return &jobIamBindingLister{indexer: indexer}
}

// List lists all JobIamBindings in the indexer.
func (s *jobIamBindingLister) List(selector labels.Selector) (ret []*v1alpha1.JobIamBinding, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobIamBinding))
	})
	return ret, err
}

// JobIamBindings returns an object that can list and get JobIamBindings.
func (s *jobIamBindingLister) JobIamBindings(namespace string) JobIamBindingNamespaceLister {
	return jobIamBindingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JobIamBindingNamespaceLister helps list and get JobIamBindings.
// All objects returned here must be treated as read-only.
type JobIamBindingNamespaceLister interface {
	// List lists all JobIamBindings in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.JobIamBinding, err error)
	// Get retrieves the JobIamBinding from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.JobIamBinding, error)
	JobIamBindingNamespaceListerExpansion
}

// jobIamBindingNamespaceLister implements the JobIamBindingNamespaceLister
// interface.
type jobIamBindingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JobIamBindings in the indexer for a given namespace.
func (s jobIamBindingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JobIamBinding, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JobIamBinding))
	})
	return ret, err
}

// Get retrieves the JobIamBinding from the indexer for a given namespace and name.
func (s jobIamBindingNamespaceLister) Get(name string) (*v1alpha1.JobIamBinding, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("jobiambinding"), name)
	}
	return obj.(*v1alpha1.JobIamBinding), nil
}
