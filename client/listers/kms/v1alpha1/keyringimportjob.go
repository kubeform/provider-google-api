/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/kms/v1alpha1"
)

// KeyRingImportJobLister helps list KeyRingImportJobs.
// All objects returned here must be treated as read-only.
type KeyRingImportJobLister interface {
	// List lists all KeyRingImportJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeyRingImportJob, err error)
	// KeyRingImportJobs returns an object that can list and get KeyRingImportJobs.
	KeyRingImportJobs(namespace string) KeyRingImportJobNamespaceLister
	KeyRingImportJobListerExpansion
}

// keyRingImportJobLister implements the KeyRingImportJobLister interface.
type keyRingImportJobLister struct {
	indexer cache.Indexer
}

// NewKeyRingImportJobLister returns a new KeyRingImportJobLister.
func NewKeyRingImportJobLister(indexer cache.Indexer) KeyRingImportJobLister {
	return &keyRingImportJobLister{indexer: indexer}
}

// List lists all KeyRingImportJobs in the indexer.
func (s *keyRingImportJobLister) List(selector labels.Selector) (ret []*v1alpha1.KeyRingImportJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeyRingImportJob))
	})
	return ret, err
}

// KeyRingImportJobs returns an object that can list and get KeyRingImportJobs.
func (s *keyRingImportJobLister) KeyRingImportJobs(namespace string) KeyRingImportJobNamespaceLister {
	return keyRingImportJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KeyRingImportJobNamespaceLister helps list and get KeyRingImportJobs.
// All objects returned here must be treated as read-only.
type KeyRingImportJobNamespaceLister interface {
	// List lists all KeyRingImportJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KeyRingImportJob, err error)
	// Get retrieves the KeyRingImportJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KeyRingImportJob, error)
	KeyRingImportJobNamespaceListerExpansion
}

// keyRingImportJobNamespaceLister implements the KeyRingImportJobNamespaceLister
// interface.
type keyRingImportJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KeyRingImportJobs in the indexer for a given namespace.
func (s keyRingImportJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KeyRingImportJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeyRingImportJob))
	})
	return ret, err
}

// Get retrieves the KeyRingImportJob from the indexer for a given namespace and name.
func (s keyRingImportJobNamespaceLister) Get(name string) (*v1alpha1.KeyRingImportJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("keyringimportjob"), name)
	}
	return obj.(*v1alpha1.KeyRingImportJob), nil
}
