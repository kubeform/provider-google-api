/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/accesscontext/v1alpha1"
)

// ManagerServicePerimeterBatchLister helps list ManagerServicePerimeterBatches.
// All objects returned here must be treated as read-only.
type ManagerServicePerimeterBatchLister interface {
	// List lists all ManagerServicePerimeterBatches in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ManagerServicePerimeterBatch, err error)
	// ManagerServicePerimeterBatches returns an object that can list and get ManagerServicePerimeterBatches.
	ManagerServicePerimeterBatches(namespace string) ManagerServicePerimeterBatchNamespaceLister
	ManagerServicePerimeterBatchListerExpansion
}

// managerServicePerimeterBatchLister implements the ManagerServicePerimeterBatchLister interface.
type managerServicePerimeterBatchLister struct {
	indexer cache.Indexer
}

// NewManagerServicePerimeterBatchLister returns a new ManagerServicePerimeterBatchLister.
func NewManagerServicePerimeterBatchLister(indexer cache.Indexer) ManagerServicePerimeterBatchLister {
	return &managerServicePerimeterBatchLister{indexer: indexer}
}

// List lists all ManagerServicePerimeterBatches in the indexer.
func (s *managerServicePerimeterBatchLister) List(selector labels.Selector) (ret []*v1alpha1.ManagerServicePerimeterBatch, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ManagerServicePerimeterBatch))
	})
	return ret, err
}

// ManagerServicePerimeterBatches returns an object that can list and get ManagerServicePerimeterBatches.
func (s *managerServicePerimeterBatchLister) ManagerServicePerimeterBatches(namespace string) ManagerServicePerimeterBatchNamespaceLister {
	return managerServicePerimeterBatchNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ManagerServicePerimeterBatchNamespaceLister helps list and get ManagerServicePerimeterBatches.
// All objects returned here must be treated as read-only.
type ManagerServicePerimeterBatchNamespaceLister interface {
	// List lists all ManagerServicePerimeterBatches in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ManagerServicePerimeterBatch, err error)
	// Get retrieves the ManagerServicePerimeterBatch from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ManagerServicePerimeterBatch, error)
	ManagerServicePerimeterBatchNamespaceListerExpansion
}

// managerServicePerimeterBatchNamespaceLister implements the ManagerServicePerimeterBatchNamespaceLister
// interface.
type managerServicePerimeterBatchNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ManagerServicePerimeterBatches in the indexer for a given namespace.
func (s managerServicePerimeterBatchNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ManagerServicePerimeterBatch, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ManagerServicePerimeterBatch))
	})
	return ret, err
}

// Get retrieves the ManagerServicePerimeterBatch from the indexer for a given namespace and name.
func (s managerServicePerimeterBatchNamespaceLister) Get(name string) (*v1alpha1.ManagerServicePerimeterBatch, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("managerserviceperimeterbatch"), name)
	}
	return obj.(*v1alpha1.ManagerServicePerimeterBatch), nil
}
