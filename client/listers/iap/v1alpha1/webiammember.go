/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/iap/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WebIamMemberLister helps list WebIamMembers.
// All objects returned here must be treated as read-only.
type WebIamMemberLister interface {
	// List lists all WebIamMembers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WebIamMember, err error)
	// WebIamMembers returns an object that can list and get WebIamMembers.
	WebIamMembers(namespace string) WebIamMemberNamespaceLister
	WebIamMemberListerExpansion
}

// webIamMemberLister implements the WebIamMemberLister interface.
type webIamMemberLister struct {
	indexer cache.Indexer
}

// NewWebIamMemberLister returns a new WebIamMemberLister.
func NewWebIamMemberLister(indexer cache.Indexer) WebIamMemberLister {
	return &webIamMemberLister{indexer: indexer}
}

// List lists all WebIamMembers in the indexer.
func (s *webIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.WebIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WebIamMember))
	})
	return ret, err
}

// WebIamMembers returns an object that can list and get WebIamMembers.
func (s *webIamMemberLister) WebIamMembers(namespace string) WebIamMemberNamespaceLister {
	return webIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WebIamMemberNamespaceLister helps list and get WebIamMembers.
// All objects returned here must be treated as read-only.
type WebIamMemberNamespaceLister interface {
	// List lists all WebIamMembers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WebIamMember, err error)
	// Get retrieves the WebIamMember from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.WebIamMember, error)
	WebIamMemberNamespaceListerExpansion
}

// webIamMemberNamespaceLister implements the WebIamMemberNamespaceLister
// interface.
type webIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WebIamMembers in the indexer for a given namespace.
func (s webIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WebIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WebIamMember))
	})
	return ret, err
}

// Get retrieves the WebIamMember from the indexer for a given namespace and name.
func (s webIamMemberNamespaceLister) Get(name string) (*v1alpha1.WebIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("webiammember"), name)
	}
	return obj.(*v1alpha1.WebIamMember), nil
}
