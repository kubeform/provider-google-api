/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/data/v1alpha1"
)

// LossPreventionInspectTemplateLister helps list LossPreventionInspectTemplates.
// All objects returned here must be treated as read-only.
type LossPreventionInspectTemplateLister interface {
	// List lists all LossPreventionInspectTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LossPreventionInspectTemplate, err error)
	// LossPreventionInspectTemplates returns an object that can list and get LossPreventionInspectTemplates.
	LossPreventionInspectTemplates(namespace string) LossPreventionInspectTemplateNamespaceLister
	LossPreventionInspectTemplateListerExpansion
}

// lossPreventionInspectTemplateLister implements the LossPreventionInspectTemplateLister interface.
type lossPreventionInspectTemplateLister struct {
	indexer cache.Indexer
}

// NewLossPreventionInspectTemplateLister returns a new LossPreventionInspectTemplateLister.
func NewLossPreventionInspectTemplateLister(indexer cache.Indexer) LossPreventionInspectTemplateLister {
	return &lossPreventionInspectTemplateLister{indexer: indexer}
}

// List lists all LossPreventionInspectTemplates in the indexer.
func (s *lossPreventionInspectTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.LossPreventionInspectTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LossPreventionInspectTemplate))
	})
	return ret, err
}

// LossPreventionInspectTemplates returns an object that can list and get LossPreventionInspectTemplates.
func (s *lossPreventionInspectTemplateLister) LossPreventionInspectTemplates(namespace string) LossPreventionInspectTemplateNamespaceLister {
	return lossPreventionInspectTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// LossPreventionInspectTemplateNamespaceLister helps list and get LossPreventionInspectTemplates.
// All objects returned here must be treated as read-only.
type LossPreventionInspectTemplateNamespaceLister interface {
	// List lists all LossPreventionInspectTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.LossPreventionInspectTemplate, err error)
	// Get retrieves the LossPreventionInspectTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.LossPreventionInspectTemplate, error)
	LossPreventionInspectTemplateNamespaceListerExpansion
}

// lossPreventionInspectTemplateNamespaceLister implements the LossPreventionInspectTemplateNamespaceLister
// interface.
type lossPreventionInspectTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all LossPreventionInspectTemplates in the indexer for a given namespace.
func (s lossPreventionInspectTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.LossPreventionInspectTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.LossPreventionInspectTemplate))
	})
	return ret, err
}

// Get retrieves the LossPreventionInspectTemplate from the indexer for a given namespace and name.
func (s lossPreventionInspectTemplateNamespaceLister) Get(name string) (*v1alpha1.LossPreventionInspectTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("losspreventioninspecttemplate"), name)
	}
	return obj.(*v1alpha1.LossPreventionInspectTemplate), nil
}
