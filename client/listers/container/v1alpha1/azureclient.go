/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/container/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureClientLister helps list AzureClients.
// All objects returned here must be treated as read-only.
type AzureClientLister interface {
	// List lists all AzureClients in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureClient, err error)
	// AzureClients returns an object that can list and get AzureClients.
	AzureClients(namespace string) AzureClientNamespaceLister
	AzureClientListerExpansion
}

// azureClientLister implements the AzureClientLister interface.
type azureClientLister struct {
	indexer cache.Indexer
}

// NewAzureClientLister returns a new AzureClientLister.
func NewAzureClientLister(indexer cache.Indexer) AzureClientLister {
	return &azureClientLister{indexer: indexer}
}

// List lists all AzureClients in the indexer.
func (s *azureClientLister) List(selector labels.Selector) (ret []*v1alpha1.AzureClient, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureClient))
	})
	return ret, err
}

// AzureClients returns an object that can list and get AzureClients.
func (s *azureClientLister) AzureClients(namespace string) AzureClientNamespaceLister {
	return azureClientNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureClientNamespaceLister helps list and get AzureClients.
// All objects returned here must be treated as read-only.
type AzureClientNamespaceLister interface {
	// List lists all AzureClients in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureClient, err error)
	// Get retrieves the AzureClient from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AzureClient, error)
	AzureClientNamespaceListerExpansion
}

// azureClientNamespaceLister implements the AzureClientNamespaceLister
// interface.
type azureClientNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureClients in the indexer for a given namespace.
func (s azureClientNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureClient, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureClient))
	})
	return ret, err
}

// Get retrieves the AzureClient from the indexer for a given namespace and name.
func (s azureClientNamespaceLister) Get(name string) (*v1alpha1.AzureClient, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("azureclient"), name)
	}
	return obj.(*v1alpha1.AzureClient), nil
}
