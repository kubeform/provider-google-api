/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/container/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AzureClusterLister helps list AzureClusters.
// All objects returned here must be treated as read-only.
type AzureClusterLister interface {
	// List lists all AzureClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureCluster, err error)
	// AzureClusters returns an object that can list and get AzureClusters.
	AzureClusters(namespace string) AzureClusterNamespaceLister
	AzureClusterListerExpansion
}

// azureClusterLister implements the AzureClusterLister interface.
type azureClusterLister struct {
	indexer cache.Indexer
}

// NewAzureClusterLister returns a new AzureClusterLister.
func NewAzureClusterLister(indexer cache.Indexer) AzureClusterLister {
	return &azureClusterLister{indexer: indexer}
}

// List lists all AzureClusters in the indexer.
func (s *azureClusterLister) List(selector labels.Selector) (ret []*v1alpha1.AzureCluster, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureCluster))
	})
	return ret, err
}

// AzureClusters returns an object that can list and get AzureClusters.
func (s *azureClusterLister) AzureClusters(namespace string) AzureClusterNamespaceLister {
	return azureClusterNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AzureClusterNamespaceLister helps list and get AzureClusters.
// All objects returned here must be treated as read-only.
type AzureClusterNamespaceLister interface {
	// List lists all AzureClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AzureCluster, err error)
	// Get retrieves the AzureCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AzureCluster, error)
	AzureClusterNamespaceListerExpansion
}

// azureClusterNamespaceLister implements the AzureClusterNamespaceLister
// interface.
type azureClusterNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AzureClusters in the indexer for a given namespace.
func (s azureClusterNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AzureCluster, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AzureCluster))
	})
	return ret, err
}

// Get retrieves the AzureCluster from the indexer for a given namespace and name.
func (s azureClusterNamespaceLister) Get(name string) (*v1alpha1.AzureCluster, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("azurecluster"), name)
	}
	return obj.(*v1alpha1.AzureCluster), nil
}
