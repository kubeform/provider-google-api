/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/logging/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BillingAccountExclusionLister helps list BillingAccountExclusions.
// All objects returned here must be treated as read-only.
type BillingAccountExclusionLister interface {
	// List lists all BillingAccountExclusions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingAccountExclusion, err error)
	// BillingAccountExclusions returns an object that can list and get BillingAccountExclusions.
	BillingAccountExclusions(namespace string) BillingAccountExclusionNamespaceLister
	BillingAccountExclusionListerExpansion
}

// billingAccountExclusionLister implements the BillingAccountExclusionLister interface.
type billingAccountExclusionLister struct {
	indexer cache.Indexer
}

// NewBillingAccountExclusionLister returns a new BillingAccountExclusionLister.
func NewBillingAccountExclusionLister(indexer cache.Indexer) BillingAccountExclusionLister {
	return &billingAccountExclusionLister{indexer: indexer}
}

// List lists all BillingAccountExclusions in the indexer.
func (s *billingAccountExclusionLister) List(selector labels.Selector) (ret []*v1alpha1.BillingAccountExclusion, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingAccountExclusion))
	})
	return ret, err
}

// BillingAccountExclusions returns an object that can list and get BillingAccountExclusions.
func (s *billingAccountExclusionLister) BillingAccountExclusions(namespace string) BillingAccountExclusionNamespaceLister {
	return billingAccountExclusionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BillingAccountExclusionNamespaceLister helps list and get BillingAccountExclusions.
// All objects returned here must be treated as read-only.
type BillingAccountExclusionNamespaceLister interface {
	// List lists all BillingAccountExclusions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingAccountExclusion, err error)
	// Get retrieves the BillingAccountExclusion from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BillingAccountExclusion, error)
	BillingAccountExclusionNamespaceListerExpansion
}

// billingAccountExclusionNamespaceLister implements the BillingAccountExclusionNamespaceLister
// interface.
type billingAccountExclusionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BillingAccountExclusions in the indexer for a given namespace.
func (s billingAccountExclusionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BillingAccountExclusion, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingAccountExclusion))
	})
	return ret, err
}

// Get retrieves the BillingAccountExclusion from the indexer for a given namespace and name.
func (s billingAccountExclusionNamespaceLister) Get(name string) (*v1alpha1.BillingAccountExclusion, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("billingaccountexclusion"), name)
	}
	return obj.(*v1alpha1.BillingAccountExclusion), nil
}
