/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/logging/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// BillingAccountSinkLister helps list BillingAccountSinks.
// All objects returned here must be treated as read-only.
type BillingAccountSinkLister interface {
	// List lists all BillingAccountSinks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingAccountSink, err error)
	// BillingAccountSinks returns an object that can list and get BillingAccountSinks.
	BillingAccountSinks(namespace string) BillingAccountSinkNamespaceLister
	BillingAccountSinkListerExpansion
}

// billingAccountSinkLister implements the BillingAccountSinkLister interface.
type billingAccountSinkLister struct {
	indexer cache.Indexer
}

// NewBillingAccountSinkLister returns a new BillingAccountSinkLister.
func NewBillingAccountSinkLister(indexer cache.Indexer) BillingAccountSinkLister {
	return &billingAccountSinkLister{indexer: indexer}
}

// List lists all BillingAccountSinks in the indexer.
func (s *billingAccountSinkLister) List(selector labels.Selector) (ret []*v1alpha1.BillingAccountSink, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingAccountSink))
	})
	return ret, err
}

// BillingAccountSinks returns an object that can list and get BillingAccountSinks.
func (s *billingAccountSinkLister) BillingAccountSinks(namespace string) BillingAccountSinkNamespaceLister {
	return billingAccountSinkNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// BillingAccountSinkNamespaceLister helps list and get BillingAccountSinks.
// All objects returned here must be treated as read-only.
type BillingAccountSinkNamespaceLister interface {
	// List lists all BillingAccountSinks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.BillingAccountSink, err error)
	// Get retrieves the BillingAccountSink from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.BillingAccountSink, error)
	BillingAccountSinkNamespaceListerExpansion
}

// billingAccountSinkNamespaceLister implements the BillingAccountSinkNamespaceLister
// interface.
type billingAccountSinkNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all BillingAccountSinks in the indexer for a given namespace.
func (s billingAccountSinkNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.BillingAccountSink, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.BillingAccountSink))
	})
	return ret, err
}

// Get retrieves the BillingAccountSink from the indexer for a given namespace and name.
func (s billingAccountSinkNamespaceLister) Get(name string) (*v1alpha1.BillingAccountSink, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("billingaccountsink"), name)
	}
	return obj.(*v1alpha1.BillingAccountSink), nil
}
