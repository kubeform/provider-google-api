/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "kubeform.dev/provider-google-api/apis/healthcare/v1alpha1"
)

// FhirStoreIamMemberLister helps list FhirStoreIamMembers.
// All objects returned here must be treated as read-only.
type FhirStoreIamMemberLister interface {
	// List lists all FhirStoreIamMembers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FhirStoreIamMember, err error)
	// FhirStoreIamMembers returns an object that can list and get FhirStoreIamMembers.
	FhirStoreIamMembers(namespace string) FhirStoreIamMemberNamespaceLister
	FhirStoreIamMemberListerExpansion
}

// fhirStoreIamMemberLister implements the FhirStoreIamMemberLister interface.
type fhirStoreIamMemberLister struct {
	indexer cache.Indexer
}

// NewFhirStoreIamMemberLister returns a new FhirStoreIamMemberLister.
func NewFhirStoreIamMemberLister(indexer cache.Indexer) FhirStoreIamMemberLister {
	return &fhirStoreIamMemberLister{indexer: indexer}
}

// List lists all FhirStoreIamMembers in the indexer.
func (s *fhirStoreIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.FhirStoreIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FhirStoreIamMember))
	})
	return ret, err
}

// FhirStoreIamMembers returns an object that can list and get FhirStoreIamMembers.
func (s *fhirStoreIamMemberLister) FhirStoreIamMembers(namespace string) FhirStoreIamMemberNamespaceLister {
	return fhirStoreIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FhirStoreIamMemberNamespaceLister helps list and get FhirStoreIamMembers.
// All objects returned here must be treated as read-only.
type FhirStoreIamMemberNamespaceLister interface {
	// List lists all FhirStoreIamMembers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.FhirStoreIamMember, err error)
	// Get retrieves the FhirStoreIamMember from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.FhirStoreIamMember, error)
	FhirStoreIamMemberNamespaceListerExpansion
}

// fhirStoreIamMemberNamespaceLister implements the FhirStoreIamMemberNamespaceLister
// interface.
type fhirStoreIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FhirStoreIamMembers in the indexer for a given namespace.
func (s fhirStoreIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FhirStoreIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FhirStoreIamMember))
	})
	return ret, err
}

// Get retrieves the FhirStoreIamMember from the indexer for a given namespace and name.
func (s fhirStoreIamMemberNamespaceLister) Get(name string) (*v1alpha1.FhirStoreIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("fhirstoreiammember"), name)
	}
	return obj.(*v1alpha1.FhirStoreIamMember), nil
}
