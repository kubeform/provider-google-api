/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/dialogflow/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// IntentLister helps list Intents.
// All objects returned here must be treated as read-only.
type IntentLister interface {
	// List lists all Intents in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Intent, err error)
	// Intents returns an object that can list and get Intents.
	Intents(namespace string) IntentNamespaceLister
	IntentListerExpansion
}

// intentLister implements the IntentLister interface.
type intentLister struct {
	indexer cache.Indexer
}

// NewIntentLister returns a new IntentLister.
func NewIntentLister(indexer cache.Indexer) IntentLister {
	return &intentLister{indexer: indexer}
}

// List lists all Intents in the indexer.
func (s *intentLister) List(selector labels.Selector) (ret []*v1alpha1.Intent, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Intent))
	})
	return ret, err
}

// Intents returns an object that can list and get Intents.
func (s *intentLister) Intents(namespace string) IntentNamespaceLister {
	return intentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// IntentNamespaceLister helps list and get Intents.
// All objects returned here must be treated as read-only.
type IntentNamespaceLister interface {
	// List lists all Intents in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Intent, err error)
	// Get retrieves the Intent from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Intent, error)
	IntentNamespaceListerExpansion
}

// intentNamespaceLister implements the IntentNamespaceLister
// interface.
type intentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Intents in the indexer for a given namespace.
func (s intentNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Intent, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Intent))
	})
	return ret, err
}

// Get retrieves the Intent from the indexer for a given namespace and name.
func (s intentNamespaceLister) Get(name string) (*v1alpha1.Intent, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("intent"), name)
	}
	return obj.(*v1alpha1.Intent), nil
}
