/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/dialogflow/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CxFlowLister helps list CxFlows.
// All objects returned here must be treated as read-only.
type CxFlowLister interface {
	// List lists all CxFlows in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CxFlow, err error)
	// CxFlows returns an object that can list and get CxFlows.
	CxFlows(namespace string) CxFlowNamespaceLister
	CxFlowListerExpansion
}

// cxFlowLister implements the CxFlowLister interface.
type cxFlowLister struct {
	indexer cache.Indexer
}

// NewCxFlowLister returns a new CxFlowLister.
func NewCxFlowLister(indexer cache.Indexer) CxFlowLister {
	return &cxFlowLister{indexer: indexer}
}

// List lists all CxFlows in the indexer.
func (s *cxFlowLister) List(selector labels.Selector) (ret []*v1alpha1.CxFlow, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CxFlow))
	})
	return ret, err
}

// CxFlows returns an object that can list and get CxFlows.
func (s *cxFlowLister) CxFlows(namespace string) CxFlowNamespaceLister {
	return cxFlowNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CxFlowNamespaceLister helps list and get CxFlows.
// All objects returned here must be treated as read-only.
type CxFlowNamespaceLister interface {
	// List lists all CxFlows in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CxFlow, err error)
	// Get retrieves the CxFlow from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CxFlow, error)
	CxFlowNamespaceListerExpansion
}

// cxFlowNamespaceLister implements the CxFlowNamespaceLister
// interface.
type cxFlowNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CxFlows in the indexer for a given namespace.
func (s cxFlowNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CxFlow, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CxFlow))
	})
	return ret, err
}

// Get retrieves the CxFlow from the indexer for a given namespace and name.
func (s cxFlowNamespaceLister) Get(name string) (*v1alpha1.CxFlow, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("cxflow"), name)
	}
	return obj.(*v1alpha1.CxFlow), nil
}
