/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "kubeform.dev/provider-google-api/apis/privateca/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CaPoolIamMemberLister helps list CaPoolIamMembers.
// All objects returned here must be treated as read-only.
type CaPoolIamMemberLister interface {
	// List lists all CaPoolIamMembers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CaPoolIamMember, err error)
	// CaPoolIamMembers returns an object that can list and get CaPoolIamMembers.
	CaPoolIamMembers(namespace string) CaPoolIamMemberNamespaceLister
	CaPoolIamMemberListerExpansion
}

// caPoolIamMemberLister implements the CaPoolIamMemberLister interface.
type caPoolIamMemberLister struct {
	indexer cache.Indexer
}

// NewCaPoolIamMemberLister returns a new CaPoolIamMemberLister.
func NewCaPoolIamMemberLister(indexer cache.Indexer) CaPoolIamMemberLister {
	return &caPoolIamMemberLister{indexer: indexer}
}

// List lists all CaPoolIamMembers in the indexer.
func (s *caPoolIamMemberLister) List(selector labels.Selector) (ret []*v1alpha1.CaPoolIamMember, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CaPoolIamMember))
	})
	return ret, err
}

// CaPoolIamMembers returns an object that can list and get CaPoolIamMembers.
func (s *caPoolIamMemberLister) CaPoolIamMembers(namespace string) CaPoolIamMemberNamespaceLister {
	return caPoolIamMemberNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CaPoolIamMemberNamespaceLister helps list and get CaPoolIamMembers.
// All objects returned here must be treated as read-only.
type CaPoolIamMemberNamespaceLister interface {
	// List lists all CaPoolIamMembers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CaPoolIamMember, err error)
	// Get retrieves the CaPoolIamMember from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CaPoolIamMember, error)
	CaPoolIamMemberNamespaceListerExpansion
}

// caPoolIamMemberNamespaceLister implements the CaPoolIamMemberNamespaceLister
// interface.
type caPoolIamMemberNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CaPoolIamMembers in the indexer for a given namespace.
func (s caPoolIamMemberNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CaPoolIamMember, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CaPoolIamMember))
	})
	return ret, err
}

// Get retrieves the CaPoolIamMember from the indexer for a given namespace and name.
func (s caPoolIamMemberNamespaceLister) Get(name string) (*v1alpha1.CaPoolIamMember, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("capooliammember"), name)
	}
	return obj.(*v1alpha1.CaPoolIamMember), nil
}
