apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: cxversions.dialogflow.google.kubeform.com
spec:
  group: dialogflow.google.kubeform.com
  names:
    kind: CxVersion
    listKind: CxVersionList
    plural: cxversions
    singular: cxversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  createTime:
                    description: 'A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                      resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
                      and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  description:
                    description: The description of the version. The maximum length
                      is 500 characters. If exceeded, the request is rejected.
                    type: string
                  displayName:
                    description: The human-readable name of the version. Limit of
                      64 characters.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Format: projects//locations//agents//flows//versions/.
                      Version ID is a self-increasing number generated by Dialogflow
                      upon version creation.'
                    type: string
                  nluSettings:
                    description: The NLU settings of the flow at version creation.
                    items:
                      properties:
                        classificationThreshold:
                          description: To filter out false positive results and still
                            get variety in matched natural language inputs for your
                            agent, you can tune the machine learning classification
                            threshold. If the returned score value is less than the
                            threshold value, then a no-match event will be triggered.
                            The score values range from 0.0 (completely uncertain)
                            to 1.0 (completely certain). If set to 0.0, the default
                            of 0.3 is used.
                          format: double
                          type: number
                        modelTrainingMode:
                          description: 'Indicates NLU model training mode. * MODEL_TRAINING_MODE_AUTOMATIC:
                            NLU model training is automatically triggered when a flow
                            gets modified. User can also manually trigger model training
                            in this mode. * MODEL_TRAINING_MODE_MANUAL: User needs
                            to manually trigger NLU model training. Best for large
                            flows whose models take long time to train. Possible values:
                            ["MODEL_TRAINING_MODE_AUTOMATIC", "MODEL_TRAINING_MODE_MANUAL"]'
                          type: string
                        modelType:
                          description: 'Indicates the type of NLU model. * MODEL_TYPE_STANDARD:
                            Use standard NLU model. * MODEL_TYPE_ADVANCED: Use advanced
                            NLU model. Possible values: ["MODEL_TYPE_STANDARD", "MODEL_TYPE_ADVANCED"]'
                          type: string
                      type: object
                    type: array
                  parent:
                    description: 'The Flow to create an Version for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.'
                    type: string
                  state:
                    description: 'The state of this version. * RUNNING: Version is
                      not ready to serve (e.g. training is running). * SUCCEEDED:
                      Training has succeeded and this version is ready to serve. *
                      FAILED: Version training failed.'
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - displayName
                type: object
              state:
                properties:
                  createTime:
                    description: 'A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
                      resolution and up to nine fractional digits. Examples: "2014-10-02T15:01:23Z"
                      and "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  description:
                    description: The description of the version. The maximum length
                      is 500 characters. If exceeded, the request is rejected.
                    type: string
                  displayName:
                    description: The human-readable name of the version. Limit of
                      64 characters.
                    type: string
                  id:
                    type: string
                  name:
                    description: 'Format: projects//locations//agents//flows//versions/.
                      Version ID is a self-increasing number generated by Dialogflow
                      upon version creation.'
                    type: string
                  nluSettings:
                    description: The NLU settings of the flow at version creation.
                    items:
                      properties:
                        classificationThreshold:
                          description: To filter out false positive results and still
                            get variety in matched natural language inputs for your
                            agent, you can tune the machine learning classification
                            threshold. If the returned score value is less than the
                            threshold value, then a no-match event will be triggered.
                            The score values range from 0.0 (completely uncertain)
                            to 1.0 (completely certain). If set to 0.0, the default
                            of 0.3 is used.
                          format: double
                          type: number
                        modelTrainingMode:
                          description: 'Indicates NLU model training mode. * MODEL_TRAINING_MODE_AUTOMATIC:
                            NLU model training is automatically triggered when a flow
                            gets modified. User can also manually trigger model training
                            in this mode. * MODEL_TRAINING_MODE_MANUAL: User needs
                            to manually trigger NLU model training. Best for large
                            flows whose models take long time to train. Possible values:
                            ["MODEL_TRAINING_MODE_AUTOMATIC", "MODEL_TRAINING_MODE_MANUAL"]'
                          type: string
                        modelType:
                          description: 'Indicates the type of NLU model. * MODEL_TYPE_STANDARD:
                            Use standard NLU model. * MODEL_TYPE_ADVANCED: Use advanced
                            NLU model. Possible values: ["MODEL_TYPE_STANDARD", "MODEL_TYPE_ADVANCED"]'
                          type: string
                      type: object
                    type: array
                  parent:
                    description: 'The Flow to create an Version for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.'
                    type: string
                  state:
                    description: 'The state of this version. * RUNNING: Version is
                      not ready to serve (e.g. training is running). * SUCCEEDED:
                      Training has succeeded and this version is ready to serve. *
                      FAILED: Version training failed.'
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - displayName
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
