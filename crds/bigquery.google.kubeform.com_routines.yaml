apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: routines.bigquery.google.kubeform.com
spec:
  group: bigquery.google.kubeform.com
  names:
    kind: Routine
    listKind: RoutineList
    plural: routines
    singular: routine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  arguments:
                    description: Input/output argument of a function or a stored procedure.
                    items:
                      properties:
                        argumentKind:
                          description: 'Defaults to FIXED_TYPE. Default value: "FIXED_TYPE"
                            Possible values: ["FIXED_TYPE", "ANY_TYPE"]'
                          type: string
                        dataType:
                          description: 'A JSON schema for the data type. Required
                            unless argumentKind = ANY_TYPE. ~>**NOTE**: Because this
                            field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn''t changed.
                            If the API returns a different value for the same schema,
                            e.g. it switched the order of values or replaced STRUCT
                            field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround,
                            we recommend using the schema as returned by the API.'
                          type: string
                        mode:
                          description: 'Specifies whether the argument is input or
                            output. Can be set for procedures only. Possible values:
                            ["IN", "OUT", "INOUT"]'
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  creationTime:
                    description: The time when this routine was created, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  datasetID:
                    description: The ID of the dataset containing this routine
                    type: string
                  definitionBody:
                    description: The body of the routine. For functions, this is the
                      expression in the AS clause. If language=SQL, it is the substring
                      inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: 'The determinism level of the JavaScript UDF if defined.
                      Possible values: ["DETERMINISM_LEVEL_UNSPECIFIED", "DETERMINISTIC",
                      "NOT_DETERMINISTIC"]'
                    type: string
                  id:
                    type: string
                  importedLibraries:
                    description: Optional. If language = "JAVASCRIPT", this field
                      stores the path of the imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: 'The language of the routine. Possible values: ["SQL",
                      "JAVASCRIPT"]'
                    type: string
                  lastModifiedTime:
                    description: The time when this routine was modified, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  project:
                    type: string
                  returnTableType:
                    description: "Optional. Can be set only if routineType = \"TABLE_VALUED_FUNCTION\".
                      \n If absent, the return table type is inferred from definitionBody
                      at query time in each query that references this routine. If
                      present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table
                      type, at query time."
                    type: string
                  returnType:
                    description: 'A JSON schema for the return type. Optional if language
                      = "SQL"; required otherwise. If absent, the return type is inferred
                      from definitionBody at query time in each query that references
                      this routine. If present, then the evaluated result will be
                      cast to the specified returned type at query time. ~>**NOTE**:
                      Because this field expects a JSON string, any changes to the
                      string will create a diff, even if the JSON itself hasn''t changed.
                      If the API returns a different value for the same schema, e.g.
                      it switche d the order of values or replaced STRUCT field type
                      with RECORD field type, we currently cannot suppress the recurring
                      diff this causes. As a workaround, we recommend using the schema
                      as returned by the API.'
                    type: string
                  routineID:
                    description: The ID of the the routine. The ID must contain only
                      letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                      length is 256 characters.
                    type: string
                  routineType:
                    description: 'The type of routine. Possible values: ["SCALAR_FUNCTION",
                      "PROCEDURE", "TABLE_VALUED_FUNCTION"]'
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - datasetID
                - definitionBody
                - routineID
                type: object
              state:
                properties:
                  arguments:
                    description: Input/output argument of a function or a stored procedure.
                    items:
                      properties:
                        argumentKind:
                          description: 'Defaults to FIXED_TYPE. Default value: "FIXED_TYPE"
                            Possible values: ["FIXED_TYPE", "ANY_TYPE"]'
                          type: string
                        dataType:
                          description: 'A JSON schema for the data type. Required
                            unless argumentKind = ANY_TYPE. ~>**NOTE**: Because this
                            field expects a JSON string, any changes to the string
                            will create a diff, even if the JSON itself hasn''t changed.
                            If the API returns a different value for the same schema,
                            e.g. it switched the order of values or replaced STRUCT
                            field type with RECORD field type, we currently cannot
                            suppress the recurring diff this causes. As a workaround,
                            we recommend using the schema as returned by the API.'
                          type: string
                        mode:
                          description: 'Specifies whether the argument is input or
                            output. Can be set for procedures only. Possible values:
                            ["IN", "OUT", "INOUT"]'
                          type: string
                        name:
                          description: The name of this argument. Can be absent for
                            function return argument.
                          type: string
                      type: object
                    type: array
                  creationTime:
                    description: The time when this routine was created, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  datasetID:
                    description: The ID of the dataset containing this routine
                    type: string
                  definitionBody:
                    description: The body of the routine. For functions, this is the
                      expression in the AS clause. If language=SQL, it is the substring
                      inside (but excluding) the parentheses.
                    type: string
                  description:
                    description: The description of the routine if defined.
                    type: string
                  determinismLevel:
                    description: 'The determinism level of the JavaScript UDF if defined.
                      Possible values: ["DETERMINISM_LEVEL_UNSPECIFIED", "DETERMINISTIC",
                      "NOT_DETERMINISTIC"]'
                    type: string
                  id:
                    type: string
                  importedLibraries:
                    description: Optional. If language = "JAVASCRIPT", this field
                      stores the path of the imported JAVASCRIPT libraries.
                    items:
                      type: string
                    type: array
                  language:
                    description: 'The language of the routine. Possible values: ["SQL",
                      "JAVASCRIPT"]'
                    type: string
                  lastModifiedTime:
                    description: The time when this routine was modified, in milliseconds
                      since the epoch.
                    format: int64
                    type: integer
                  project:
                    type: string
                  returnTableType:
                    description: "Optional. Can be set only if routineType = \"TABLE_VALUED_FUNCTION\".
                      \n If absent, the return table type is inferred from definitionBody
                      at query time in each query that references this routine. If
                      present, then the columns in the evaluated table result will
                      be cast to match the column types specificed in return table
                      type, at query time."
                    type: string
                  returnType:
                    description: 'A JSON schema for the return type. Optional if language
                      = "SQL"; required otherwise. If absent, the return type is inferred
                      from definitionBody at query time in each query that references
                      this routine. If present, then the evaluated result will be
                      cast to the specified returned type at query time. ~>**NOTE**:
                      Because this field expects a JSON string, any changes to the
                      string will create a diff, even if the JSON itself hasn''t changed.
                      If the API returns a different value for the same schema, e.g.
                      it switche d the order of values or replaced STRUCT field type
                      with RECORD field type, we currently cannot suppress the recurring
                      diff this causes. As a workaround, we recommend using the schema
                      as returned by the API.'
                    type: string
                  routineID:
                    description: The ID of the the routine. The ID must contain only
                      letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
                      length is 256 characters.
                    type: string
                  routineType:
                    description: 'The type of routine. Possible values: ["SCALAR_FUNCTION",
                      "PROCEDURE", "TABLE_VALUED_FUNCTION"]'
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - datasetID
                - definitionBody
                - routineID
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
