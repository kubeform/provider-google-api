apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: nodegroups.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NodeGroup
    listKind: NodeGroupList
    plural: nodegroups
    singular: nodegroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  autoscalingPolicy:
                    description: If you use sole-tenant nodes for your workloads,
                      you can use the node group autoscaler to automatically manage
                      the sizes of your node groups.
                    properties:
                      maxNodes:
                        description: Maximum size of the node group. Set to a value
                          less than or equal to 100 and greater than or equal to min-nodes.
                        format: int64
                        type: integer
                      minNodes:
                        description: Minimum size of the node group. Must be less
                          than or equal to max-nodes. The default value is 0.
                        format: int64
                        type: integer
                      mode:
                        description: 'The autoscaling mode. Set to one of the following:   -
                          OFF: Disables the autoscaler.   - ON: Enables scaling in
                          and scaling out.   - ONLY_SCALE_OUT: Enables only scaling
                          out.   You must use this mode if your node groups are configured
                          to   restart their hosted VMs on minimal servers. Possible
                          values: ["OFF", "ON", "ONLY_SCALE_OUT"]'
                        type: string
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  id:
                    type: string
                  initialSize:
                    description: The initial number of nodes in the node group. One
                      of 'initial_size' or 'size' must be specified.
                    format: int64
                    type: integer
                  maintenancePolicy:
                    description: 'Specifies how to handle instances when a node in
                      the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE,
                      or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.'
                    type: string
                  maintenanceWindow:
                    description: contains properties for the timeframe of maintenance
                    properties:
                      startTime:
                        description: instances.start time of the window. This must
                          be in UTC format that resolves to one of 00:00, 04:00, 08:00,
                          12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00
                          are valid.
                        type: string
                    required:
                    - startTime
                    type: object
                  name:
                    description: Name of the resource.
                    type: string
                  nodeTemplate:
                    description: The URL of the node template to which this node group
                      belongs.
                    type: string
                  project:
                    type: string
                  selfLink:
                    type: string
                  size:
                    description: The total number of nodes in the node group. One
                      of 'initial_size' or 'size' must be specified.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: Zone where this node group is located
                    type: string
                required:
                - nodeTemplate
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  autoscalingPolicy:
                    description: If you use sole-tenant nodes for your workloads,
                      you can use the node group autoscaler to automatically manage
                      the sizes of your node groups.
                    properties:
                      maxNodes:
                        description: Maximum size of the node group. Set to a value
                          less than or equal to 100 and greater than or equal to min-nodes.
                        format: int64
                        type: integer
                      minNodes:
                        description: Minimum size of the node group. Must be less
                          than or equal to max-nodes. The default value is 0.
                        format: int64
                        type: integer
                      mode:
                        description: 'The autoscaling mode. Set to one of the following:   -
                          OFF: Disables the autoscaler.   - ON: Enables scaling in
                          and scaling out.   - ONLY_SCALE_OUT: Enables only scaling
                          out.   You must use this mode if your node groups are configured
                          to   restart their hosted VMs on minimal servers. Possible
                          values: ["OFF", "ON", "ONLY_SCALE_OUT"]'
                        type: string
                    type: object
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  id:
                    type: string
                  initialSize:
                    description: The initial number of nodes in the node group. One
                      of 'initial_size' or 'size' must be specified.
                    format: int64
                    type: integer
                  maintenancePolicy:
                    description: 'Specifies how to handle instances when a node in
                      the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE,
                      or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.'
                    type: string
                  maintenanceWindow:
                    description: contains properties for the timeframe of maintenance
                    properties:
                      startTime:
                        description: instances.start time of the window. This must
                          be in UTC format that resolves to one of 00:00, 04:00, 08:00,
                          12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00
                          are valid.
                        type: string
                    required:
                    - startTime
                    type: object
                  name:
                    description: Name of the resource.
                    type: string
                  nodeTemplate:
                    description: The URL of the node template to which this node group
                      belongs.
                    type: string
                  project:
                    type: string
                  selfLink:
                    type: string
                  size:
                    description: The total number of nodes in the node group. One
                      of 'initial_size' or 'size' must be specified.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  zone:
                    description: Zone where this node group is located
                    type: string
                required:
                - nodeTemplate
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
