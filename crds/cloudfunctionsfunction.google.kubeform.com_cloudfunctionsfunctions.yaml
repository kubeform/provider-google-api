apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: cloudfunctionsfunctions.cloudfunctionsfunction.google.kubeform.com
spec:
  group: cloudfunctionsfunction.google.kubeform.com
  names:
    kind: CloudfunctionsFunction
    listKind: CloudfunctionsFunctionList
    plural: cloudfunctionsfunctions
    singular: cloudfunctionsfunction
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  availableMemoryMb:
                    description: Memory (in MB), available to the function. Default
                      value is 256. Possible values include 128, 256, 512, 1024, etc.
                    format: int64
                    type: integer
                  buildEnvironmentVariables:
                    additionalProperties:
                      type: string
                    description: ' A set of key/value environment variable pairs available
                      during build time.'
                    type: object
                  description:
                    description: Description of the function.
                    type: string
                  entryPoint:
                    description: Name of the function that will be executed when the
                      Google Cloud Function is triggered.
                    type: string
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: A set of key/value environment variable pairs to
                      assign to the function.
                    type: object
                  eventTrigger:
                    description: A source that fires events in response to a condition
                      in another service. Cannot be used with trigger_http.
                    properties:
                      eventType:
                        description: 'The type of event to observe. For example: "google.storage.object.finalize".
                          See the documentation on calling Cloud Functions for a full
                          reference of accepted triggers.'
                        type: string
                      failurePolicy:
                        description: Specifies policy for failed executions
                        properties:
                          retry:
                            description: Whether the function should be retried on
                              failure. Defaults to false.
                            type: boolean
                        required:
                        - retry
                        type: object
                      resource:
                        description: The name or partial URI of the resource from
                          which to observe events. For example, "myBucket" or "projects/my-project/topics/my-topic"
                        type: string
                    required:
                    - eventType
                    - resource
                    type: object
                  httpsTriggerURL:
                    description: URL which triggers function execution. Returned only
                      if trigger_http is used.
                    type: string
                  id:
                    type: string
                  ingressSettings:
                    description: String value that controls what traffic can reach
                      the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
                      Changes to this field will recreate the cloud function.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the function.
                      Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
                    type: object
                  maxInstances:
                    description: The limit on the maximum number of function instances
                      that may coexist at a given time.
                    format: int64
                    type: integer
                  name:
                    description: A user-defined name of the function. Function names
                      must be unique globally.
                    type: string
                  project:
                    description: Project of the function. If it is not provided, the
                      provider project is used.
                    type: string
                  region:
                    description: Region of function. Currently can be only "us-central1".
                      If it is not provided, the provider region is used.
                    type: string
                  runtime:
                    description: The runtime in which the function is going to run.
                      Eg. "nodejs8", "nodejs10", "python37", "go111".
                    type: string
                  serviceAccountEmail:
                    description: ' If provided, the self-provided service account
                      to run the function with.'
                    type: string
                  sourceArchiveBucket:
                    description: The GCS bucket containing the zip archive which contains
                      the function.
                    type: string
                  sourceArchiveObject:
                    description: The source archive object (file) in archive bucket.
                    type: string
                  sourceRepository:
                    description: Represents parameters related to source repository
                      where a function is hosted. Cannot be set alongside source_archive_bucket
                      or source_archive_object.
                    properties:
                      deployedURL:
                        description: The URL pointing to the hosted repository where
                          the function was defined at the time of deployment.
                        type: string
                      url:
                        description: The URL pointing to the hosted repository where
                          the function is defined.
                        type: string
                    required:
                    - url
                    type: object
                  timeout:
                    description: Timeout (in seconds) for the function. Default value
                      is 60 seconds. Cannot be more than 540 seconds.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  triggerHTTP:
                    description: 'Boolean variable. Any HTTP request (of a supported
                      type) to the endpoint will trigger function execution. Supported
                      HTTP request types are: POST, PUT, GET, DELETE, and OPTIONS.
                      Endpoint is returned as https_trigger_url. Cannot be used with
                      trigger_bucket and trigger_topic.'
                    type: boolean
                  vpcConnector:
                    description: The VPC Network Connector that this cloud function
                      can connect to. It can be either the fully-qualified URI, or
                      the short name of the network connector resource. The format
                      of this field is projects/*/locations/*/connectors/*.
                    type: string
                  vpcConnectorEgressSettings:
                    description: The egress settings for the connector, controlling
                      what traffic is diverted through it. Allowed values are ALL_TRAFFIC
                      and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If
                      unset, this field preserves the previously set value.
                    type: string
                required:
                - name
                - runtime
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  availableMemoryMb:
                    description: Memory (in MB), available to the function. Default
                      value is 256. Possible values include 128, 256, 512, 1024, etc.
                    format: int64
                    type: integer
                  buildEnvironmentVariables:
                    additionalProperties:
                      type: string
                    description: ' A set of key/value environment variable pairs available
                      during build time.'
                    type: object
                  description:
                    description: Description of the function.
                    type: string
                  entryPoint:
                    description: Name of the function that will be executed when the
                      Google Cloud Function is triggered.
                    type: string
                  environmentVariables:
                    additionalProperties:
                      type: string
                    description: A set of key/value environment variable pairs to
                      assign to the function.
                    type: object
                  eventTrigger:
                    description: A source that fires events in response to a condition
                      in another service. Cannot be used with trigger_http.
                    properties:
                      eventType:
                        description: 'The type of event to observe. For example: "google.storage.object.finalize".
                          See the documentation on calling Cloud Functions for a full
                          reference of accepted triggers.'
                        type: string
                      failurePolicy:
                        description: Specifies policy for failed executions
                        properties:
                          retry:
                            description: Whether the function should be retried on
                              failure. Defaults to false.
                            type: boolean
                        required:
                        - retry
                        type: object
                      resource:
                        description: The name or partial URI of the resource from
                          which to observe events. For example, "myBucket" or "projects/my-project/topics/my-topic"
                        type: string
                    required:
                    - eventType
                    - resource
                    type: object
                  httpsTriggerURL:
                    description: URL which triggers function execution. Returned only
                      if trigger_http is used.
                    type: string
                  id:
                    type: string
                  ingressSettings:
                    description: String value that controls what traffic can reach
                      the function. Allowed values are ALLOW_ALL and ALLOW_INTERNAL_ONLY.
                      Changes to this field will recreate the cloud function.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the function.
                      Label keys must follow the requirements at https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements.
                    type: object
                  maxInstances:
                    description: The limit on the maximum number of function instances
                      that may coexist at a given time.
                    format: int64
                    type: integer
                  name:
                    description: A user-defined name of the function. Function names
                      must be unique globally.
                    type: string
                  project:
                    description: Project of the function. If it is not provided, the
                      provider project is used.
                    type: string
                  region:
                    description: Region of function. Currently can be only "us-central1".
                      If it is not provided, the provider region is used.
                    type: string
                  runtime:
                    description: The runtime in which the function is going to run.
                      Eg. "nodejs8", "nodejs10", "python37", "go111".
                    type: string
                  serviceAccountEmail:
                    description: ' If provided, the self-provided service account
                      to run the function with.'
                    type: string
                  sourceArchiveBucket:
                    description: The GCS bucket containing the zip archive which contains
                      the function.
                    type: string
                  sourceArchiveObject:
                    description: The source archive object (file) in archive bucket.
                    type: string
                  sourceRepository:
                    description: Represents parameters related to source repository
                      where a function is hosted. Cannot be set alongside source_archive_bucket
                      or source_archive_object.
                    properties:
                      deployedURL:
                        description: The URL pointing to the hosted repository where
                          the function was defined at the time of deployment.
                        type: string
                      url:
                        description: The URL pointing to the hosted repository where
                          the function is defined.
                        type: string
                    required:
                    - url
                    type: object
                  timeout:
                    description: Timeout (in seconds) for the function. Default value
                      is 60 seconds. Cannot be more than 540 seconds.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  triggerHTTP:
                    description: 'Boolean variable. Any HTTP request (of a supported
                      type) to the endpoint will trigger function execution. Supported
                      HTTP request types are: POST, PUT, GET, DELETE, and OPTIONS.
                      Endpoint is returned as https_trigger_url. Cannot be used with
                      trigger_bucket and trigger_topic.'
                    type: boolean
                  vpcConnector:
                    description: The VPC Network Connector that this cloud function
                      can connect to. It can be either the fully-qualified URI, or
                      the short name of the network connector resource. The format
                      of this field is projects/*/locations/*/connectors/*.
                    type: string
                  vpcConnectorEgressSettings:
                    description: The egress settings for the connector, controlling
                      what traffic is diverted through it. Allowed values are ALL_TRAFFIC
                      and PRIVATE_RANGES_ONLY. Defaults to PRIVATE_RANGES_ONLY. If
                      unset, this field preserves the previously set value.
                    type: string
                required:
                - name
                - runtime
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
