apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: nodetemplates.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: NodeTemplate
    listKind: NodeTemplateList
    plural: nodetemplates
    singular: nodetemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  cpuOvercommitType:
                    description: 'CPU overcommit. Default value: "NONE" Possible values:
                      ["ENABLED", "NONE"]'
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource.
                    type: string
                  nodeAffinityLabels:
                    additionalProperties:
                      type: string
                    description: Labels to use for node affinity, which will be used
                      in instance scheduling.
                    type: object
                  nodeType:
                    description: Node type to use for nodes group that are created
                      from this template. Only one of nodeTypeFlexibility and nodeType
                      can be specified.
                    type: string
                  nodeTypeFlexibility:
                    description: Flexible properties for the desired node type. Node
                      groups that use this node template will create nodes of a type
                      that matches these properties. Only one of nodeTypeFlexibility
                      and nodeType can be specified.
                    properties:
                      cpus:
                        description: Number of virtual CPUs to use.
                        type: string
                      localSsd:
                        description: Use local SSD
                        type: string
                      memory:
                        description: Physical memory available to the node, defined
                          in MB.
                        type: string
                    type: object
                  project:
                    type: string
                  region:
                    description: Region where nodes using the node template will be
                      created. If it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  serverBinding:
                    description: The server binding policy for nodes using this template.
                      Determines where the nodes should restart following a maintenance
                      event.
                    properties:
                      type:
                        description: "Type of server binding policy. If 'RESTART_NODE_ON_ANY_SERVER',
                          nodes using this template will restart on any physical server
                          following a maintenance event. \n If 'RESTART_NODE_ON_MINIMAL_SERVER',
                          nodes using this template will restart on the same physical
                          server following a maintenance event, instead of being live
                          migrated to or restarted on a new physical server. This
                          option may be useful if you are using software licenses
                          tied to the underlying server characteristics such as physical
                          sockets or cores, to avoid the need for additional licenses
                          when maintenance occurs. However, VMs on such nodes will
                          experience outages while maintenance is applied. Possible
                          values: [\"RESTART_NODE_ON_ANY_SERVER\", \"RESTART_NODE_ON_MINIMAL_SERVERS\"]"
                        type: string
                    required:
                    - type
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                type: object
              state:
                properties:
                  cpuOvercommitType:
                    description: 'CPU overcommit. Default value: "NONE" Possible values:
                      ["ENABLED", "NONE"]'
                    type: string
                  creationTimestamp:
                    description: Creation timestamp in RFC3339 text format.
                    type: string
                  description:
                    description: An optional textual description of the resource.
                    type: string
                  id:
                    type: string
                  name:
                    description: Name of the resource.
                    type: string
                  nodeAffinityLabels:
                    additionalProperties:
                      type: string
                    description: Labels to use for node affinity, which will be used
                      in instance scheduling.
                    type: object
                  nodeType:
                    description: Node type to use for nodes group that are created
                      from this template. Only one of nodeTypeFlexibility and nodeType
                      can be specified.
                    type: string
                  nodeTypeFlexibility:
                    description: Flexible properties for the desired node type. Node
                      groups that use this node template will create nodes of a type
                      that matches these properties. Only one of nodeTypeFlexibility
                      and nodeType can be specified.
                    properties:
                      cpus:
                        description: Number of virtual CPUs to use.
                        type: string
                      localSsd:
                        description: Use local SSD
                        type: string
                      memory:
                        description: Physical memory available to the node, defined
                          in MB.
                        type: string
                    type: object
                  project:
                    type: string
                  region:
                    description: Region where nodes using the node template will be
                      created. If it is not provided, the provider region is used.
                    type: string
                  selfLink:
                    type: string
                  serverBinding:
                    description: The server binding policy for nodes using this template.
                      Determines where the nodes should restart following a maintenance
                      event.
                    properties:
                      type:
                        description: "Type of server binding policy. If 'RESTART_NODE_ON_ANY_SERVER',
                          nodes using this template will restart on any physical server
                          following a maintenance event. \n If 'RESTART_NODE_ON_MINIMAL_SERVER',
                          nodes using this template will restart on the same physical
                          server following a maintenance event, instead of being live
                          migrated to or restarted on a new physical server. This
                          option may be useful if you are using software licenses
                          tied to the underlying server characteristics such as physical
                          sockets or cores, to avoid the need for additional licenses
                          when maintenance occurs. However, VMs on such nodes will
                          experience outages while maintenance is applied. Possible
                          values: [\"RESTART_NODE_ON_ANY_SERVER\", \"RESTART_NODE_ON_MINIMAL_SERVERS\"]"
                        type: string
                    required:
                    - type
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
