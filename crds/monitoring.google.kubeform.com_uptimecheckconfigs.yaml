apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: uptimecheckconfigs.monitoring.google.kubeform.com
spec:
  group: monitoring.google.kubeform.com
  names:
    kind: UptimeCheckConfig
    listKind: UptimeCheckConfigList
    plural: uptimecheckconfigs
    singular: uptimecheckconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  contentMatchers:
                    description: The expected content on the page the check is run
                      against. Currently, only the first entry in the list is supported,
                      and other entries will be ignored. The server will look for
                      an exact match of the string in the page response's content.
                      This field is optional and should only be specified if a content
                      match is required.
                    items:
                      properties:
                        content:
                          description: String or regex content to match (max 1024
                            bytes)
                          type: string
                        matcher:
                          description: 'The type of content matcher that will be applied
                            to the server output, compared to the content string when
                            the check is run. Default value: "CONTAINS_STRING" Possible
                            values: ["CONTAINS_STRING", "NOT_CONTAINS_STRING", "MATCHES_REGEX",
                            "NON_MATCHES_REGEX"]'
                          type: string
                      required:
                      - content
                      type: object
                    type: array
                  displayName:
                    description: A human-friendly name for the uptime check configuration.
                      The display name should be unique within a Stackdriver Workspace
                      in order to make it easier to identify; however, uniqueness
                      is not enforced.
                    type: string
                  httpCheck:
                    description: Contains information needed to make an HTTP or HTTPS
                      check.
                    properties:
                      authInfo:
                        description: The authentication information. Optional when
                          creating an HTTP check; defaults to empty.
                        properties:
                          username:
                            description: The username to authenticate.
                            type: string
                        required:
                        - username
                        type: object
                      body:
                        description: The request body associated with the HTTP POST
                          request. If contentType is URL_ENCODED, the body passed
                          in must be URL-encoded. Users can provide a Content-Length
                          header via the headers field or the API will do so. If the
                          requestMethod is GET and body is not empty, the API will
                          return an error. The maximum byte size is 1 megabyte. Note
                          - As with all bytes fields JSON representations are base64
                          encoded. e.g. "foo=bar" in URL-encoded form is "foo%3Dbar"
                          and in base64 encoding is "Zm9vJTI1M0RiYXI=".
                        type: string
                      contentType:
                        description: 'The content type to use for the check. Possible
                          values: ["TYPE_UNSPECIFIED", "URL_ENCODED"]'
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: The list of headers to send as part of the uptime
                          check request. If two headers have the same key and different
                          values, they should be entered as a single header, with
                          the value being a comma-separated list of all the desired
                          values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt
                          (page 31). Entering two separate headers with the same key
                          in a Create call will cause the first to be overwritten
                          by the second. The maximum number of headers allowed is
                          100.
                        type: object
                      maskHeaders:
                        description: Boolean specifying whether to encrypt the header
                          information. Encryption should be specified for any headers
                          related to authentication that you do not wish to be seen
                          when retrieving the configuration. The server will be responsible
                          for encrypting the headers. On Get/List calls, if mask_headers
                          is set to True then the headers will be obscured with ******.
                        type: boolean
                      path:
                        description: The path to the page to run the check against.
                          Will be combined with the host (specified within the MonitoredResource)
                          and port to construct the full URL. Optional (defaults to
                          "/").
                        type: string
                      port:
                        description: The port to the page to run the check against.
                          Will be combined with host (specified within the MonitoredResource)
                          and path to construct the full URL. Optional (defaults to
                          80 without SSL, or 443 with SSL).
                        format: int64
                        type: integer
                      requestMethod:
                        description: 'The HTTP request method to use for the check.
                          If set to METHOD_UNSPECIFIED then requestMethod defaults
                          to GET. Default value: "GET" Possible values: ["METHOD_UNSPECIFIED",
                          "GET", "POST"]'
                        type: string
                      useSsl:
                        description: If true, use HTTPS instead of HTTP to run the
                          check.
                        type: boolean
                      validateSsl:
                        description: Boolean specifying whether to include SSL certificate
                          validation as a part of the Uptime check. Only applies to
                          checks where monitoredResource is set to uptime_url. If
                          useSsl is false, setting validateSsl to true has no effect.
                        type: boolean
                    type: object
                  id:
                    type: string
                  monitoredResource:
                    description: 'The monitored resource (https://cloud.google.com/monitoring/api/resources)
                      associated with the configuration. The following monitored resource
                      types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer'
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Values for all of the labels listed in the associated
                          monitored resource descriptor. For example, Compute Engine
                          VM instances use the labels "project_id", "instance_id",
                          and "zone".
                        type: object
                      type:
                        description: The monitored resource type. This field must
                          match the type field of a MonitoredResourceDescriptor (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.monitoredResourceDescriptors#MonitoredResourceDescriptor)
                          object. For example, the type of a Compute Engine VM instance
                          is gce_instance. For a list of types, see Monitoring resource
                          types (https://cloud.google.com/monitoring/api/resources)
                          and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
                        type: string
                    required:
                    - labels
                    - type
                    type: object
                  name:
                    description: A unique resource name for this UptimeCheckConfig.
                      The format is projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
                    type: string
                  period:
                    description: How often, in seconds, the uptime check is performed.
                      Currently, the only supported values are 60s (1 minute), 300s
                      (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional,
                      defaults to 300s.
                    type: string
                  project:
                    type: string
                  resourceGroup:
                    description: The group resource associated with the configuration.
                    properties:
                      groupID:
                        description: The group of resources being monitored. Should
                          be the 'name' of a group
                        type: string
                      resourceType:
                        description: 'The resource type of the group members. Possible
                          values: ["RESOURCE_TYPE_UNSPECIFIED", "INSTANCE", "AWS_ELB_LOAD_BALANCER"]'
                        type: string
                    type: object
                  selectedRegions:
                    description: The list of regions from which the check will be
                      run. Some regions contain one location, and others contain more
                      than one. If this field is specified, enough regions to include
                      a minimum of 3 locations must be provided, or an error message
                      is returned. Not specifying this field will result in uptime
                      checks running from all regions.
                    items:
                      type: string
                    type: array
                  tcpCheck:
                    description: Contains information needed to make a TCP check.
                    properties:
                      port:
                        description: The port to the page to run the check against.
                          Will be combined with host (specified within the MonitoredResource)
                          to construct the full URL.
                        format: int64
                        type: integer
                    required:
                    - port
                    type: object
                  timeout:
                    description: The maximum amount of time to wait for the request
                      to complete (must be between 1 and 60 seconds). Accepted formats
                      https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  uptimeCheckID:
                    description: The id of the uptime check
                    type: string
                required:
                - displayName
                - timeout
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              state:
                properties:
                  contentMatchers:
                    description: The expected content on the page the check is run
                      against. Currently, only the first entry in the list is supported,
                      and other entries will be ignored. The server will look for
                      an exact match of the string in the page response's content.
                      This field is optional and should only be specified if a content
                      match is required.
                    items:
                      properties:
                        content:
                          description: String or regex content to match (max 1024
                            bytes)
                          type: string
                        matcher:
                          description: 'The type of content matcher that will be applied
                            to the server output, compared to the content string when
                            the check is run. Default value: "CONTAINS_STRING" Possible
                            values: ["CONTAINS_STRING", "NOT_CONTAINS_STRING", "MATCHES_REGEX",
                            "NON_MATCHES_REGEX"]'
                          type: string
                      required:
                      - content
                      type: object
                    type: array
                  displayName:
                    description: A human-friendly name for the uptime check configuration.
                      The display name should be unique within a Stackdriver Workspace
                      in order to make it easier to identify; however, uniqueness
                      is not enforced.
                    type: string
                  httpCheck:
                    description: Contains information needed to make an HTTP or HTTPS
                      check.
                    properties:
                      authInfo:
                        description: The authentication information. Optional when
                          creating an HTTP check; defaults to empty.
                        properties:
                          username:
                            description: The username to authenticate.
                            type: string
                        required:
                        - username
                        type: object
                      body:
                        description: The request body associated with the HTTP POST
                          request. If contentType is URL_ENCODED, the body passed
                          in must be URL-encoded. Users can provide a Content-Length
                          header via the headers field or the API will do so. If the
                          requestMethod is GET and body is not empty, the API will
                          return an error. The maximum byte size is 1 megabyte. Note
                          - As with all bytes fields JSON representations are base64
                          encoded. e.g. "foo=bar" in URL-encoded form is "foo%3Dbar"
                          and in base64 encoding is "Zm9vJTI1M0RiYXI=".
                        type: string
                      contentType:
                        description: 'The content type to use for the check. Possible
                          values: ["TYPE_UNSPECIFIED", "URL_ENCODED"]'
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: The list of headers to send as part of the uptime
                          check request. If two headers have the same key and different
                          values, they should be entered as a single header, with
                          the value being a comma-separated list of all the desired
                          values as described at https://www.w3.org/Protocols/rfc2616/rfc2616.txt
                          (page 31). Entering two separate headers with the same key
                          in a Create call will cause the first to be overwritten
                          by the second. The maximum number of headers allowed is
                          100.
                        type: object
                      maskHeaders:
                        description: Boolean specifying whether to encrypt the header
                          information. Encryption should be specified for any headers
                          related to authentication that you do not wish to be seen
                          when retrieving the configuration. The server will be responsible
                          for encrypting the headers. On Get/List calls, if mask_headers
                          is set to True then the headers will be obscured with ******.
                        type: boolean
                      path:
                        description: The path to the page to run the check against.
                          Will be combined with the host (specified within the MonitoredResource)
                          and port to construct the full URL. Optional (defaults to
                          "/").
                        type: string
                      port:
                        description: The port to the page to run the check against.
                          Will be combined with host (specified within the MonitoredResource)
                          and path to construct the full URL. Optional (defaults to
                          80 without SSL, or 443 with SSL).
                        format: int64
                        type: integer
                      requestMethod:
                        description: 'The HTTP request method to use for the check.
                          If set to METHOD_UNSPECIFIED then requestMethod defaults
                          to GET. Default value: "GET" Possible values: ["METHOD_UNSPECIFIED",
                          "GET", "POST"]'
                        type: string
                      useSsl:
                        description: If true, use HTTPS instead of HTTP to run the
                          check.
                        type: boolean
                      validateSsl:
                        description: Boolean specifying whether to include SSL certificate
                          validation as a part of the Uptime check. Only applies to
                          checks where monitoredResource is set to uptime_url. If
                          useSsl is false, setting validateSsl to true has no effect.
                        type: boolean
                    type: object
                  id:
                    type: string
                  monitoredResource:
                    description: 'The monitored resource (https://cloud.google.com/monitoring/api/resources)
                      associated with the configuration. The following monitored resource
                      types are supported for uptime checks:  uptime_url  gce_instance  gae_app  aws_ec2_instance  aws_elb_load_balancer'
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Values for all of the labels listed in the associated
                          monitored resource descriptor. For example, Compute Engine
                          VM instances use the labels "project_id", "instance_id",
                          and "zone".
                        type: object
                      type:
                        description: The monitored resource type. This field must
                          match the type field of a MonitoredResourceDescriptor (https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.monitoredResourceDescriptors#MonitoredResourceDescriptor)
                          object. For example, the type of a Compute Engine VM instance
                          is gce_instance. For a list of types, see Monitoring resource
                          types (https://cloud.google.com/monitoring/api/resources)
                          and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
                        type: string
                    required:
                    - labels
                    - type
                    type: object
                  name:
                    description: A unique resource name for this UptimeCheckConfig.
                      The format is projects/[PROJECT_ID]/uptimeCheckConfigs/[UPTIME_CHECK_ID].
                    type: string
                  period:
                    description: How often, in seconds, the uptime check is performed.
                      Currently, the only supported values are 60s (1 minute), 300s
                      (5 minutes), 600s (10 minutes), and 900s (15 minutes). Optional,
                      defaults to 300s.
                    type: string
                  project:
                    type: string
                  resourceGroup:
                    description: The group resource associated with the configuration.
                    properties:
                      groupID:
                        description: The group of resources being monitored. Should
                          be the 'name' of a group
                        type: string
                      resourceType:
                        description: 'The resource type of the group members. Possible
                          values: ["RESOURCE_TYPE_UNSPECIFIED", "INSTANCE", "AWS_ELB_LOAD_BALANCER"]'
                        type: string
                    type: object
                  selectedRegions:
                    description: The list of regions from which the check will be
                      run. Some regions contain one location, and others contain more
                      than one. If this field is specified, enough regions to include
                      a minimum of 3 locations must be provided, or an error message
                      is returned. Not specifying this field will result in uptime
                      checks running from all regions.
                    items:
                      type: string
                    type: array
                  tcpCheck:
                    description: Contains information needed to make a TCP check.
                    properties:
                      port:
                        description: The port to the page to run the check against.
                          Will be combined with host (specified within the MonitoredResource)
                          to construct the full URL.
                        format: int64
                        type: integer
                    required:
                    - port
                    type: object
                  timeout:
                    description: The maximum amount of time to wait for the request
                      to complete (must be between 1 and 60 seconds). Accepted formats
                      https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Duration
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  uptimeCheckID:
                    description: The id of the uptime check
                    type: string
                required:
                - displayName
                - timeout
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
