apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: standardappversions.appengine.google.kubeform.com
spec:
  group: appengine.google.kubeform.com
  names:
    kind: StandardAppVersion
    listKind: StandardAppVersionList
    plural: standardappversions
    singular: standardappversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  automaticScaling:
                    description: Automatic scaling is based on request rate, response
                      latencies, and other application metrics.
                    properties:
                      maxConcurrentRequests:
                        description: "Number of concurrent requests an automatic scaling
                          instance can accept before the scheduler spawns a new instance.
                          \n Defaults to a runtime-specific value."
                        format: int64
                        type: integer
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        format: int64
                        type: integer
                      maxPendingLatency:
                        description: 'Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it. A duration in seconds with up to nine fractional
                          digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        format: int64
                        type: integer
                      minPendingLatency:
                        description: 'Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it. A duration in seconds with up to nine fractional digits,
                          terminated by ''s''. Example: "3.5s".'
                        type: string
                      standardSchedulerSettings:
                        description: Scheduler settings for standard environment.
                        properties:
                          maxInstances:
                            description: Maximum number of instances to run for this
                              version. Set to zero to disable maxInstances configuration.
                            format: int64
                            type: integer
                          minInstances:
                            description: Minimum number of instances to run for this
                              version. Set to zero to disable minInstances configuration.
                            format: int64
                            type: integer
                          targetCPUUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Should be a value in the range [0.50,
                              0.95], zero, or a negative value.
                            format: double
                            type: number
                          targetThroughputUtilization:
                            description: Target throughput utilization ratio to maintain
                              when scaling. Should be a value in the range [0.50,
                              0.95], zero, or a negative value.
                            format: double
                            type: number
                        type: object
                    type: object
                  basicScaling:
                    description: Basic scaling creates instances when your application
                      receives requests. Each instance will be shut down when the
                      application becomes idle. Basic scaling is ideal for work that
                      is intermittent or driven by user activity.
                    properties:
                      idleTimeout:
                        description: 'Duration of time after the last request that
                          an instance must wait before the instance is shut down.
                          A duration in seconds with up to nine fractional digits,
                          terminated by ''s''. Example: "3.5s". Defaults to 900s.'
                        type: string
                      maxInstances:
                        description: Maximum number of instances to create for this
                          version. Must be in the range [1.0, 200.0].
                        format: int64
                        type: integer
                    required:
                    - maxInstances
                    type: object
                  deleteServiceOnDestroy:
                    type: boolean
                  deployment:
                    description: Code and application artifacts that make up this
                      version.
                    properties:
                      files:
                        description: Manifest of the files stored in Google Cloud
                          Storage that are included as part of this version. All files
                          must be readable using the credentials supplied with this
                          call.
                        items:
                          properties:
                            name:
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceURL:
                              description: Source URL
                              type: string
                          required:
                          - name
                          - sourceURL
                          type: object
                        type: array
                      zip:
                        description: Zip File
                        properties:
                          filesCount:
                            description: files count
                            format: int64
                            type: integer
                          sourceURL:
                            description: Source URL
                            type: string
                        required:
                        - sourceURL
                        type: object
                    type: object
                  entrypoint:
                    description: The entrypoint for the application.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    required:
                    - shell
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                  handlers:
                    description: An ordered list of URL-matching patterns that should
                      be applied to incoming requests. The first matching URL handles
                      the request and other request handlers are not attempted.
                    items:
                      properties:
                        authFailAction:
                          description: 'Actions to take when the user is not logged
                            in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                          type: string
                        login:
                          description: 'Methods to restrict access to a URL based
                            on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                            "LOGIN_REQUIRED"]'
                          type: string
                        redirectHTTPResponseCode:
                          description: '30x code to use when performing redirects
                            for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                            "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                            "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                          type: string
                        script:
                          description: Executes a script to handle the requests that
                            match this URL pattern. Only the auto value is supported
                            for Node.js in the App Engine standard environment, for
                            example "script:" "auto".
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          required:
                          - scriptPath
                          type: object
                        securityLevel:
                          description: 'Security (HTTPS) enforcement for this URL.
                            Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                            "SECURE_ALWAYS"]'
                          type: string
                        staticFiles:
                          description: Files served directly to the user for a given
                            URL, such as images, CSS stylesheets, or JavaScript source
                            files. Static file handlers describe which files in the
                            application directory are static files, and which URLs
                            serve them.
                          properties:
                            applicationReadable:
                              description: Whether files should also be uploaded as
                                code data. By default, files declared in static file
                                handlers are uploaded as static data and are only
                                served to end users; they cannot be read by the application.
                                If enabled, uploads are charged against both your
                                code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: Time a static file served by this handler
                                should be cached by web proxies and browsers. A duration
                                in seconds with up to nine fractional digits, terminated
                                by 's'. Example "3.5s".
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: HTTP headers to use for all responses from
                                these URLs. An object containing a list of "key:value"
                                value pairs.".
                              type: object
                            mimeType:
                              description: MIME type used to serve all files served
                                by this handler. Defaults to file-specific MIME types,
                                which are derived from each file's filename extension.
                              type: string
                            path:
                              description: Path to the static files matched by the
                                URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in
                                the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: URL prefix. Uses regular expression syntax,
                            which means regexp special characters must be escaped,
                            but should not contain groupings. All URLs that begin
                            with this prefix are handled by this handler, using the
                            portion of the URL after the prefix as part of the file
                            path.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  inboundServices:
                    description: 'A list of the types of messages that this application
                      is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
                      "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR",
                      "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                      "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                      "INBOUND_SERVICE_WARMUP"]'
                    items:
                      type: string
                    type: array
                  instanceClass:
                    description: 'Instance class that is used to run this version.
                      Valid values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling
                      or ManualScaling: B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling
                      and B2 for ManualScaling and BasicScaling. If no scaling is
                      specified, AutomaticScaling is chosen.'
                    type: string
                  libraries:
                    description: Configuration for third-party Python runtime libraries
                      that are required by the application.
                    items:
                      properties:
                        name:
                          description: Name of the library. Example "django".
                          type: string
                        version:
                          description: Version of the library to select, or "latest".
                          type: string
                      type: object
                    type: array
                  manualScaling:
                    description: A service with manual scaling runs continuously,
                      allowing you to perform complex initialization and rely on the
                      state of its memory over time.
                    properties:
                      instances:
                        description: "Number of instances to assign to the service
                          at the start. \n **Note:** When managing the number of instances
                          at runtime through the App Engine Admin API or the (now
                          deprecated) Python 2 Modules API set_num_instances() you
                          must use 'lifecycle.ignore_changes = [\"manual_scaling\"[0].instances]'
                          to prevent drift detection."
                        format: int64
                        type: integer
                    required:
                    - instances
                    type: object
                  name:
                    description: Full path to the Version resource in the API. Example,
                      "v1".
                    type: string
                  noopOnDestroy:
                    type: boolean
                  project:
                    type: string
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeAPIVersion:
                    description: The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\
                      Substitute '<language>' with 'python', 'java', 'php', 'ruby',
                      'go' or 'nodejs'.
                    type: string
                  service:
                    description: AppEngine service resource
                    type: string
                  threadsafe:
                    description: Whether multiple requests can be dispatched to this
                      version at once.
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  versionID:
                    description: Relative name of the version within the service.
                      For example, 'v1'. Version names can contain only lowercase
                      letters, numbers, or hyphens. Reserved names,"default", "latest",
                      and any name with the prefix "ah-".
                    type: string
                  vpcAccessConnector:
                    description: Enables VPC connectivity for standard apps.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - deployment
                - entrypoint
                - runtime
                - service
                type: object
              state:
                properties:
                  automaticScaling:
                    description: Automatic scaling is based on request rate, response
                      latencies, and other application metrics.
                    properties:
                      maxConcurrentRequests:
                        description: "Number of concurrent requests an automatic scaling
                          instance can accept before the scheduler spawns a new instance.
                          \n Defaults to a runtime-specific value."
                        format: int64
                        type: integer
                      maxIdleInstances:
                        description: Maximum number of idle instances that should
                          be maintained for this version.
                        format: int64
                        type: integer
                      maxPendingLatency:
                        description: 'Maximum amount of time that a request should
                          wait in the pending queue before starting a new instance
                          to handle it. A duration in seconds with up to nine fractional
                          digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      minIdleInstances:
                        description: Minimum number of idle instances that should
                          be maintained for this version. Only applicable for the
                          default version of a service.
                        format: int64
                        type: integer
                      minPendingLatency:
                        description: 'Minimum amount of time a request should wait
                          in the pending queue before starting a new instance to handle
                          it. A duration in seconds with up to nine fractional digits,
                          terminated by ''s''. Example: "3.5s".'
                        type: string
                      standardSchedulerSettings:
                        description: Scheduler settings for standard environment.
                        properties:
                          maxInstances:
                            description: Maximum number of instances to run for this
                              version. Set to zero to disable maxInstances configuration.
                            format: int64
                            type: integer
                          minInstances:
                            description: Minimum number of instances to run for this
                              version. Set to zero to disable minInstances configuration.
                            format: int64
                            type: integer
                          targetCPUUtilization:
                            description: Target CPU utilization ratio to maintain
                              when scaling. Should be a value in the range [0.50,
                              0.95], zero, or a negative value.
                            format: double
                            type: number
                          targetThroughputUtilization:
                            description: Target throughput utilization ratio to maintain
                              when scaling. Should be a value in the range [0.50,
                              0.95], zero, or a negative value.
                            format: double
                            type: number
                        type: object
                    type: object
                  basicScaling:
                    description: Basic scaling creates instances when your application
                      receives requests. Each instance will be shut down when the
                      application becomes idle. Basic scaling is ideal for work that
                      is intermittent or driven by user activity.
                    properties:
                      idleTimeout:
                        description: 'Duration of time after the last request that
                          an instance must wait before the instance is shut down.
                          A duration in seconds with up to nine fractional digits,
                          terminated by ''s''. Example: "3.5s". Defaults to 900s.'
                        type: string
                      maxInstances:
                        description: Maximum number of instances to create for this
                          version. Must be in the range [1.0, 200.0].
                        format: int64
                        type: integer
                    required:
                    - maxInstances
                    type: object
                  deleteServiceOnDestroy:
                    type: boolean
                  deployment:
                    description: Code and application artifacts that make up this
                      version.
                    properties:
                      files:
                        description: Manifest of the files stored in Google Cloud
                          Storage that are included as part of this version. All files
                          must be readable using the credentials supplied with this
                          call.
                        items:
                          properties:
                            name:
                              type: string
                            sha1Sum:
                              description: SHA1 checksum of the file
                              type: string
                            sourceURL:
                              description: Source URL
                              type: string
                          required:
                          - name
                          - sourceURL
                          type: object
                        type: array
                      zip:
                        description: Zip File
                        properties:
                          filesCount:
                            description: files count
                            format: int64
                            type: integer
                          sourceURL:
                            description: Source URL
                            type: string
                        required:
                        - sourceURL
                        type: object
                    type: object
                  entrypoint:
                    description: The entrypoint for the application.
                    properties:
                      shell:
                        description: The format should be a shell command that can
                          be fed to bash -c.
                        type: string
                    required:
                    - shell
                    type: object
                  envVariables:
                    additionalProperties:
                      type: string
                    description: Environment variables available to the application.
                    type: object
                  handlers:
                    description: An ordered list of URL-matching patterns that should
                      be applied to incoming requests. The first matching URL handles
                      the request and other request handlers are not attempted.
                    items:
                      properties:
                        authFailAction:
                          description: 'Actions to take when the user is not logged
                            in. Possible values: ["AUTH_FAIL_ACTION_REDIRECT", "AUTH_FAIL_ACTION_UNAUTHORIZED"]'
                          type: string
                        login:
                          description: 'Methods to restrict access to a URL based
                            on login status. Possible values: ["LOGIN_OPTIONAL", "LOGIN_ADMIN",
                            "LOGIN_REQUIRED"]'
                          type: string
                        redirectHTTPResponseCode:
                          description: '30x code to use when performing redirects
                            for the secure field. Possible values: ["REDIRECT_HTTP_RESPONSE_CODE_301",
                            "REDIRECT_HTTP_RESPONSE_CODE_302", "REDIRECT_HTTP_RESPONSE_CODE_303",
                            "REDIRECT_HTTP_RESPONSE_CODE_307"]'
                          type: string
                        script:
                          description: Executes a script to handle the requests that
                            match this URL pattern. Only the auto value is supported
                            for Node.js in the App Engine standard environment, for
                            example "script:" "auto".
                          properties:
                            scriptPath:
                              description: Path to the script from the application
                                root directory.
                              type: string
                          required:
                          - scriptPath
                          type: object
                        securityLevel:
                          description: 'Security (HTTPS) enforcement for this URL.
                            Possible values: ["SECURE_DEFAULT", "SECURE_NEVER", "SECURE_OPTIONAL",
                            "SECURE_ALWAYS"]'
                          type: string
                        staticFiles:
                          description: Files served directly to the user for a given
                            URL, such as images, CSS stylesheets, or JavaScript source
                            files. Static file handlers describe which files in the
                            application directory are static files, and which URLs
                            serve them.
                          properties:
                            applicationReadable:
                              description: Whether files should also be uploaded as
                                code data. By default, files declared in static file
                                handlers are uploaded as static data and are only
                                served to end users; they cannot be read by the application.
                                If enabled, uploads are charged against both your
                                code and static data storage resource quotas.
                              type: boolean
                            expiration:
                              description: Time a static file served by this handler
                                should be cached by web proxies and browsers. A duration
                                in seconds with up to nine fractional digits, terminated
                                by 's'. Example "3.5s".
                              type: string
                            httpHeaders:
                              additionalProperties:
                                type: string
                              description: HTTP headers to use for all responses from
                                these URLs. An object containing a list of "key:value"
                                value pairs.".
                              type: object
                            mimeType:
                              description: MIME type used to serve all files served
                                by this handler. Defaults to file-specific MIME types,
                                which are derived from each file's filename extension.
                              type: string
                            path:
                              description: Path to the static files matched by the
                                URL pattern, from the application root directory.
                                The path can refer to text matched in groupings in
                                the URL pattern.
                              type: string
                            requireMatchingFile:
                              description: Whether this handler should match the request
                                if the file referenced by the handler does not exist.
                              type: boolean
                            uploadPathRegex:
                              description: Regular expression that matches the file
                                paths for all files that should be referenced by this
                                handler.
                              type: string
                          type: object
                        urlRegex:
                          description: URL prefix. Uses regular expression syntax,
                            which means regexp special characters must be escaped,
                            but should not contain groupings. All URLs that begin
                            with this prefix are handled by this handler, using the
                            portion of the URL after the prefix as part of the file
                            path.
                          type: string
                      type: object
                    type: array
                  id:
                    type: string
                  inboundServices:
                    description: 'A list of the types of messages that this application
                      is able to receive. Possible values: ["INBOUND_SERVICE_MAIL",
                      "INBOUND_SERVICE_MAIL_BOUNCE", "INBOUND_SERVICE_XMPP_ERROR",
                      "INBOUND_SERVICE_XMPP_MESSAGE", "INBOUND_SERVICE_XMPP_SUBSCRIBE",
                      "INBOUND_SERVICE_XMPP_PRESENCE", "INBOUND_SERVICE_CHANNEL_PRESENCE",
                      "INBOUND_SERVICE_WARMUP"]'
                    items:
                      type: string
                    type: array
                  instanceClass:
                    description: 'Instance class that is used to run this version.
                      Valid values are AutomaticScaling: F1, F2, F4, F4_1G BasicScaling
                      or ManualScaling: B1, B2, B4, B4_1G, B8 Defaults to F1 for AutomaticScaling
                      and B2 for ManualScaling and BasicScaling. If no scaling is
                      specified, AutomaticScaling is chosen.'
                    type: string
                  libraries:
                    description: Configuration for third-party Python runtime libraries
                      that are required by the application.
                    items:
                      properties:
                        name:
                          description: Name of the library. Example "django".
                          type: string
                        version:
                          description: Version of the library to select, or "latest".
                          type: string
                      type: object
                    type: array
                  manualScaling:
                    description: A service with manual scaling runs continuously,
                      allowing you to perform complex initialization and rely on the
                      state of its memory over time.
                    properties:
                      instances:
                        description: "Number of instances to assign to the service
                          at the start. \n **Note:** When managing the number of instances
                          at runtime through the App Engine Admin API or the (now
                          deprecated) Python 2 Modules API set_num_instances() you
                          must use 'lifecycle.ignore_changes = [\"manual_scaling\"[0].instances]'
                          to prevent drift detection."
                        format: int64
                        type: integer
                    required:
                    - instances
                    type: object
                  name:
                    description: Full path to the Version resource in the API. Example,
                      "v1".
                    type: string
                  noopOnDestroy:
                    type: boolean
                  project:
                    type: string
                  runtime:
                    description: Desired runtime. Example python27.
                    type: string
                  runtimeAPIVersion:
                    description: The version of the API in the given runtime environment.
                      Please see the app.yaml reference for valid values at 'https://cloud.google.com/appengine/docs/standard/<language>/config/appref'\
                      Substitute '<language>' with 'python', 'java', 'php', 'ruby',
                      'go' or 'nodejs'.
                    type: string
                  service:
                    description: AppEngine service resource
                    type: string
                  threadsafe:
                    description: Whether multiple requests can be dispatched to this
                      version at once.
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  versionID:
                    description: Relative name of the version within the service.
                      For example, 'v1'. Version names can contain only lowercase
                      letters, numbers, or hyphens. Reserved names,"default", "latest",
                      and any name with the prefix "ah-".
                    type: string
                  vpcAccessConnector:
                    description: Enables VPC connectivity for standard apps.
                    properties:
                      name:
                        description: Full Serverless VPC Access Connector name e.g.
                          /projects/my-project/locations/us-central1/connectors/c1.
                        type: string
                    required:
                    - name
                    type: object
                required:
                - deployment
                - entrypoint
                - runtime
                - service
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
