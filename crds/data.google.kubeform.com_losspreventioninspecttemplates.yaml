apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: losspreventioninspecttemplates.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: LossPreventionInspectTemplate
    listKind: LossPreventionInspectTemplateList
    plural: losspreventioninspecttemplates
    singular: losspreventioninspecttemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  description:
                    description: A description of the inspect template.
                    type: string
                  displayName:
                    description: User set display name of the inspect template.
                    type: string
                  id:
                    type: string
                  inspectConfig:
                    description: The core content of the template.
                    properties:
                      contentOptions:
                        description: 'List of options defining data content to scan.
                          If empty, text, images, and other content will be included.
                          Possible values: ["CONTENT_TEXT", "CONTENT_IMAGE"]'
                        items:
                          type: string
                        type: array
                      customInfoTypes:
                        description: Custom info types to be used. See https://cloud.google.com/dlp/docs/creating-custom-infotypes
                          to learn more.
                        items:
                          properties:
                            dictionary:
                              description: Dictionary which defines the rule.
                              properties:
                                cloudStoragePath:
                                  description: Newline-delimited file of words in
                                    Cloud Storage. Only a single file is accepted.
                                  properties:
                                    path:
                                      description: 'A url representing a file or path
                                        (no wildcards) in Cloud Storage. Example:
                                        ''gs://[BUCKET_NAME]/dictionary.txt'''
                                      type: string
                                  required:
                                  - path
                                  type: object
                                wordList:
                                  description: List of words or phrases to search
                                    for.
                                  properties:
                                    words:
                                      description: Words or phrases defining the dictionary.
                                        The dictionary must contain at least one phrase
                                        and every phrase must contain at least 2 characters
                                        that are letters or digits.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - words
                                  type: object
                              type: object
                            exclusionType:
                              description: 'If set to EXCLUSION_TYPE_EXCLUDE this
                                infoType will not cause a finding to be returned.
                                It still can be used for rules matching. Possible
                                values: ["EXCLUSION_TYPE_EXCLUDE"]'
                              type: string
                            infoType:
                              description: CustomInfoType can either be a new infoType,
                                or an extension of built-in infoType, when the name
                                matches one of existing infoTypes and that infoType
                                is specified in 'info_types' field. Specifying the
                                latter adds findings to the one detected by the system.
                                If built-in info type is not specified in 'info_types'
                                list then the name is treated as a custom info type.
                              properties:
                                name:
                                  description: Name of the information type. Either
                                    a name of your choosing when creating a CustomInfoType,
                                    or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                    when specifying a built-in type.
                                  type: string
                              required:
                              - name
                              type: object
                            likelihood:
                              description: 'Likelihood to return for this CustomInfoType.
                                This base value can be altered by a detection rule
                                if the finding meets the criteria specified by the
                                rule. Default value: "VERY_LIKELY" Possible values:
                                ["VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY",
                                "VERY_LIKELY"]'
                              type: string
                            regex:
                              description: Regular expression which defines the rule.
                              properties:
                                groupIndexes:
                                  description: The index of the submatch to extract
                                    as findings. When not specified, the entire match
                                    is returned. No more than 3 may be included.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                pattern:
                                  description: Pattern defining the regular expression.
                                    Its syntax (https://github.com/google/re2/wiki/Syntax)
                                    can be found under the google/re2 repository on
                                    GitHub.
                                  type: string
                              required:
                              - pattern
                              type: object
                            storedType:
                              description: A reference to a StoredInfoType to use
                                with scanning.
                              properties:
                                name:
                                  description: Resource name of the requested StoredInfoType,
                                    for example 'organizations/433245324/storedInfoTypes/432452342'
                                    or 'projects/project-id/storedInfoTypes/432452342'.
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - infoType
                          type: object
                        type: array
                      excludeInfoTypes:
                        description: When true, excludes type information of the findings.
                        type: boolean
                      includeQuote:
                        description: When true, a contextual quote from the data that
                          triggered a finding is included in the response.
                        type: boolean
                      infoTypes:
                        description: "Restricts what infoTypes to look for. The values
                          must correspond to InfoType values returned by infoTypes.list
                          or listed at https://cloud.google.com/dlp/docs/infotypes-reference.
                          \n When no InfoTypes or CustomInfoTypes are specified in
                          a request, the system may automatically choose what detectors
                          to run. By default this may be all types, but may change
                          over time as detectors are updated."
                        items:
                          properties:
                            name:
                              description: Name of the information type. Either a
                                name of your choosing when creating a CustomInfoType,
                                or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                when specifying a built-in type.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      limits:
                        description: Configuration to control the number of findings
                          returned.
                        properties:
                          maxFindingsPerInfoType:
                            description: Configuration of findings limit given for
                              specified infoTypes.
                            items:
                              properties:
                                infoType:
                                  description: Type of information the findings limit
                                    applies to. Only one limit per infoType should
                                    be provided. If InfoTypeLimit does not have an
                                    infoType, the DLP API applies the limit against
                                    all infoTypes that are found but not specified
                                    in another InfoTypeLimit.
                                  properties:
                                    name:
                                      description: Name of the information type. Either
                                        a name of your choosing when creating a CustomInfoType,
                                        or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                        when specifying a built-in type.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxFindings:
                                  description: Max findings limit for the given infoType.
                                  format: int64
                                  type: integer
                              required:
                              - infoType
                              - maxFindings
                              type: object
                            type: array
                          maxFindingsPerItem:
                            description: Max number of findings that will be returned
                              for each item scanned. The maximum returned is 2000.
                            format: int64
                            type: integer
                          maxFindingsPerRequest:
                            description: Max number of findings that will be returned
                              per request/job. The maximum returned is 2000.
                            format: int64
                            type: integer
                        required:
                        - maxFindingsPerItem
                        - maxFindingsPerRequest
                        type: object
                      minLikelihood:
                        description: 'Only returns findings equal or above this threshold.
                          See https://cloud.google.com/dlp/docs/likelihood for more
                          info Default value: "POSSIBLE" Possible values: ["VERY_UNLIKELY",
                          "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                        type: string
                      ruleSet:
                        description: Set of rules to apply to the findings for this
                          InspectConfig. Exclusion rules, contained in the set are
                          executed in the end, other rules are executed in the order
                          they are specified for each info type.
                        items:
                          properties:
                            infoTypes:
                              description: List of infoTypes this rule set is applied
                                to.
                              items:
                                properties:
                                  name:
                                    description: Name of the information type. Either
                                      a name of your choosing when creating a CustomInfoType,
                                      or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                      when specifying a built-in type.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            rules:
                              description: Set of rules to be applied to infoTypes.
                                The rules are applied in order.
                              items:
                                properties:
                                  exclusionRule:
                                    description: The rule that specifies conditions
                                      when findings of infoTypes specified in InspectionRuleSet
                                      are removed from results.
                                    properties:
                                      dictionary:
                                        description: Dictionary which defines the
                                          rule.
                                        properties:
                                          cloudStoragePath:
                                            description: Newline-delimited file of
                                              words in Cloud Storage. Only a single
                                              file is accepted.
                                            properties:
                                              path:
                                                description: 'A url representing a
                                                  file or path (no wildcards) in Cloud
                                                  Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          wordList:
                                            description: List of words or phrases
                                              to search for.
                                            properties:
                                              words:
                                                description: Words or phrases defining
                                                  the dictionary. The dictionary must
                                                  contain at least one phrase and
                                                  every phrase must contain at least
                                                  2 characters that are letters or
                                                  digits.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - words
                                            type: object
                                        type: object
                                      excludeInfoTypes:
                                        description: Set of infoTypes for which findings
                                          would affect this rule.
                                        properties:
                                          infoTypes:
                                            description: If a finding is matched by
                                              any of the infoType detectors listed
                                              here, the finding will be excluded from
                                              the scan results.
                                            items:
                                              properties:
                                                name:
                                                  description: Name of the information
                                                    type. Either a name of your choosing
                                                    when creating a CustomInfoType,
                                                    or one of the names listed at
                                                    https://cloud.google.com/dlp/docs/infotypes-reference
                                                    when specifying a built-in type.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                        required:
                                        - infoTypes
                                        type: object
                                      matchingType:
                                        description: 'How the rule is applied. See
                                          the documentation for more information:
                                          https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#MatchingType
                                          Possible values: ["MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH", "MATCHING_TYPE_INVERSE_MATCH"]'
                                        type: string
                                      regex:
                                        description: Regular expression which defines
                                          the rule.
                                        properties:
                                          groupIndexes:
                                            description: The index of the submatch
                                              to extract as findings. When not specified,
                                              the entire match is returned. No more
                                              than 3 may be included.
                                            items:
                                              format: int64
                                              type: integer
                                            type: array
                                          pattern:
                                            description: Pattern defining the regular
                                              expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                              can be found under the google/re2 repository
                                              on GitHub.
                                            type: string
                                        required:
                                        - pattern
                                        type: object
                                    required:
                                    - matchingType
                                    type: object
                                  hotwordRule:
                                    description: Hotword-based detection rule.
                                    properties:
                                      hotwordRegex:
                                        description: Regular expression pattern defining
                                          what qualifies as a hotword.
                                        properties:
                                          groupIndexes:
                                            description: The index of the submatch
                                              to extract as findings. When not specified,
                                              the entire match is returned. No more
                                              than 3 may be included.
                                            items:
                                              format: int64
                                              type: integer
                                            type: array
                                          pattern:
                                            description: Pattern defining the regular
                                              expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                              can be found under the google/re2 repository
                                              on GitHub.
                                            type: string
                                        required:
                                        - pattern
                                        type: object
                                      likelihoodAdjustment:
                                        description: Likelihood adjustment to apply
                                          to all matching findings.
                                        properties:
                                          fixedLikelihood:
                                            description: 'Set the likelihood of a
                                              finding to a fixed value. Either this
                                              or relative_likelihood can be set. Possible
                                              values: ["VERY_UNLIKELY", "UNLIKELY",
                                              "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                                            type: string
                                          relativeLikelihood:
                                            description: Increase or decrease the
                                              likelihood by the specified number of
                                              levels. For example, if a finding would
                                              be POSSIBLE without the detection rule
                                              and relativeLikelihood is 1, then it
                                              is upgraded to LIKELY, while a value
                                              of -1 would downgrade it to UNLIKELY.
                                              Likelihood may never drop below VERY_UNLIKELY
                                              or exceed VERY_LIKELY, so applying an
                                              adjustment of 1 followed by an adjustment
                                              of -1 when base likelihood is VERY_LIKELY
                                              will result in a final likelihood of
                                              LIKELY. Either this or fixed_likelihood
                                              can be set.
                                            format: int64
                                            type: integer
                                        type: object
                                      proximity:
                                        description: Proximity of the finding within
                                          which the entire hotword must reside. The
                                          total length of the window cannot exceed
                                          1000 characters. Note that the finding itself
                                          will be included in the window, so that
                                          hotwords may be used to match substrings
                                          of the finding itself. For example, the
                                          certainty of a phone number regex '(\\d{3})
                                          \\d{3}-\\d{4}' could be adjusted upwards
                                          if the area code is known to be the local
                                          area code of a company office using the
                                          hotword regex '(xxx)', where 'xxx' is the
                                          area code in question.
                                        properties:
                                          windowAfter:
                                            description: Number of characters after
                                              the finding to consider. Either this
                                              or window_before must be specified
                                            format: int64
                                            type: integer
                                          windowBefore:
                                            description: Number of characters before
                                              the finding to consider. Either this
                                              or window_after must be specified
                                            format: int64
                                            type: integer
                                        type: object
                                    required:
                                    - hotwordRegex
                                    - likelihoodAdjustment
                                    - proximity
                                    type: object
                                type: object
                              type: array
                          required:
                          - infoTypes
                          - rules
                          type: object
                        type: array
                    type: object
                  name:
                    description: The resource name of the inspect template. Set by
                      the server.
                    type: string
                  parent:
                    description: "The parent of the inspect template in any of the
                      following formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                      * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - parent
                type: object
              state:
                properties:
                  description:
                    description: A description of the inspect template.
                    type: string
                  displayName:
                    description: User set display name of the inspect template.
                    type: string
                  id:
                    type: string
                  inspectConfig:
                    description: The core content of the template.
                    properties:
                      contentOptions:
                        description: 'List of options defining data content to scan.
                          If empty, text, images, and other content will be included.
                          Possible values: ["CONTENT_TEXT", "CONTENT_IMAGE"]'
                        items:
                          type: string
                        type: array
                      customInfoTypes:
                        description: Custom info types to be used. See https://cloud.google.com/dlp/docs/creating-custom-infotypes
                          to learn more.
                        items:
                          properties:
                            dictionary:
                              description: Dictionary which defines the rule.
                              properties:
                                cloudStoragePath:
                                  description: Newline-delimited file of words in
                                    Cloud Storage. Only a single file is accepted.
                                  properties:
                                    path:
                                      description: 'A url representing a file or path
                                        (no wildcards) in Cloud Storage. Example:
                                        ''gs://[BUCKET_NAME]/dictionary.txt'''
                                      type: string
                                  required:
                                  - path
                                  type: object
                                wordList:
                                  description: List of words or phrases to search
                                    for.
                                  properties:
                                    words:
                                      description: Words or phrases defining the dictionary.
                                        The dictionary must contain at least one phrase
                                        and every phrase must contain at least 2 characters
                                        that are letters or digits.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - words
                                  type: object
                              type: object
                            exclusionType:
                              description: 'If set to EXCLUSION_TYPE_EXCLUDE this
                                infoType will not cause a finding to be returned.
                                It still can be used for rules matching. Possible
                                values: ["EXCLUSION_TYPE_EXCLUDE"]'
                              type: string
                            infoType:
                              description: CustomInfoType can either be a new infoType,
                                or an extension of built-in infoType, when the name
                                matches one of existing infoTypes and that infoType
                                is specified in 'info_types' field. Specifying the
                                latter adds findings to the one detected by the system.
                                If built-in info type is not specified in 'info_types'
                                list then the name is treated as a custom info type.
                              properties:
                                name:
                                  description: Name of the information type. Either
                                    a name of your choosing when creating a CustomInfoType,
                                    or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                    when specifying a built-in type.
                                  type: string
                              required:
                              - name
                              type: object
                            likelihood:
                              description: 'Likelihood to return for this CustomInfoType.
                                This base value can be altered by a detection rule
                                if the finding meets the criteria specified by the
                                rule. Default value: "VERY_LIKELY" Possible values:
                                ["VERY_UNLIKELY", "UNLIKELY", "POSSIBLE", "LIKELY",
                                "VERY_LIKELY"]'
                              type: string
                            regex:
                              description: Regular expression which defines the rule.
                              properties:
                                groupIndexes:
                                  description: The index of the submatch to extract
                                    as findings. When not specified, the entire match
                                    is returned. No more than 3 may be included.
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                                pattern:
                                  description: Pattern defining the regular expression.
                                    Its syntax (https://github.com/google/re2/wiki/Syntax)
                                    can be found under the google/re2 repository on
                                    GitHub.
                                  type: string
                              required:
                              - pattern
                              type: object
                            storedType:
                              description: A reference to a StoredInfoType to use
                                with scanning.
                              properties:
                                name:
                                  description: Resource name of the requested StoredInfoType,
                                    for example 'organizations/433245324/storedInfoTypes/432452342'
                                    or 'projects/project-id/storedInfoTypes/432452342'.
                                  type: string
                              required:
                              - name
                              type: object
                          required:
                          - infoType
                          type: object
                        type: array
                      excludeInfoTypes:
                        description: When true, excludes type information of the findings.
                        type: boolean
                      includeQuote:
                        description: When true, a contextual quote from the data that
                          triggered a finding is included in the response.
                        type: boolean
                      infoTypes:
                        description: "Restricts what infoTypes to look for. The values
                          must correspond to InfoType values returned by infoTypes.list
                          or listed at https://cloud.google.com/dlp/docs/infotypes-reference.
                          \n When no InfoTypes or CustomInfoTypes are specified in
                          a request, the system may automatically choose what detectors
                          to run. By default this may be all types, but may change
                          over time as detectors are updated."
                        items:
                          properties:
                            name:
                              description: Name of the information type. Either a
                                name of your choosing when creating a CustomInfoType,
                                or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                when specifying a built-in type.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      limits:
                        description: Configuration to control the number of findings
                          returned.
                        properties:
                          maxFindingsPerInfoType:
                            description: Configuration of findings limit given for
                              specified infoTypes.
                            items:
                              properties:
                                infoType:
                                  description: Type of information the findings limit
                                    applies to. Only one limit per infoType should
                                    be provided. If InfoTypeLimit does not have an
                                    infoType, the DLP API applies the limit against
                                    all infoTypes that are found but not specified
                                    in another InfoTypeLimit.
                                  properties:
                                    name:
                                      description: Name of the information type. Either
                                        a name of your choosing when creating a CustomInfoType,
                                        or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                        when specifying a built-in type.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                maxFindings:
                                  description: Max findings limit for the given infoType.
                                  format: int64
                                  type: integer
                              required:
                              - infoType
                              - maxFindings
                              type: object
                            type: array
                          maxFindingsPerItem:
                            description: Max number of findings that will be returned
                              for each item scanned. The maximum returned is 2000.
                            format: int64
                            type: integer
                          maxFindingsPerRequest:
                            description: Max number of findings that will be returned
                              per request/job. The maximum returned is 2000.
                            format: int64
                            type: integer
                        required:
                        - maxFindingsPerItem
                        - maxFindingsPerRequest
                        type: object
                      minLikelihood:
                        description: 'Only returns findings equal or above this threshold.
                          See https://cloud.google.com/dlp/docs/likelihood for more
                          info Default value: "POSSIBLE" Possible values: ["VERY_UNLIKELY",
                          "UNLIKELY", "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                        type: string
                      ruleSet:
                        description: Set of rules to apply to the findings for this
                          InspectConfig. Exclusion rules, contained in the set are
                          executed in the end, other rules are executed in the order
                          they are specified for each info type.
                        items:
                          properties:
                            infoTypes:
                              description: List of infoTypes this rule set is applied
                                to.
                              items:
                                properties:
                                  name:
                                    description: Name of the information type. Either
                                      a name of your choosing when creating a CustomInfoType,
                                      or one of the names listed at https://cloud.google.com/dlp/docs/infotypes-reference
                                      when specifying a built-in type.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                            rules:
                              description: Set of rules to be applied to infoTypes.
                                The rules are applied in order.
                              items:
                                properties:
                                  exclusionRule:
                                    description: The rule that specifies conditions
                                      when findings of infoTypes specified in InspectionRuleSet
                                      are removed from results.
                                    properties:
                                      dictionary:
                                        description: Dictionary which defines the
                                          rule.
                                        properties:
                                          cloudStoragePath:
                                            description: Newline-delimited file of
                                              words in Cloud Storage. Only a single
                                              file is accepted.
                                            properties:
                                              path:
                                                description: 'A url representing a
                                                  file or path (no wildcards) in Cloud
                                                  Storage. Example: ''gs://[BUCKET_NAME]/dictionary.txt'''
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          wordList:
                                            description: List of words or phrases
                                              to search for.
                                            properties:
                                              words:
                                                description: Words or phrases defining
                                                  the dictionary. The dictionary must
                                                  contain at least one phrase and
                                                  every phrase must contain at least
                                                  2 characters that are letters or
                                                  digits.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - words
                                            type: object
                                        type: object
                                      excludeInfoTypes:
                                        description: Set of infoTypes for which findings
                                          would affect this rule.
                                        properties:
                                          infoTypes:
                                            description: If a finding is matched by
                                              any of the infoType detectors listed
                                              here, the finding will be excluded from
                                              the scan results.
                                            items:
                                              properties:
                                                name:
                                                  description: Name of the information
                                                    type. Either a name of your choosing
                                                    when creating a CustomInfoType,
                                                    or one of the names listed at
                                                    https://cloud.google.com/dlp/docs/infotypes-reference
                                                    when specifying a built-in type.
                                                  type: string
                                              required:
                                              - name
                                              type: object
                                            type: array
                                        required:
                                        - infoTypes
                                        type: object
                                      matchingType:
                                        description: 'How the rule is applied. See
                                          the documentation for more information:
                                          https://cloud.google.com/dlp/docs/reference/rest/v2/InspectConfig#MatchingType
                                          Possible values: ["MATCHING_TYPE_FULL_MATCH",
                                          "MATCHING_TYPE_PARTIAL_MATCH", "MATCHING_TYPE_INVERSE_MATCH"]'
                                        type: string
                                      regex:
                                        description: Regular expression which defines
                                          the rule.
                                        properties:
                                          groupIndexes:
                                            description: The index of the submatch
                                              to extract as findings. When not specified,
                                              the entire match is returned. No more
                                              than 3 may be included.
                                            items:
                                              format: int64
                                              type: integer
                                            type: array
                                          pattern:
                                            description: Pattern defining the regular
                                              expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                              can be found under the google/re2 repository
                                              on GitHub.
                                            type: string
                                        required:
                                        - pattern
                                        type: object
                                    required:
                                    - matchingType
                                    type: object
                                  hotwordRule:
                                    description: Hotword-based detection rule.
                                    properties:
                                      hotwordRegex:
                                        description: Regular expression pattern defining
                                          what qualifies as a hotword.
                                        properties:
                                          groupIndexes:
                                            description: The index of the submatch
                                              to extract as findings. When not specified,
                                              the entire match is returned. No more
                                              than 3 may be included.
                                            items:
                                              format: int64
                                              type: integer
                                            type: array
                                          pattern:
                                            description: Pattern defining the regular
                                              expression. Its syntax (https://github.com/google/re2/wiki/Syntax)
                                              can be found under the google/re2 repository
                                              on GitHub.
                                            type: string
                                        required:
                                        - pattern
                                        type: object
                                      likelihoodAdjustment:
                                        description: Likelihood adjustment to apply
                                          to all matching findings.
                                        properties:
                                          fixedLikelihood:
                                            description: 'Set the likelihood of a
                                              finding to a fixed value. Either this
                                              or relative_likelihood can be set. Possible
                                              values: ["VERY_UNLIKELY", "UNLIKELY",
                                              "POSSIBLE", "LIKELY", "VERY_LIKELY"]'
                                            type: string
                                          relativeLikelihood:
                                            description: Increase or decrease the
                                              likelihood by the specified number of
                                              levels. For example, if a finding would
                                              be POSSIBLE without the detection rule
                                              and relativeLikelihood is 1, then it
                                              is upgraded to LIKELY, while a value
                                              of -1 would downgrade it to UNLIKELY.
                                              Likelihood may never drop below VERY_UNLIKELY
                                              or exceed VERY_LIKELY, so applying an
                                              adjustment of 1 followed by an adjustment
                                              of -1 when base likelihood is VERY_LIKELY
                                              will result in a final likelihood of
                                              LIKELY. Either this or fixed_likelihood
                                              can be set.
                                            format: int64
                                            type: integer
                                        type: object
                                      proximity:
                                        description: Proximity of the finding within
                                          which the entire hotword must reside. The
                                          total length of the window cannot exceed
                                          1000 characters. Note that the finding itself
                                          will be included in the window, so that
                                          hotwords may be used to match substrings
                                          of the finding itself. For example, the
                                          certainty of a phone number regex '(\\d{3})
                                          \\d{3}-\\d{4}' could be adjusted upwards
                                          if the area code is known to be the local
                                          area code of a company office using the
                                          hotword regex '(xxx)', where 'xxx' is the
                                          area code in question.
                                        properties:
                                          windowAfter:
                                            description: Number of characters after
                                              the finding to consider. Either this
                                              or window_before must be specified
                                            format: int64
                                            type: integer
                                          windowBefore:
                                            description: Number of characters before
                                              the finding to consider. Either this
                                              or window_after must be specified
                                            format: int64
                                            type: integer
                                        type: object
                                    required:
                                    - hotwordRegex
                                    - likelihoodAdjustment
                                    - proximity
                                    type: object
                                type: object
                              type: array
                          required:
                          - infoTypes
                          - rules
                          type: object
                        type: array
                    type: object
                  name:
                    description: The resource name of the inspect template. Set by
                      the server.
                    type: string
                  parent:
                    description: "The parent of the inspect template in any of the
                      following formats: \n * 'projects/{{project}}' * 'projects/{{project}}/locations/{{location}}'
                      * 'organizations/{{organization_id}}' * 'organizations/{{organization_id}}/locations/{{location}}'"
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - parent
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
