apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: topics.pubsub.google.kubeform.com
spec:
  group: pubsub.google.kubeform.com
  names:
    kind: Topic
    listKind: TopicList
    plural: topics
    singular: topic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  id:
                    type: string
                  kmsKeyName:
                    description: The resource name of the Cloud KMS CryptoKey to be
                      used to protect access to messages published on this topic.
                      Your project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com')
                      must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use
                      this feature. The expected format is 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                  messageStoragePolicy:
                    description: Policy constraining the set of Google Cloud Platform
                      regions where messages published to the topic may be stored.
                      If not present, then no constraints are in effect.
                    properties:
                      allowedPersistenceRegions:
                        description: A list of IDs of GCP regions where messages that
                          are published to the topic may be persisted in storage.
                          Messages published by publishers running in non-allowed
                          GCP regions (or running outside of GCP altogether) will
                          be routed for storage in one of the allowed regions. An
                          empty list means that no regions are allowed, and is not
                          a valid configuration.
                        items:
                          type: string
                        type: array
                    required:
                    - allowedPersistenceRegions
                    type: object
                  name:
                    description: Name of the topic.
                    type: string
                  project:
                    type: string
                  schemaSettings:
                    description: Settings for validating messages published against
                      a schema.
                    properties:
                      encoding:
                        description: 'The encoding of messages validated against schema.
                          Default value: "ENCODING_UNSPECIFIED" Possible values: ["ENCODING_UNSPECIFIED",
                          "JSON", "BINARY"]'
                        type: string
                      schema:
                        description: The name of the schema that messages published
                          should be validated against. Format is projects/{project}/schemas/{schema}.
                          The value of this field will be _deleted-schema_ if the
                          schema has been deleted.
                        type: string
                    required:
                    - schema
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  id:
                    type: string
                  kmsKeyName:
                    description: The resource name of the Cloud KMS CryptoKey to be
                      used to protect access to messages published on this topic.
                      Your project's PubSub service account ('service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com')
                      must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use
                      this feature. The expected format is 'projects/*/locations/*/keyRings/*/cryptoKeys/*'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Topic.
                    type: object
                  messageStoragePolicy:
                    description: Policy constraining the set of Google Cloud Platform
                      regions where messages published to the topic may be stored.
                      If not present, then no constraints are in effect.
                    properties:
                      allowedPersistenceRegions:
                        description: A list of IDs of GCP regions where messages that
                          are published to the topic may be persisted in storage.
                          Messages published by publishers running in non-allowed
                          GCP regions (or running outside of GCP altogether) will
                          be routed for storage in one of the allowed regions. An
                          empty list means that no regions are allowed, and is not
                          a valid configuration.
                        items:
                          type: string
                        type: array
                    required:
                    - allowedPersistenceRegions
                    type: object
                  name:
                    description: Name of the topic.
                    type: string
                  project:
                    type: string
                  schemaSettings:
                    description: Settings for validating messages published against
                      a schema.
                    properties:
                      encoding:
                        description: 'The encoding of messages validated against schema.
                          Default value: "ENCODING_UNSPECIFIED" Possible values: ["ENCODING_UNSPECIFIED",
                          "JSON", "BINARY"]'
                        type: string
                      schema:
                        description: The name of the schema that messages published
                          should be validated against. Format is projects/{project}/schemas/{schema}.
                          The value of this field will be _deleted-schema_ if the
                          schema has been deleted.
                        type: string
                    required:
                    - schema
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
