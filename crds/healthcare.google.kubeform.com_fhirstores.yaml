apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: fhirstores.healthcare.google.kubeform.com
spec:
  group: healthcare.google.kubeform.com
  names:
    kind: FhirStore
    listKind: FhirStoreList
    plural: fhirstores
    singular: fhirstore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  dataset:
                    description: Identifies the dataset addressed by this request.
                      Must be in the format 'projects/{project}/locations/{location}/datasets/{dataset}'
                    type: string
                  disableReferentialIntegrity:
                    description: "Whether to disable referential integrity in this
                      FHIR store. This field is immutable after FHIR store creation.
                      The default value is false, meaning that the API will enforce
                      referential integrity and fail the requests that will result
                      in inconsistent state in the FHIR store. When this field is
                      set to true, the API will skip referential integrity check.
                      Consequently, operations that rely on references, such as Patient.get$everything,
                      will not return all the results if broken references exist.
                      \n ** Changing this property may recreate the FHIR store (removing
                      all data) **"
                    type: boolean
                  disableResourceVersioning:
                    description: "Whether to disable resource versioning for this
                      FHIR store. This field can not be changed after the creation
                      of FHIR store. If set to false, which is the default behavior,
                      all write operations will cause historical versions to be recorded
                      automatically. The historical versions can be fetched through
                      the history APIs, but cannot be updated. If set to true, no
                      historical versions will be kept. The server will send back
                      errors for attempts to read the historical versions. \n ** Changing
                      this property may recreate the FHIR store (removing all data)
                      **"
                    type: boolean
                  enableHistoryImport:
                    description: "Whether to allow the bulk import API to accept history
                      bundles and directly insert historical resource versions into
                      the FHIR store. Importing resource histories creates resource
                      interactions that appear to have occurred in the past, which
                      clients may not want to allow. If set to false, history bundles
                      within an import will fail with an error. \n ** Changing this
                      property may recreate the FHIR store (removing all data) **
                      \n ** This property can be changed manually in the Google Cloud
                      Healthcare admin console without recreating the FHIR store **"
                    type: boolean
                  enableUpdateCreate:
                    description: Whether this FHIR store has the updateCreate capability.
                      This determines if the client can use an Update operation to
                      create a new resource with a client-specified ID. If false,
                      all IDs are server-assigned through the Create operation and
                      attempts to Update a non-existent resource will return errors.
                      Please treat the audit logs with appropriate levels of care
                      if client-specified resource IDs contain sensitive data such
                      as patient identifiers, those IDs will be part of the FHIR resource
                      path recorded in Cloud audit logs and Cloud Pub/Sub notifications.
                    type: boolean
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "User-supplied key-value pairs used to organize FHIR
                      stores. \n Label keys must be between 1 and 63 characters long,
                      have a UTF-8 encoding of maximum 128 bytes, and must conform
                      to the following PCRE regular expression: [\\\\p{Ll}\\\\p{Lo}][\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,62}
                      \n Label values are optional, must be between 1 and 63 characters
                      long, have a UTF-8 encoding of maximum 128 bytes, and must conform
                      to the following PCRE regular expression: [\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,63}
                      \n No more than 64 labels can be associated with a given store.
                      \n An object containing a list of \"key\": value pairs. Example:
                      { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\"
                      }."
                    type: object
                  name:
                    description: "The resource name for the FhirStore. \n ** Changing
                      this property may recreate the FHIR store (removing all data)
                      **"
                    type: string
                  notificationConfig:
                    description: A nested object resource
                    properties:
                      pubsubTopic:
                        description: The Cloud Pub/Sub topic that notifications of
                          changes are published on. Supplied by the client. PubsubMessage.Data
                          will contain the resource name. PubsubMessage.MessageId
                          is the ID of this message. It is guaranteed to be unique
                          within the topic. PubsubMessage.PublishTime is the time
                          at which the message was published. Notifications are only
                          sent if the topic is non-empty. Topic names must be scoped
                          to a project. service-PROJECT_NUMBER@gcp-sa-healthcare.iam.gserviceaccount.com
                          must have publisher permissions on the given Cloud Pub/Sub
                          topic. Not having adequate permissions will cause the calls
                          that send notifications to fail.
                        type: string
                    required:
                    - pubsubTopic
                    type: object
                  selfLink:
                    description: The fully qualified name of this dataset
                    type: string
                  streamConfigs:
                    description: A list of streaming configs that configure the destinations
                      of streaming export for every resource mutation in this FHIR
                      store. Each store is allowed to have up to 10 streaming configs.
                      After a new config is added, the next resource mutation is streamed
                      to the new location in addition to the existing ones. When a
                      location is removed from the list, the server stops streaming
                      to that location. Before adding a new config, you must add the
                      required bigquery.dataEditor role to your project's Cloud Healthcare
                      Service Agent service account. Some lag (typically on the order
                      of dozens of seconds) is expected before the results show up
                      in the streaming destination.
                    items:
                      properties:
                        bigqueryDestination:
                          description: The destination BigQuery structure that contains
                            both the dataset location and corresponding schema config.
                            The output is organized in one table per resource type.
                            The server reuses the existing tables (if any) that are
                            named after the resource types, e.g. "Patient", "Observation".
                            When there is no existing table for a given resource type,
                            the server attempts to create one. See the [streaming
                            config reference](https://cloud.google.com/healthcare/docs/reference/rest/v1beta1/projects.locations.datasets.fhirStores#streamconfig)
                            for more details.
                          properties:
                            datasetURI:
                              description: BigQuery URI to a dataset, up to 2000 characters
                                long, in the format bq://projectId.bqDatasetId
                              type: string
                            schemaConfig:
                              description: The configuration for the exported BigQuery
                                schema.
                              properties:
                                recursiveStructureDepth:
                                  description: The depth for all recursive structures
                                    in the output analytics schema. For example, concept
                                    in the CodeSystem resource is a recursive structure;
                                    when the depth is 2, the CodeSystem table will
                                    have a column called concept.concept but not concept.concept.concept.
                                    If not specified or set to 0, the server will
                                    use the default value 2. The maximum depth allowed
                                    is 5.
                                  format: int64
                                  type: integer
                                schemaType:
                                  description: 'Specifies the output schema type.
                                    Only ANALYTICS is supported at this time.  * ANALYTICS:
                                    Analytics schema defined by the FHIR community.   See
                                    https://github.com/FHIR/sql-on-fhir/blob/master/sql-on-fhir.md.
                                    Default value: "ANALYTICS" Possible values: ["ANALYTICS"]'
                                  type: string
                              required:
                              - recursiveStructureDepth
                              type: object
                          required:
                          - datasetURI
                          - schemaConfig
                          type: object
                        resourceTypes:
                          description: Supply a FHIR resource type (such as "Patient"
                            or "Observation"). See https://www.hl7.org/fhir/valueset-resource-types.html
                            for a list of all FHIR resource types. The server treats
                            an empty list as an intent to stream all the supported
                            resource types in this FHIR store.
                          items:
                            type: string
                          type: array
                      required:
                      - bigqueryDestination
                      type: object
                    type: array
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  version:
                    description: 'The FHIR specification version. Possible values:
                      ["DSTU2", "STU3", "R4"]'
                    type: string
                required:
                - dataset
                - name
                - version
                type: object
              state:
                properties:
                  dataset:
                    description: Identifies the dataset addressed by this request.
                      Must be in the format 'projects/{project}/locations/{location}/datasets/{dataset}'
                    type: string
                  disableReferentialIntegrity:
                    description: "Whether to disable referential integrity in this
                      FHIR store. This field is immutable after FHIR store creation.
                      The default value is false, meaning that the API will enforce
                      referential integrity and fail the requests that will result
                      in inconsistent state in the FHIR store. When this field is
                      set to true, the API will skip referential integrity check.
                      Consequently, operations that rely on references, such as Patient.get$everything,
                      will not return all the results if broken references exist.
                      \n ** Changing this property may recreate the FHIR store (removing
                      all data) **"
                    type: boolean
                  disableResourceVersioning:
                    description: "Whether to disable resource versioning for this
                      FHIR store. This field can not be changed after the creation
                      of FHIR store. If set to false, which is the default behavior,
                      all write operations will cause historical versions to be recorded
                      automatically. The historical versions can be fetched through
                      the history APIs, but cannot be updated. If set to true, no
                      historical versions will be kept. The server will send back
                      errors for attempts to read the historical versions. \n ** Changing
                      this property may recreate the FHIR store (removing all data)
                      **"
                    type: boolean
                  enableHistoryImport:
                    description: "Whether to allow the bulk import API to accept history
                      bundles and directly insert historical resource versions into
                      the FHIR store. Importing resource histories creates resource
                      interactions that appear to have occurred in the past, which
                      clients may not want to allow. If set to false, history bundles
                      within an import will fail with an error. \n ** Changing this
                      property may recreate the FHIR store (removing all data) **
                      \n ** This property can be changed manually in the Google Cloud
                      Healthcare admin console without recreating the FHIR store **"
                    type: boolean
                  enableUpdateCreate:
                    description: Whether this FHIR store has the updateCreate capability.
                      This determines if the client can use an Update operation to
                      create a new resource with a client-specified ID. If false,
                      all IDs are server-assigned through the Create operation and
                      attempts to Update a non-existent resource will return errors.
                      Please treat the audit logs with appropriate levels of care
                      if client-specified resource IDs contain sensitive data such
                      as patient identifiers, those IDs will be part of the FHIR resource
                      path recorded in Cloud audit logs and Cloud Pub/Sub notifications.
                    type: boolean
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: "User-supplied key-value pairs used to organize FHIR
                      stores. \n Label keys must be between 1 and 63 characters long,
                      have a UTF-8 encoding of maximum 128 bytes, and must conform
                      to the following PCRE regular expression: [\\\\p{Ll}\\\\p{Lo}][\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,62}
                      \n Label values are optional, must be between 1 and 63 characters
                      long, have a UTF-8 encoding of maximum 128 bytes, and must conform
                      to the following PCRE regular expression: [\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,63}
                      \n No more than 64 labels can be associated with a given store.
                      \n An object containing a list of \"key\": value pairs. Example:
                      { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\"
                      }."
                    type: object
                  name:
                    description: "The resource name for the FhirStore. \n ** Changing
                      this property may recreate the FHIR store (removing all data)
                      **"
                    type: string
                  notificationConfig:
                    description: A nested object resource
                    properties:
                      pubsubTopic:
                        description: The Cloud Pub/Sub topic that notifications of
                          changes are published on. Supplied by the client. PubsubMessage.Data
                          will contain the resource name. PubsubMessage.MessageId
                          is the ID of this message. It is guaranteed to be unique
                          within the topic. PubsubMessage.PublishTime is the time
                          at which the message was published. Notifications are only
                          sent if the topic is non-empty. Topic names must be scoped
                          to a project. service-PROJECT_NUMBER@gcp-sa-healthcare.iam.gserviceaccount.com
                          must have publisher permissions on the given Cloud Pub/Sub
                          topic. Not having adequate permissions will cause the calls
                          that send notifications to fail.
                        type: string
                    required:
                    - pubsubTopic
                    type: object
                  selfLink:
                    description: The fully qualified name of this dataset
                    type: string
                  streamConfigs:
                    description: A list of streaming configs that configure the destinations
                      of streaming export for every resource mutation in this FHIR
                      store. Each store is allowed to have up to 10 streaming configs.
                      After a new config is added, the next resource mutation is streamed
                      to the new location in addition to the existing ones. When a
                      location is removed from the list, the server stops streaming
                      to that location. Before adding a new config, you must add the
                      required bigquery.dataEditor role to your project's Cloud Healthcare
                      Service Agent service account. Some lag (typically on the order
                      of dozens of seconds) is expected before the results show up
                      in the streaming destination.
                    items:
                      properties:
                        bigqueryDestination:
                          description: The destination BigQuery structure that contains
                            both the dataset location and corresponding schema config.
                            The output is organized in one table per resource type.
                            The server reuses the existing tables (if any) that are
                            named after the resource types, e.g. "Patient", "Observation".
                            When there is no existing table for a given resource type,
                            the server attempts to create one. See the [streaming
                            config reference](https://cloud.google.com/healthcare/docs/reference/rest/v1beta1/projects.locations.datasets.fhirStores#streamconfig)
                            for more details.
                          properties:
                            datasetURI:
                              description: BigQuery URI to a dataset, up to 2000 characters
                                long, in the format bq://projectId.bqDatasetId
                              type: string
                            schemaConfig:
                              description: The configuration for the exported BigQuery
                                schema.
                              properties:
                                recursiveStructureDepth:
                                  description: The depth for all recursive structures
                                    in the output analytics schema. For example, concept
                                    in the CodeSystem resource is a recursive structure;
                                    when the depth is 2, the CodeSystem table will
                                    have a column called concept.concept but not concept.concept.concept.
                                    If not specified or set to 0, the server will
                                    use the default value 2. The maximum depth allowed
                                    is 5.
                                  format: int64
                                  type: integer
                                schemaType:
                                  description: 'Specifies the output schema type.
                                    Only ANALYTICS is supported at this time.  * ANALYTICS:
                                    Analytics schema defined by the FHIR community.   See
                                    https://github.com/FHIR/sql-on-fhir/blob/master/sql-on-fhir.md.
                                    Default value: "ANALYTICS" Possible values: ["ANALYTICS"]'
                                  type: string
                              required:
                              - recursiveStructureDepth
                              type: object
                          required:
                          - datasetURI
                          - schemaConfig
                          type: object
                        resourceTypes:
                          description: Supply a FHIR resource type (such as "Patient"
                            or "Observation"). See https://www.hl7.org/fhir/valueset-resource-types.html
                            for a list of all FHIR resource types. The server treats
                            an empty list as an intent to stream all the supported
                            resource types in this FHIR store.
                          items:
                            type: string
                          type: array
                      required:
                      - bigqueryDestination
                      type: object
                    type: array
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  version:
                    description: 'The FHIR specification version. Possible values:
                      ["DSTU2", "STU3", "R4"]'
                    type: string
                required:
                - dataset
                - name
                - version
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
