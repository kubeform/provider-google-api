apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: clusters.dataproc.google.kubeform.com
spec:
  group: dataproc.google.kubeform.com
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  clusterConfig:
                    description: Allows you to configure various aspects of the cluster.
                    properties:
                      autoscalingConfig:
                        description: The autoscaling policy config associated with
                          the cluster.
                        properties:
                          policyURI:
                            description: The autoscaling policy used by the cluster.
                            type: string
                        required:
                        - policyURI
                        type: object
                      bucket:
                        description: ' The name of the cloud storage bucket ultimately
                          used to house the staging data for the cluster. If staging_bucket
                          is specified, it will contain this value, otherwise it will
                          be the auto generated name.'
                        type: string
                      encryptionConfig:
                        description: The Customer managed encryption keys settings
                          for the cluster.
                        properties:
                          kmsKeyName:
                            description: The Cloud KMS key name to use for PD disk
                              encryption for all instances in the cluster.
                            type: string
                        required:
                        - kmsKeyName
                        type: object
                      gceClusterConfig:
                        description: Common config settings for resources of Google
                          Compute Engine cluster instances, applicable to all instances
                          in the cluster.
                        properties:
                          internalIPOnly:
                            description: 'By default, clusters are not restricted
                              to internal IP addresses, and will have ephemeral external
                              IP addresses assigned to each instance. If set to true,
                              all instances in the cluster will only have internal
                              IP addresses. Note: Private Google Access (also known
                              as privateIpGoogleAccess) must be enabled on the subnetwork
                              that the cluster will be launched in.'
                            type: boolean
                          metadata:
                            additionalProperties:
                              type: string
                            description: A map of the Compute Engine metadata entries
                              to add to all instances
                            type: object
                          network:
                            description: The name or self_link of the Google Compute
                              Engine network to the cluster will be part of. Conflicts
                              with subnetwork. If neither is specified, this defaults
                              to the "default" network.
                            type: string
                          serviceAccount:
                            description: The service account to be used by the Node
                              VMs. If not specified, the "default" service account
                              is used.
                            type: string
                          serviceAccountScopes:
                            description: The set of Google API scopes to be made available
                              on all of the node VMs under the service_account specified.
                              These can be either FQDNs, or scope aliases.
                            items:
                              type: string
                            type: array
                          shieldedInstanceConfig:
                            description: Shielded Instance Config for clusters using
                              Compute Engine Shielded VMs.
                            properties:
                              enableIntegrityMonitoring:
                                description: Defines whether instances have integrity
                                  monitoring enabled.
                                type: boolean
                              enableSecureBoot:
                                description: Defines whether instances have Secure
                                  Boot enabled.
                                type: boolean
                              enableVtpm:
                                description: Defines whether instances have the vTPM
                                  enabled.
                                type: boolean
                            type: object
                          subnetwork:
                            description: The name or self_link of the Google Compute
                              Engine subnetwork the cluster will be part of. Conflicts
                              with network.
                            type: string
                          tags:
                            description: The list of instance tags applied to instances
                              in the cluster. Tags are used to identify valid sources
                              or targets for network firewalls.
                            items:
                              type: string
                            type: array
                          zone:
                            description: 'The GCP zone where your data is stored and
                              used (i.e. where the master and the worker nodes will
                              be created in). If region is set to ''global'' (default)
                              then zone is mandatory, otherwise GCP is able to make
                              use of Auto Zone Placement to determine this automatically
                              for you. Note: This setting additionally determines
                              and restricts which computing resources are available
                              for use with other configs such as cluster_config.master_config.machine_type
                              and cluster_config.worker_config.machine_type.'
                            type: string
                        type: object
                      initializationAction:
                        description: Commands to execute on each node after config
                          is completed. You can specify multiple versions of these.
                        items:
                          properties:
                            script:
                              description: The script to be executed during initialization
                                of the cluster. The script must be a GCS file with
                                a gs:// prefix.
                              type: string
                            timeoutSec:
                              description: The maximum duration (in seconds) which
                                script is allowed to take to execute its action. GCP
                                will default to a predetermined computed value if
                                not set (currently 300).
                              format: int64
                              type: integer
                          required:
                          - script
                          type: object
                        type: array
                      masterConfig:
                        description: The Google Compute Engine config settings for
                          the master/worker instances in a cluster.
                        properties:
                          accelerators:
                            description: The Compute Engine accelerator (GPU) configuration
                              for these instances. Can be specified multiple times.
                            items:
                              properties:
                                acceleratorCount:
                                  description: The number of the accelerator cards
                                    of this type exposed to this instance. Often restricted
                                    to one of 1, 2, 4, or 8.
                                  format: int64
                                  type: integer
                                acceleratorType:
                                  description: The short name of the accelerator type
                                    to expose to this instance. For example, nvidia-tesla-k80.
                                  type: string
                              required:
                              - acceleratorCount
                              - acceleratorType
                              type: object
                            type: array
                          diskConfig:
                            description: Disk Config
                            properties:
                              bootDiskSizeGb:
                                description: 'Size of the primary disk attached to
                                  each node, specified in GB. The primary disk contains
                                  the boot volume and system libraries, and the smallest
                                  allowed disk size is 10GB. GCP will default to a
                                  predetermined computed value if not set (currently
                                  500GB). Note: If SSDs are not attached, it also
                                  contains the HDFS data blocks and Hadoop working
                                  directories.'
                                format: int64
                                type: integer
                              bootDiskType:
                                description: The disk type of the primary disk attached
                                  to each node. One of "pd-ssd" or "pd-standard".
                                  Defaults to "pd-standard".
                                type: string
                              numLocalSsds:
                                description: The amount of local SSD disks that will
                                  be attached to each master cluster node. Defaults
                                  to 0.
                                format: int64
                                type: integer
                            type: object
                          imageURI:
                            description: The URI for the image to use for this master/worker
                            type: string
                          instanceNames:
                            description: List of master/worker instance names which
                              have been assigned to the cluster.
                            items:
                              type: string
                            type: array
                          machineType:
                            description: The name of a Google Compute Engine machine
                              type to create for the master/worker
                            type: string
                          minCPUPlatform:
                            description: The name of a minimum generation of CPU family
                              for the master/worker. If not specified, GCP will default
                              to a predetermined computed value for each zone.
                            type: string
                          numInstances:
                            description: Specifies the number of master/worker nodes
                              to create. If not specified, GCP will default to a predetermined
                              computed value.
                            format: int64
                            type: integer
                        type: object
                      preemptibleWorkerConfig:
                        description: The Google Compute Engine config settings for
                          the additional (aka preemptible) instances in a cluster.
                        properties:
                          diskConfig:
                            description: Disk Config
                            properties:
                              bootDiskSizeGb:
                                description: 'Size of the primary disk attached to
                                  each preemptible worker node, specified in GB. The
                                  smallest allowed disk size is 10GB. GCP will default
                                  to a predetermined computed value if not set (currently
                                  500GB). Note: If SSDs are not attached, it also
                                  contains the HDFS data blocks and Hadoop working
                                  directories.'
                                format: int64
                                type: integer
                              bootDiskType:
                                description: The disk type of the primary disk attached
                                  to each preemptible worker node. One of "pd-ssd"
                                  or "pd-standard". Defaults to "pd-standard".
                                type: string
                              numLocalSsds:
                                description: The amount of local SSD disks that will
                                  be attached to each preemptible worker node. Defaults
                                  to 0.
                                format: int64
                                type: integer
                            type: object
                          instanceNames:
                            description: List of preemptible instance names which
                              have been assigned to the cluster.
                            items:
                              type: string
                            type: array
                          numInstances:
                            description: Specifies the number of preemptible nodes
                              to create. Defaults to 0.
                            format: int64
                            type: integer
                        type: object
                      securityConfig:
                        description: Security related configuration.
                        properties:
                          kerberosConfig:
                            description: Kerberos related configuration
                            properties:
                              crossRealmTrustAdminServer:
                                description: The admin server (IP or hostname) for
                                  the remote trusted realm in a cross realm trust
                                  relationship.
                                type: string
                              crossRealmTrustKdc:
                                description: The KDC (IP or hostname) for the remote
                                  trusted realm in a cross realm trust relationship.
                                type: string
                              crossRealmTrustRealm:
                                description: The remote realm the Dataproc on-cluster
                                  KDC will trust, should the user enable cross realm
                                  trust.
                                type: string
                              crossRealmTrustSharedPasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the shared password between the
                                  on-cluster Kerberos realm and the remote trusted
                                  realm, in a cross realm trust relationship.
                                type: string
                              enableKerberos:
                                description: Flag to indicate whether to Kerberize
                                  the cluster.
                                type: boolean
                              kdcDbKeyURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the master key of the KDC database.
                                type: string
                              keyPasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the password to the user provided
                                  key. For the self-signed certificate, this password
                                  is generated by Dataproc.
                                type: string
                              keystorePasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the password to the user provided
                                  keystore. For the self-signed certificate, this
                                  password is generated by Dataproc
                                type: string
                              keystoreURI:
                                description: The Cloud Storage URI of the keystore
                                  file used for SSL encryption. If not provided, Dataproc
                                  will provide a self-signed certificate.
                                type: string
                              kmsKeyURI:
                                description: The uri of the KMS key used to encrypt
                                  various sensitive files.
                                type: string
                              realm:
                                description: The name of the on-cluster Kerberos realm.
                                  If not specified, the uppercased domain of hostnames
                                  will be the realm.
                                type: string
                              rootPrincipalPasswordURI:
                                description: The cloud Storage URI of a KMS encrypted
                                  file containing the root principal password.
                                type: string
                              tgtLifetimeHours:
                                description: The lifetime of the ticket granting ticket,
                                  in hours.
                                format: int64
                                type: integer
                              truststorePasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the password to the user provided
                                  truststore. For the self-signed certificate, this
                                  password is generated by Dataproc.
                                type: string
                              truststoreURI:
                                description: The Cloud Storage URI of the truststore
                                  file used for SSL encryption. If not provided, Dataproc
                                  will provide a self-signed certificate.
                                type: string
                            required:
                            - kmsKeyURI
                            - rootPrincipalPasswordURI
                            type: object
                        required:
                        - kerberosConfig
                        type: object
                      softwareConfig:
                        description: The config settings for software inside the cluster.
                        properties:
                          imageVersion:
                            description: The Cloud Dataproc image version to use for
                              the cluster - this controls the sets of software versions
                              installed onto the nodes when you create clusters. If
                              not specified, defaults to the latest version.
                            type: string
                          optionalComponents:
                            description: The set of optional components to activate
                              on the cluster.
                            items:
                              type: string
                            type: array
                          overrideProperties:
                            additionalProperties:
                              type: string
                            description: A list of override and additional properties
                              (key/value pairs) used to modify various aspects of
                              the common configuration files used when creating a
                              cluster.
                            type: object
                          properties:
                            additionalProperties:
                              type: string
                            description: A list of the properties used to set the
                              daemon config files. This will include any values supplied
                              by the user via cluster_config.software_config.override_properties
                            type: object
                        type: object
                      stagingBucket:
                        description: 'The Cloud Storage staging bucket used to stage
                          files, such as Hadoop jars, between client machines and
                          the cluster. Note: If you don''t explicitly specify a staging_bucket
                          then GCP will auto create / assign one for you. However,
                          you are not guaranteed an auto generated bucket which is
                          solely dedicated to your cluster; it may be shared with
                          other clusters in the same region/zone also choosing to
                          use the auto generation option.'
                        type: string
                      tempBucket:
                        description: 'The Cloud Storage temp bucket used to store
                          ephemeral cluster and jobs data, such as Spark and MapReduce
                          history files. Note: If you don''t explicitly specify a
                          temp_bucket then GCP will auto create / assign one for you.'
                        type: string
                      workerConfig:
                        description: The Google Compute Engine config settings for
                          the master/worker instances in a cluster.
                        properties:
                          accelerators:
                            description: The Compute Engine accelerator (GPU) configuration
                              for these instances. Can be specified multiple times.
                            items:
                              properties:
                                acceleratorCount:
                                  description: The number of the accelerator cards
                                    of this type exposed to this instance. Often restricted
                                    to one of 1, 2, 4, or 8.
                                  format: int64
                                  type: integer
                                acceleratorType:
                                  description: The short name of the accelerator type
                                    to expose to this instance. For example, nvidia-tesla-k80.
                                  type: string
                              required:
                              - acceleratorCount
                              - acceleratorType
                              type: object
                            type: array
                          diskConfig:
                            description: Disk Config
                            properties:
                              bootDiskSizeGb:
                                description: 'Size of the primary disk attached to
                                  each node, specified in GB. The primary disk contains
                                  the boot volume and system libraries, and the smallest
                                  allowed disk size is 10GB. GCP will default to a
                                  predetermined computed value if not set (currently
                                  500GB). Note: If SSDs are not attached, it also
                                  contains the HDFS data blocks and Hadoop working
                                  directories.'
                                format: int64
                                type: integer
                              bootDiskType:
                                description: The disk type of the primary disk attached
                                  to each node. One of "pd-ssd" or "pd-standard".
                                  Defaults to "pd-standard".
                                type: string
                              numLocalSsds:
                                description: The amount of local SSD disks that will
                                  be attached to each master cluster node. Defaults
                                  to 0.
                                format: int64
                                type: integer
                            type: object
                          imageURI:
                            description: The URI for the image to use for this master/worker
                            type: string
                          instanceNames:
                            description: List of master/worker instance names which
                              have been assigned to the cluster.
                            items:
                              type: string
                            type: array
                          machineType:
                            description: The name of a Google Compute Engine machine
                              type to create for the master/worker
                            type: string
                          minCPUPlatform:
                            description: The name of a minimum generation of CPU family
                              for the master/worker. If not specified, GCP will default
                              to a predetermined computed value for each zone.
                            type: string
                          numInstances:
                            description: Specifies the number of master/worker nodes
                              to create. If not specified, GCP will default to a predetermined
                              computed value.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  gracefulDecommissionTimeout:
                    description: The timeout duration which allows graceful decomissioning
                      when you change the number of worker nodes directly through
                      a terraform apply
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The list of labels (key/value pairs) to be applied
                      to instances in the cluster. GCP generates some itself including
                      goog-dataproc-cluster-name which is the name of the cluster.
                    type: object
                  name:
                    description: The name of the cluster, unique within the project
                      and zone.
                    type: string
                  project:
                    description: The ID of the project in which the cluster will exist.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: The region in which the cluster and associated nodes
                      will be created in. Defaults to global.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              state:
                properties:
                  clusterConfig:
                    description: Allows you to configure various aspects of the cluster.
                    properties:
                      autoscalingConfig:
                        description: The autoscaling policy config associated with
                          the cluster.
                        properties:
                          policyURI:
                            description: The autoscaling policy used by the cluster.
                            type: string
                        required:
                        - policyURI
                        type: object
                      bucket:
                        description: ' The name of the cloud storage bucket ultimately
                          used to house the staging data for the cluster. If staging_bucket
                          is specified, it will contain this value, otherwise it will
                          be the auto generated name.'
                        type: string
                      encryptionConfig:
                        description: The Customer managed encryption keys settings
                          for the cluster.
                        properties:
                          kmsKeyName:
                            description: The Cloud KMS key name to use for PD disk
                              encryption for all instances in the cluster.
                            type: string
                        required:
                        - kmsKeyName
                        type: object
                      gceClusterConfig:
                        description: Common config settings for resources of Google
                          Compute Engine cluster instances, applicable to all instances
                          in the cluster.
                        properties:
                          internalIPOnly:
                            description: 'By default, clusters are not restricted
                              to internal IP addresses, and will have ephemeral external
                              IP addresses assigned to each instance. If set to true,
                              all instances in the cluster will only have internal
                              IP addresses. Note: Private Google Access (also known
                              as privateIpGoogleAccess) must be enabled on the subnetwork
                              that the cluster will be launched in.'
                            type: boolean
                          metadata:
                            additionalProperties:
                              type: string
                            description: A map of the Compute Engine metadata entries
                              to add to all instances
                            type: object
                          network:
                            description: The name or self_link of the Google Compute
                              Engine network to the cluster will be part of. Conflicts
                              with subnetwork. If neither is specified, this defaults
                              to the "default" network.
                            type: string
                          serviceAccount:
                            description: The service account to be used by the Node
                              VMs. If not specified, the "default" service account
                              is used.
                            type: string
                          serviceAccountScopes:
                            description: The set of Google API scopes to be made available
                              on all of the node VMs under the service_account specified.
                              These can be either FQDNs, or scope aliases.
                            items:
                              type: string
                            type: array
                          shieldedInstanceConfig:
                            description: Shielded Instance Config for clusters using
                              Compute Engine Shielded VMs.
                            properties:
                              enableIntegrityMonitoring:
                                description: Defines whether instances have integrity
                                  monitoring enabled.
                                type: boolean
                              enableSecureBoot:
                                description: Defines whether instances have Secure
                                  Boot enabled.
                                type: boolean
                              enableVtpm:
                                description: Defines whether instances have the vTPM
                                  enabled.
                                type: boolean
                            type: object
                          subnetwork:
                            description: The name or self_link of the Google Compute
                              Engine subnetwork the cluster will be part of. Conflicts
                              with network.
                            type: string
                          tags:
                            description: The list of instance tags applied to instances
                              in the cluster. Tags are used to identify valid sources
                              or targets for network firewalls.
                            items:
                              type: string
                            type: array
                          zone:
                            description: 'The GCP zone where your data is stored and
                              used (i.e. where the master and the worker nodes will
                              be created in). If region is set to ''global'' (default)
                              then zone is mandatory, otherwise GCP is able to make
                              use of Auto Zone Placement to determine this automatically
                              for you. Note: This setting additionally determines
                              and restricts which computing resources are available
                              for use with other configs such as cluster_config.master_config.machine_type
                              and cluster_config.worker_config.machine_type.'
                            type: string
                        type: object
                      initializationAction:
                        description: Commands to execute on each node after config
                          is completed. You can specify multiple versions of these.
                        items:
                          properties:
                            script:
                              description: The script to be executed during initialization
                                of the cluster. The script must be a GCS file with
                                a gs:// prefix.
                              type: string
                            timeoutSec:
                              description: The maximum duration (in seconds) which
                                script is allowed to take to execute its action. GCP
                                will default to a predetermined computed value if
                                not set (currently 300).
                              format: int64
                              type: integer
                          required:
                          - script
                          type: object
                        type: array
                      masterConfig:
                        description: The Google Compute Engine config settings for
                          the master/worker instances in a cluster.
                        properties:
                          accelerators:
                            description: The Compute Engine accelerator (GPU) configuration
                              for these instances. Can be specified multiple times.
                            items:
                              properties:
                                acceleratorCount:
                                  description: The number of the accelerator cards
                                    of this type exposed to this instance. Often restricted
                                    to one of 1, 2, 4, or 8.
                                  format: int64
                                  type: integer
                                acceleratorType:
                                  description: The short name of the accelerator type
                                    to expose to this instance. For example, nvidia-tesla-k80.
                                  type: string
                              required:
                              - acceleratorCount
                              - acceleratorType
                              type: object
                            type: array
                          diskConfig:
                            description: Disk Config
                            properties:
                              bootDiskSizeGb:
                                description: 'Size of the primary disk attached to
                                  each node, specified in GB. The primary disk contains
                                  the boot volume and system libraries, and the smallest
                                  allowed disk size is 10GB. GCP will default to a
                                  predetermined computed value if not set (currently
                                  500GB). Note: If SSDs are not attached, it also
                                  contains the HDFS data blocks and Hadoop working
                                  directories.'
                                format: int64
                                type: integer
                              bootDiskType:
                                description: The disk type of the primary disk attached
                                  to each node. One of "pd-ssd" or "pd-standard".
                                  Defaults to "pd-standard".
                                type: string
                              numLocalSsds:
                                description: The amount of local SSD disks that will
                                  be attached to each master cluster node. Defaults
                                  to 0.
                                format: int64
                                type: integer
                            type: object
                          imageURI:
                            description: The URI for the image to use for this master/worker
                            type: string
                          instanceNames:
                            description: List of master/worker instance names which
                              have been assigned to the cluster.
                            items:
                              type: string
                            type: array
                          machineType:
                            description: The name of a Google Compute Engine machine
                              type to create for the master/worker
                            type: string
                          minCPUPlatform:
                            description: The name of a minimum generation of CPU family
                              for the master/worker. If not specified, GCP will default
                              to a predetermined computed value for each zone.
                            type: string
                          numInstances:
                            description: Specifies the number of master/worker nodes
                              to create. If not specified, GCP will default to a predetermined
                              computed value.
                            format: int64
                            type: integer
                        type: object
                      preemptibleWorkerConfig:
                        description: The Google Compute Engine config settings for
                          the additional (aka preemptible) instances in a cluster.
                        properties:
                          diskConfig:
                            description: Disk Config
                            properties:
                              bootDiskSizeGb:
                                description: 'Size of the primary disk attached to
                                  each preemptible worker node, specified in GB. The
                                  smallest allowed disk size is 10GB. GCP will default
                                  to a predetermined computed value if not set (currently
                                  500GB). Note: If SSDs are not attached, it also
                                  contains the HDFS data blocks and Hadoop working
                                  directories.'
                                format: int64
                                type: integer
                              bootDiskType:
                                description: The disk type of the primary disk attached
                                  to each preemptible worker node. One of "pd-ssd"
                                  or "pd-standard". Defaults to "pd-standard".
                                type: string
                              numLocalSsds:
                                description: The amount of local SSD disks that will
                                  be attached to each preemptible worker node. Defaults
                                  to 0.
                                format: int64
                                type: integer
                            type: object
                          instanceNames:
                            description: List of preemptible instance names which
                              have been assigned to the cluster.
                            items:
                              type: string
                            type: array
                          numInstances:
                            description: Specifies the number of preemptible nodes
                              to create. Defaults to 0.
                            format: int64
                            type: integer
                        type: object
                      securityConfig:
                        description: Security related configuration.
                        properties:
                          kerberosConfig:
                            description: Kerberos related configuration
                            properties:
                              crossRealmTrustAdminServer:
                                description: The admin server (IP or hostname) for
                                  the remote trusted realm in a cross realm trust
                                  relationship.
                                type: string
                              crossRealmTrustKdc:
                                description: The KDC (IP or hostname) for the remote
                                  trusted realm in a cross realm trust relationship.
                                type: string
                              crossRealmTrustRealm:
                                description: The remote realm the Dataproc on-cluster
                                  KDC will trust, should the user enable cross realm
                                  trust.
                                type: string
                              crossRealmTrustSharedPasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the shared password between the
                                  on-cluster Kerberos realm and the remote trusted
                                  realm, in a cross realm trust relationship.
                                type: string
                              enableKerberos:
                                description: Flag to indicate whether to Kerberize
                                  the cluster.
                                type: boolean
                              kdcDbKeyURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the master key of the KDC database.
                                type: string
                              keyPasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the password to the user provided
                                  key. For the self-signed certificate, this password
                                  is generated by Dataproc.
                                type: string
                              keystorePasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the password to the user provided
                                  keystore. For the self-signed certificate, this
                                  password is generated by Dataproc
                                type: string
                              keystoreURI:
                                description: The Cloud Storage URI of the keystore
                                  file used for SSL encryption. If not provided, Dataproc
                                  will provide a self-signed certificate.
                                type: string
                              kmsKeyURI:
                                description: The uri of the KMS key used to encrypt
                                  various sensitive files.
                                type: string
                              realm:
                                description: The name of the on-cluster Kerberos realm.
                                  If not specified, the uppercased domain of hostnames
                                  will be the realm.
                                type: string
                              rootPrincipalPasswordURI:
                                description: The cloud Storage URI of a KMS encrypted
                                  file containing the root principal password.
                                type: string
                              tgtLifetimeHours:
                                description: The lifetime of the ticket granting ticket,
                                  in hours.
                                format: int64
                                type: integer
                              truststorePasswordURI:
                                description: The Cloud Storage URI of a KMS encrypted
                                  file containing the password to the user provided
                                  truststore. For the self-signed certificate, this
                                  password is generated by Dataproc.
                                type: string
                              truststoreURI:
                                description: The Cloud Storage URI of the truststore
                                  file used for SSL encryption. If not provided, Dataproc
                                  will provide a self-signed certificate.
                                type: string
                            required:
                            - kmsKeyURI
                            - rootPrincipalPasswordURI
                            type: object
                        required:
                        - kerberosConfig
                        type: object
                      softwareConfig:
                        description: The config settings for software inside the cluster.
                        properties:
                          imageVersion:
                            description: The Cloud Dataproc image version to use for
                              the cluster - this controls the sets of software versions
                              installed onto the nodes when you create clusters. If
                              not specified, defaults to the latest version.
                            type: string
                          optionalComponents:
                            description: The set of optional components to activate
                              on the cluster.
                            items:
                              type: string
                            type: array
                          overrideProperties:
                            additionalProperties:
                              type: string
                            description: A list of override and additional properties
                              (key/value pairs) used to modify various aspects of
                              the common configuration files used when creating a
                              cluster.
                            type: object
                          properties:
                            additionalProperties:
                              type: string
                            description: A list of the properties used to set the
                              daemon config files. This will include any values supplied
                              by the user via cluster_config.software_config.override_properties
                            type: object
                        type: object
                      stagingBucket:
                        description: 'The Cloud Storage staging bucket used to stage
                          files, such as Hadoop jars, between client machines and
                          the cluster. Note: If you don''t explicitly specify a staging_bucket
                          then GCP will auto create / assign one for you. However,
                          you are not guaranteed an auto generated bucket which is
                          solely dedicated to your cluster; it may be shared with
                          other clusters in the same region/zone also choosing to
                          use the auto generation option.'
                        type: string
                      tempBucket:
                        description: 'The Cloud Storage temp bucket used to store
                          ephemeral cluster and jobs data, such as Spark and MapReduce
                          history files. Note: If you don''t explicitly specify a
                          temp_bucket then GCP will auto create / assign one for you.'
                        type: string
                      workerConfig:
                        description: The Google Compute Engine config settings for
                          the master/worker instances in a cluster.
                        properties:
                          accelerators:
                            description: The Compute Engine accelerator (GPU) configuration
                              for these instances. Can be specified multiple times.
                            items:
                              properties:
                                acceleratorCount:
                                  description: The number of the accelerator cards
                                    of this type exposed to this instance. Often restricted
                                    to one of 1, 2, 4, or 8.
                                  format: int64
                                  type: integer
                                acceleratorType:
                                  description: The short name of the accelerator type
                                    to expose to this instance. For example, nvidia-tesla-k80.
                                  type: string
                              required:
                              - acceleratorCount
                              - acceleratorType
                              type: object
                            type: array
                          diskConfig:
                            description: Disk Config
                            properties:
                              bootDiskSizeGb:
                                description: 'Size of the primary disk attached to
                                  each node, specified in GB. The primary disk contains
                                  the boot volume and system libraries, and the smallest
                                  allowed disk size is 10GB. GCP will default to a
                                  predetermined computed value if not set (currently
                                  500GB). Note: If SSDs are not attached, it also
                                  contains the HDFS data blocks and Hadoop working
                                  directories.'
                                format: int64
                                type: integer
                              bootDiskType:
                                description: The disk type of the primary disk attached
                                  to each node. One of "pd-ssd" or "pd-standard".
                                  Defaults to "pd-standard".
                                type: string
                              numLocalSsds:
                                description: The amount of local SSD disks that will
                                  be attached to each master cluster node. Defaults
                                  to 0.
                                format: int64
                                type: integer
                            type: object
                          imageURI:
                            description: The URI for the image to use for this master/worker
                            type: string
                          instanceNames:
                            description: List of master/worker instance names which
                              have been assigned to the cluster.
                            items:
                              type: string
                            type: array
                          machineType:
                            description: The name of a Google Compute Engine machine
                              type to create for the master/worker
                            type: string
                          minCPUPlatform:
                            description: The name of a minimum generation of CPU family
                              for the master/worker. If not specified, GCP will default
                              to a predetermined computed value for each zone.
                            type: string
                          numInstances:
                            description: Specifies the number of master/worker nodes
                              to create. If not specified, GCP will default to a predetermined
                              computed value.
                            format: int64
                            type: integer
                        type: object
                    type: object
                  gracefulDecommissionTimeout:
                    description: The timeout duration which allows graceful decomissioning
                      when you change the number of worker nodes directly through
                      a terraform apply
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The list of labels (key/value pairs) to be applied
                      to instances in the cluster. GCP generates some itself including
                      goog-dataproc-cluster-name which is the name of the cluster.
                    type: object
                  name:
                    description: The name of the cluster, unique within the project
                      and zone.
                    type: string
                  project:
                    description: The ID of the project in which the cluster will exist.
                      If it is not provided, the provider project is used.
                    type: string
                  region:
                    description: The region in which the cluster and associated nodes
                      will be created in. Defaults to global.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
