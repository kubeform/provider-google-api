apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: nodepools.container.google.kubeform.com
spec:
  group: container.google.kubeform.com
  names:
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  autoscaling:
                    description: Configuration required by cluster autoscaler to adjust
                      the size of the node pool to the current cluster usage.
                    properties:
                      maxNodeCount:
                        description: Maximum number of nodes in the NodePool. Must
                          be >= min_node_count.
                        format: int64
                        type: integer
                      minNodeCount:
                        description: Minimum number of nodes in the NodePool. Must
                          be >=0 and <= max_node_count.
                        format: int64
                        type: integer
                    required:
                    - maxNodeCount
                    - minNodeCount
                    type: object
                  cluster:
                    description: The cluster to create the node pool for. Cluster
                      must be present in location provided for zonal clusters.
                    type: string
                  id:
                    type: string
                  initialNodeCount:
                    description: The initial number of nodes for the pool. In regional
                      or multi-zonal clusters, this is the number of nodes per zone.
                      Changing this will force recreation of the resource.
                    format: int64
                    type: integer
                  instanceGroupUrls:
                    description: The resource URLs of the managed instance groups
                      associated with this node pool.
                    items:
                      type: string
                    type: array
                  location:
                    description: The location (region or zone) of the cluster.
                    type: string
                  management:
                    description: Node management configuration, wherein auto-repair
                      and auto-upgrade is configured.
                    properties:
                      autoRepair:
                        description: Whether the nodes will be automatically repaired.
                        type: boolean
                      autoUpgrade:
                        description: Whether the nodes will be automatically upgraded.
                        type: boolean
                    type: object
                  maxPodsPerNode:
                    description: The maximum number of pods per node in this node
                      pool. Note that this does not work on node pools which are "route-based"
                      - that is, node pools belonging to clusters that do not have
                      IP Aliasing enabled.
                    format: int64
                    type: integer
                  name:
                    description: The name of the node pool. If left blank, Terraform
                      will auto-generate a unique name.
                    type: string
                  namePrefix:
                    description: Creates a unique name for the node pool beginning
                      with the specified prefix. Conflicts with name.
                    type: string
                  nodeConfig:
                    description: The configuration of the nodepool
                    properties:
                      diskSizeGb:
                        description: Size of the disk attached to each node, specified
                          in GB. The smallest allowed disk size is 10GB.
                        format: int64
                        type: integer
                      diskType:
                        description: Type of the disk attached to each node.
                        type: string
                      guestAccelerator:
                        description: List of the type and count of accelerator cards
                          attached to the instance.
                        items:
                          properties:
                            count:
                              description: The number of the accelerator cards exposed
                                to an instance.
                              format: int64
                              type: integer
                            gpuPartitionSize:
                              description: Size of partitions to create on the GPU.
                                Valid values are described in the NVIDIA mig user
                                guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
                              type: string
                            type:
                              description: The accelerator type resource name.
                              type: string
                          required:
                          - count
                          - type
                          type: object
                        type: array
                      imageType:
                        description: The image type to use for this node. Note that
                          for a given image type, the latest version of it will be
                          used.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: The map of Kubernetes labels (key/value pairs)
                          to be applied to each node. These will added in addition
                          to any default label(s) that Kubernetes may apply to the
                          node.
                        type: object
                      localSsdCount:
                        description: The number of local SSD disks to be attached
                          to the node.
                        format: int64
                        type: integer
                      machineType:
                        description: The name of a Google Compute Engine machine type.
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: The metadata key/value pairs assigned to instances
                          in the cluster.
                        type: object
                      minCPUPlatform:
                        description: Minimum CPU platform to be used by this instance.
                          The instance may be scheduled on the specified or newer
                          CPU platform.
                        type: string
                      oauthScopes:
                        description: The set of Google API scopes to be made available
                          on all of the node VMs.
                        items:
                          type: string
                        type: array
                      preemptible:
                        description: Whether the nodes are created as preemptible
                          VM instances.
                        type: boolean
                      serviceAccount:
                        description: The Google Cloud Platform Service Account to
                          be used by the node VMs.
                        type: string
                      shieldedInstanceConfig:
                        description: Shielded Instance options.
                        properties:
                          enableIntegrityMonitoring:
                            description: Defines whether the instance has integrity
                              monitoring enabled.
                            type: boolean
                          enableSecureBoot:
                            description: Defines whether the instance has Secure Boot
                              enabled.
                            type: boolean
                        type: object
                      tags:
                        description: The list of instance tags applied to all nodes.
                        items:
                          type: string
                        type: array
                      taint:
                        description: List of Kubernetes taints to be applied to each
                          node.
                        items:
                          properties:
                            effect:
                              description: Effect for taint.
                              type: string
                            key:
                              description: Key for taint.
                              type: string
                            value:
                              description: Value for taint.
                              type: string
                          required:
                          - effect
                          - key
                          - value
                          type: object
                        type: array
                      workloadMetadataConfig:
                        description: The workload metadata configuration for this
                          node.
                        properties:
                          mode:
                            description: Mode is the configuration for how to expose
                              metadata to workloads running on the node.
                            type: string
                          nodeMetadata:
                            description: NodeMetadata is the configuration for how
                              to expose metadata to the workloads running on the node.
                              Deprecated
                            type: string
                        type: object
                    type: object
                  nodeCount:
                    description: The number of nodes per instance group. This field
                      can be used to update the number of nodes per instance group
                      but should not be used alongside autoscaling.
                    format: int64
                    type: integer
                  nodeLocations:
                    description: The list of zones in which the node pool's nodes
                      should be located. Nodes must be in the region of their regional
                      cluster or in the same region as their cluster's zone for zonal
                      clusters. If unspecified, the cluster-level node_locations will
                      be used.
                    items:
                      type: string
                    type: array
                  operation:
                    type: string
                  project:
                    description: The ID of the project in which to create the node
                      pool. If blank, the provider-configured project will be used.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  upgradeSettings:
                    description: Specify node upgrade settings to change how many
                      nodes GKE attempts to upgrade at once. The number of nodes upgraded
                      simultaneously is the sum of max_surge and max_unavailable.
                      The maximum number of nodes upgraded simultaneously is limited
                      to 20.
                    properties:
                      maxSurge:
                        description: The number of additional nodes that can be added
                          to the node pool during an upgrade. Increasing max_surge
                          raises the number of nodes that can be upgraded simultaneously.
                          Can be set to 0 or greater.
                        format: int64
                        type: integer
                      maxUnavailable:
                        description: The number of nodes that can be simultaneously
                          unavailable during an upgrade. Increasing max_unavailable
                          raises the number of nodes that can be upgraded in parallel.
                          Can be set to 0 or greater.
                        format: int64
                        type: integer
                    required:
                    - maxSurge
                    - maxUnavailable
                    type: object
                  version:
                    description: The Kubernetes version for the nodes in this pool.
                      Note that if this field and auto_upgrade are both specified,
                      they will fight each other for what the node version should
                      be, so setting both is highly discouraged. While a fuzzy version
                      can be specified, it's recommended that you specify explicit
                      versions as Terraform will see spurious diffs when fuzzy versions
                      are used. See the google_container_engine_versions data source's
                      version_prefix field to approximate fuzzy versions in a Terraform-compatible
                      way.
                    type: string
                required:
                - cluster
                type: object
              state:
                properties:
                  autoscaling:
                    description: Configuration required by cluster autoscaler to adjust
                      the size of the node pool to the current cluster usage.
                    properties:
                      maxNodeCount:
                        description: Maximum number of nodes in the NodePool. Must
                          be >= min_node_count.
                        format: int64
                        type: integer
                      minNodeCount:
                        description: Minimum number of nodes in the NodePool. Must
                          be >=0 and <= max_node_count.
                        format: int64
                        type: integer
                    required:
                    - maxNodeCount
                    - minNodeCount
                    type: object
                  cluster:
                    description: The cluster to create the node pool for. Cluster
                      must be present in location provided for zonal clusters.
                    type: string
                  id:
                    type: string
                  initialNodeCount:
                    description: The initial number of nodes for the pool. In regional
                      or multi-zonal clusters, this is the number of nodes per zone.
                      Changing this will force recreation of the resource.
                    format: int64
                    type: integer
                  instanceGroupUrls:
                    description: The resource URLs of the managed instance groups
                      associated with this node pool.
                    items:
                      type: string
                    type: array
                  location:
                    description: The location (region or zone) of the cluster.
                    type: string
                  management:
                    description: Node management configuration, wherein auto-repair
                      and auto-upgrade is configured.
                    properties:
                      autoRepair:
                        description: Whether the nodes will be automatically repaired.
                        type: boolean
                      autoUpgrade:
                        description: Whether the nodes will be automatically upgraded.
                        type: boolean
                    type: object
                  maxPodsPerNode:
                    description: The maximum number of pods per node in this node
                      pool. Note that this does not work on node pools which are "route-based"
                      - that is, node pools belonging to clusters that do not have
                      IP Aliasing enabled.
                    format: int64
                    type: integer
                  name:
                    description: The name of the node pool. If left blank, Terraform
                      will auto-generate a unique name.
                    type: string
                  namePrefix:
                    description: Creates a unique name for the node pool beginning
                      with the specified prefix. Conflicts with name.
                    type: string
                  nodeConfig:
                    description: The configuration of the nodepool
                    properties:
                      diskSizeGb:
                        description: Size of the disk attached to each node, specified
                          in GB. The smallest allowed disk size is 10GB.
                        format: int64
                        type: integer
                      diskType:
                        description: Type of the disk attached to each node.
                        type: string
                      guestAccelerator:
                        description: List of the type and count of accelerator cards
                          attached to the instance.
                        items:
                          properties:
                            count:
                              description: The number of the accelerator cards exposed
                                to an instance.
                              format: int64
                              type: integer
                            gpuPartitionSize:
                              description: Size of partitions to create on the GPU.
                                Valid values are described in the NVIDIA mig user
                                guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
                              type: string
                            type:
                              description: The accelerator type resource name.
                              type: string
                          required:
                          - count
                          - type
                          type: object
                        type: array
                      imageType:
                        description: The image type to use for this node. Note that
                          for a given image type, the latest version of it will be
                          used.
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: The map of Kubernetes labels (key/value pairs)
                          to be applied to each node. These will added in addition
                          to any default label(s) that Kubernetes may apply to the
                          node.
                        type: object
                      localSsdCount:
                        description: The number of local SSD disks to be attached
                          to the node.
                        format: int64
                        type: integer
                      machineType:
                        description: The name of a Google Compute Engine machine type.
                        type: string
                      metadata:
                        additionalProperties:
                          type: string
                        description: The metadata key/value pairs assigned to instances
                          in the cluster.
                        type: object
                      minCPUPlatform:
                        description: Minimum CPU platform to be used by this instance.
                          The instance may be scheduled on the specified or newer
                          CPU platform.
                        type: string
                      oauthScopes:
                        description: The set of Google API scopes to be made available
                          on all of the node VMs.
                        items:
                          type: string
                        type: array
                      preemptible:
                        description: Whether the nodes are created as preemptible
                          VM instances.
                        type: boolean
                      serviceAccount:
                        description: The Google Cloud Platform Service Account to
                          be used by the node VMs.
                        type: string
                      shieldedInstanceConfig:
                        description: Shielded Instance options.
                        properties:
                          enableIntegrityMonitoring:
                            description: Defines whether the instance has integrity
                              monitoring enabled.
                            type: boolean
                          enableSecureBoot:
                            description: Defines whether the instance has Secure Boot
                              enabled.
                            type: boolean
                        type: object
                      tags:
                        description: The list of instance tags applied to all nodes.
                        items:
                          type: string
                        type: array
                      taint:
                        description: List of Kubernetes taints to be applied to each
                          node.
                        items:
                          properties:
                            effect:
                              description: Effect for taint.
                              type: string
                            key:
                              description: Key for taint.
                              type: string
                            value:
                              description: Value for taint.
                              type: string
                          required:
                          - effect
                          - key
                          - value
                          type: object
                        type: array
                      workloadMetadataConfig:
                        description: The workload metadata configuration for this
                          node.
                        properties:
                          mode:
                            description: Mode is the configuration for how to expose
                              metadata to workloads running on the node.
                            type: string
                          nodeMetadata:
                            description: NodeMetadata is the configuration for how
                              to expose metadata to the workloads running on the node.
                              Deprecated
                            type: string
                        type: object
                    type: object
                  nodeCount:
                    description: The number of nodes per instance group. This field
                      can be used to update the number of nodes per instance group
                      but should not be used alongside autoscaling.
                    format: int64
                    type: integer
                  nodeLocations:
                    description: The list of zones in which the node pool's nodes
                      should be located. Nodes must be in the region of their regional
                      cluster or in the same region as their cluster's zone for zonal
                      clusters. If unspecified, the cluster-level node_locations will
                      be used.
                    items:
                      type: string
                    type: array
                  operation:
                    type: string
                  project:
                    description: The ID of the project in which to create the node
                      pool. If blank, the provider-configured project will be used.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  upgradeSettings:
                    description: Specify node upgrade settings to change how many
                      nodes GKE attempts to upgrade at once. The number of nodes upgraded
                      simultaneously is the sum of max_surge and max_unavailable.
                      The maximum number of nodes upgraded simultaneously is limited
                      to 20.
                    properties:
                      maxSurge:
                        description: The number of additional nodes that can be added
                          to the node pool during an upgrade. Increasing max_surge
                          raises the number of nodes that can be upgraded simultaneously.
                          Can be set to 0 or greater.
                        format: int64
                        type: integer
                      maxUnavailable:
                        description: The number of nodes that can be simultaneously
                          unavailable during an upgrade. Increasing max_unavailable
                          raises the number of nodes that can be upgraded in parallel.
                          Can be set to 0 or greater.
                        format: int64
                        type: integer
                    required:
                    - maxSurge
                    - maxUnavailable
                    type: object
                  version:
                    description: The Kubernetes version for the nodes in this pool.
                      Note that if this field and auto_upgrade are both specified,
                      they will fight each other for what the node version should
                      be, so setting both is highly discouraged. While a fuzzy version
                      can be specified, it's recommended that you specify explicit
                      versions as Terraform will see spurious diffs when fuzzy versions
                      are used. See the google_container_engine_versions data source's
                      version_prefix field to approximate fuzzy versions in a Terraform-compatible
                      way.
                    type: string
                required:
                - cluster
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
