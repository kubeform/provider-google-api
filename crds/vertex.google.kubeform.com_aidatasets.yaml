apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: aidatasets.vertex.google.kubeform.com
spec:
  group: vertex.google.kubeform.com
  names:
    kind: AiDataset
    listKind: AiDatasetList
    plural: aidatasets
    singular: aidataset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  createTime:
                    description: The timestamp of when the workflow was created in
                      RFC3339 UTC "Zulu" format, with nanosecond resolution and up
                      to nine fractional digits.
                    type: string
                  displayName:
                    description: The user-defined name of the Dataset. The name can
                      be up to 128 characters long and can be consist of any UTF-8
                      characters.
                    type: string
                  encryptionSpec:
                    description: Customer-managed encryption key spec for a Dataset.
                      If set, this Dataset and all sub-resources of this Dataset will
                      be secured by this key.
                    properties:
                      kmsKeyName:
                        description: 'Required. The Cloud KMS resource identifier
                          of the customer managed encryption key used to protect a
                          resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key.
                          The key needs to be in the same region as where the resource
                          is created.'
                        type: string
                    type: object
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Workflow.
                    type: object
                  metadataSchemaURI:
                    description: Points to a YAML file stored on Google Cloud Storage
                      describing additional information about the Dataset. The schema
                      is defined as an OpenAPI 3.0.2 Schema Object. The schema files
                      that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
                    type: string
                  name:
                    description: The resource name of the Dataset. This value is set
                      by Google.
                    type: string
                  project:
                    type: string
                  region:
                    description: The region of the dataset. eg us-central1
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: The timestamp of when the workflow was last updated
                      in RFC3339 UTC "Zulu" format, with nanosecond resolution and
                      up to nine fractional digits.
                    type: string
                required:
                - displayName
                - metadataSchemaURI
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  createTime:
                    description: The timestamp of when the workflow was created in
                      RFC3339 UTC "Zulu" format, with nanosecond resolution and up
                      to nine fractional digits.
                    type: string
                  displayName:
                    description: The user-defined name of the Dataset. The name can
                      be up to 128 characters long and can be consist of any UTF-8
                      characters.
                    type: string
                  encryptionSpec:
                    description: Customer-managed encryption key spec for a Dataset.
                      If set, this Dataset and all sub-resources of this Dataset will
                      be secured by this key.
                    properties:
                      kmsKeyName:
                        description: 'Required. The Cloud KMS resource identifier
                          of the customer managed encryption key used to protect a
                          resource. Has the form: projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key.
                          The key needs to be in the same region as where the resource
                          is created.'
                        type: string
                    type: object
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Workflow.
                    type: object
                  metadataSchemaURI:
                    description: Points to a YAML file stored on Google Cloud Storage
                      describing additional information about the Dataset. The schema
                      is defined as an OpenAPI 3.0.2 Schema Object. The schema files
                      that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
                    type: string
                  name:
                    description: The resource name of the Dataset. This value is set
                      by Google.
                    type: string
                  project:
                    type: string
                  region:
                    description: The region of the dataset. eg us-central1
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: The timestamp of when the workflow was last updated
                      in RFC3339 UTC "Zulu" format, with nanosecond resolution and
                      up to nine fractional digits.
                    type: string
                required:
                - displayName
                - metadataSchemaURI
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
