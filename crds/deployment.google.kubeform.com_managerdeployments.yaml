apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: managerdeployments.deployment.google.kubeform.com
spec:
  group: deployment.google.kubeform.com
  names:
    kind: ManagerDeployment
    listKind: ManagerDeploymentList
    plural: managerdeployments
    singular: managerdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  createPolicy:
                    description: 'Set the policy to use for creating new resources.
                      Only used on create and update. Valid values are ''CREATE_OR_ACQUIRE''
                      (default) or ''ACQUIRE''. If set to ''ACQUIRE'' and resources
                      do not already exist, the deployment will fail. Note that updating
                      this field does not actually affect the deployment, just how
                      it is updated. Default value: "CREATE_OR_ACQUIRE" Possible values:
                      ["ACQUIRE", "CREATE_OR_ACQUIRE"]'
                    type: string
                  deletePolicy:
                    description: 'Set the policy to use for deleting new resources
                      on update/delete. Valid values are ''DELETE'' (default) or ''ABANDON''.
                      If ''DELETE'', resource is deleted after removal from Deployment
                      Manager. If ''ABANDON'', the resource is only removed from Deployment
                      Manager and is not actually deleted. Note that updating this
                      field does not actually change the deployment, just how it is
                      updated. Default value: "DELETE" Possible values: ["ABANDON",
                      "DELETE"]'
                    type: string
                  deploymentID:
                    description: Unique identifier for deployment. Output only.
                    type: string
                  description:
                    description: Optional user-provided description of deployment.
                    type: string
                  id:
                    type: string
                  labels:
                    description: Key-value pairs to apply to this labels.
                    items:
                      properties:
                        key:
                          description: Key for label.
                          type: string
                        value:
                          description: Value of label.
                          type: string
                      type: object
                    type: array
                  manifest:
                    description: Output only. URL of the manifest representing the
                      last manifest that was successfully deployed.
                    type: string
                  name:
                    description: Unique name for the deployment
                    type: string
                  preview:
                    description: If set to true, a deployment is created with "shell"
                      resources that are not actually instantiated. This allows you
                      to preview a deployment. It can be updated to false to actually
                      deploy with real resources.  ~>**NOTE:** Deployment Manager
                      does not allow update of a deployment in preview (unless updating
                      to preview=false). Thus, Terraform will force-recreate deployments
                      if either preview is updated to true or if other fields are
                      updated while preview is true.
                    type: boolean
                  project:
                    type: string
                  selfLink:
                    description: Output only. Server defined URL for the resource.
                    type: string
                  target:
                    description: Parameters that define your deployment, including
                      the deployment configuration and relevant templates.
                    properties:
                      config:
                        description: The root configuration file to use for this deployment.
                        properties:
                          content:
                            description: The full YAML contents of your configuration
                              file.
                            type: string
                        required:
                        - content
                        type: object
                      imports:
                        description: Specifies import files for this configuration.
                          This can be used to import templates or other files. For
                          example, you might import a text file in order to use the
                          file in a template.
                        items:
                          properties:
                            content:
                              description: The full contents of the template that
                                you want to import.
                              type: string
                            name:
                              description: The name of the template to import, as
                                declared in the YAML configuration.
                              type: string
                          type: object
                        type: array
                    required:
                    - config
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - target
                type: object
              state:
                properties:
                  createPolicy:
                    description: 'Set the policy to use for creating new resources.
                      Only used on create and update. Valid values are ''CREATE_OR_ACQUIRE''
                      (default) or ''ACQUIRE''. If set to ''ACQUIRE'' and resources
                      do not already exist, the deployment will fail. Note that updating
                      this field does not actually affect the deployment, just how
                      it is updated. Default value: "CREATE_OR_ACQUIRE" Possible values:
                      ["ACQUIRE", "CREATE_OR_ACQUIRE"]'
                    type: string
                  deletePolicy:
                    description: 'Set the policy to use for deleting new resources
                      on update/delete. Valid values are ''DELETE'' (default) or ''ABANDON''.
                      If ''DELETE'', resource is deleted after removal from Deployment
                      Manager. If ''ABANDON'', the resource is only removed from Deployment
                      Manager and is not actually deleted. Note that updating this
                      field does not actually change the deployment, just how it is
                      updated. Default value: "DELETE" Possible values: ["ABANDON",
                      "DELETE"]'
                    type: string
                  deploymentID:
                    description: Unique identifier for deployment. Output only.
                    type: string
                  description:
                    description: Optional user-provided description of deployment.
                    type: string
                  id:
                    type: string
                  labels:
                    description: Key-value pairs to apply to this labels.
                    items:
                      properties:
                        key:
                          description: Key for label.
                          type: string
                        value:
                          description: Value of label.
                          type: string
                      type: object
                    type: array
                  manifest:
                    description: Output only. URL of the manifest representing the
                      last manifest that was successfully deployed.
                    type: string
                  name:
                    description: Unique name for the deployment
                    type: string
                  preview:
                    description: If set to true, a deployment is created with "shell"
                      resources that are not actually instantiated. This allows you
                      to preview a deployment. It can be updated to false to actually
                      deploy with real resources.  ~>**NOTE:** Deployment Manager
                      does not allow update of a deployment in preview (unless updating
                      to preview=false). Thus, Terraform will force-recreate deployments
                      if either preview is updated to true or if other fields are
                      updated while preview is true.
                    type: boolean
                  project:
                    type: string
                  selfLink:
                    description: Output only. Server defined URL for the resource.
                    type: string
                  target:
                    description: Parameters that define your deployment, including
                      the deployment configuration and relevant templates.
                    properties:
                      config:
                        description: The root configuration file to use for this deployment.
                        properties:
                          content:
                            description: The full YAML contents of your configuration
                              file.
                            type: string
                        required:
                        - content
                        type: object
                      imports:
                        description: Specifies import files for this configuration.
                          This can be used to import templates or other files. For
                          example, you might import a text file in order to use the
                          file in a template.
                        items:
                          properties:
                            content:
                              description: The full contents of the template that
                                you want to import.
                              type: string
                            name:
                              description: The name of the template to import, as
                                declared in the YAML configuration.
                              type: string
                          type: object
                        type: array
                    required:
                    - config
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - target
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
