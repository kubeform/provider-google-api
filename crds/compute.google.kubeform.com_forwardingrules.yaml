apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: forwardingrules.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: ForwardingRule
    listKind: ForwardingRuleList
    plural: forwardingrules
    singular: forwardingrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  allPorts:
                    description: This field is used along with the `backend_service`
                      field for internal load balancing or with the `target` field
                      for internal TargetInstance. This field cannot be used with
                      `port` or `portRange` fields. When the load balancing scheme
                      is `INTERNAL` and protocol is TCP/UDP, specify this field to
                      allow packets addressed to any ports will be forwarded to the
                      backends configured with this forwarding rule.
                    type: boolean
                  allowGlobalAccess:
                    description: This field is used along with the `backend_service`
                      field for internal load balancing or with the `target` field
                      for internal TargetInstance. If the field is set to `TRUE`,
                      clients can access ILB from all regions. Otherwise only allows
                      access from clients in the same region as the internal load
                      balancer.
                    type: boolean
                  backendService:
                    description: This field is only used for `INTERNAL` load balancing.
                      For internal load balancing, this field identifies the BackendService
                      resource to receive the matched traffic.
                    type: string
                  creationTimestamp:
                    description: '[Output Only] Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                      text format.'
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  ipAddress:
                    description: 'IP address that this forwarding rule serves. When
                      a client sends traffic to this IP address, the forwarding rule
                      directs the traffic to the target that you specify in the forwarding
                      rule. If you don''t specify a reserved IP address, an ephemeral
                      IP address is assigned. Methods for specifying an IP address:
                      * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in `https://www.googleapis.com/compute/v1/projects/project_id/regions/region/addresses/address-name`
                      * Partial URL or by name, as in: * `projects/project_id/regions/region/addresses/address-name`
                      * `regions/region/addresses/address-name` * `global/addresses/address-name`
                      * `address-name` The loadBalancingScheme and the forwarding
                      rule''s target determine the type of IP address that you can
                      use. For detailed information, refer to [IP address specifications](/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).'
                    type: string
                  ipProtocol:
                    description: The IP protocol to which this rule applies. For protocol
                      forwarding, valid options are `TCP`, `UDP`, `ESP`, `AH`, `SCTP`
                      or `ICMP`. For Internal TCP/UDP Load Balancing, the load balancing
                      scheme is `INTERNAL`, and one of `TCP` or `UDP` are valid. For
                      Traffic Director, the load balancing scheme is `INTERNAL_SELF_MANAGED`,
                      and only `TCP`is valid. For Internal HTTP(S) Load Balancing,
                      the load balancing scheme is `INTERNAL_MANAGED`, and only `TCP`
                      is valid. For HTTP(S), SSL Proxy, and TCP Proxy Load Balancing,
                      the load balancing scheme is `EXTERNAL` and only `TCP` is valid.
                      For Network TCP/UDP Load Balancing, the load balancing scheme
                      is `EXTERNAL`, and one of `TCP` or `UDP` is valid.
                    type: string
                  isMirroringCollector:
                    description: Indicates whether or not this load balancer can be
                      used as a collector for packet mirroring. To prevent mirroring
                      loops, instances behind this load balancer will not have their
                      traffic mirrored even if a `PacketMirroring` rule applies to
                      them. This can only be set to true for load balancers that have
                      their `loadBalancingScheme` set to `INTERNAL`.
                    type: boolean
                  labelFingerprint:
                    description: Used internally during label updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this rule.
                    type: object
                  loadBalancingScheme:
                    description: "Specifies the forwarding rule type. \n *   `EXTERNAL`
                      is used for:     *   Classic Cloud VPN gateways     *   Protocol
                      forwarding to VMs from an external IP address     *   The following
                      load balancers: HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP
                      *   `INTERNAL` is used for:     *   Protocol forwarding to VMs
                      from an internal IP address     *   Internal TCP/UDP load balancers
                      *   `INTERNAL_MANAGED` is used for:     *   Internal HTTP(S)
                      load balancers *   `INTERNAL_SELF_MANAGED` is used for:     *
                      \  Traffic Director *   `EXTERNAL_MANAGED` is used for:     *
                      \  Global external HTTP(S) load balancers \n For more information
                      about forwarding rules, refer to [Forwarding rule concepts](/load-balancing/docs/forwarding-rule-concepts).
                      Possible values: INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED,
                      EXTERNAL, EXTERNAL_MANAGED"
                    type: string
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
                      Specifically, the name must be 1-63 characters long and match
                      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
                      the first character must be a lowercase letter, and all following
                      characters must be a dash, lowercase letter, or digit, except
                      the last character, which cannot be a dash.
                    type: string
                  network:
                    description: This field is not used for external load balancing.
                      For `INTERNAL` and `INTERNAL_SELF_MANAGED` load balancing, this
                      field identifies the network that the load balanced IP should
                      belong to for this Forwarding Rule. If this field is not specified,
                      the default network will be used.
                    type: string
                  networkTier:
                    description: 'This signifies the networking tier used for configuring
                      this load balancer and can only take the following values: `PREMIUM`,
                      `STANDARD`. For regional ForwardingRule, the valid values are
                      `PREMIUM` and `STANDARD`. For GlobalForwardingRule, the valid
                      value is `PREMIUM`. If this field is not specified, it is assumed
                      to be `PREMIUM`. If `IPAddress` is specified, this value must
                      be equal to the networkTier of the Address.'
                    type: string
                  portRange:
                    description: "When the load balancing scheme is `EXTERNAL`, `INTERNAL_SELF_MANAGED`
                      and `INTERNAL_MANAGED`, you can specify a `port_range`. Use
                      with a forwarding rule that points to a target proxy or a target
                      pool. Do not use with a forwarding rule that points to a backend
                      service. This field is used along with the `target` field for
                      TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy,
                      TargetVpnGateway, TargetPool, TargetInstance. Applicable only
                      when `IPProtocol` is `TCP`, `UDP`, or `SCTP`, only packets addressed
                      to ports in the specified range will be forwarded to `target`.
                      Forwarding rules with the same `[IPAddress, IPProtocol]` pair
                      must have disjoint port ranges. Some types of forwarding target
                      have constraints on the acceptable ports: \n *   TargetHttpProxy:
                      80, 8080 *   TargetHttpsProxy: 443 *   TargetTcpProxy: 25, 43,
                      110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222
                      *   TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700,
                      993, 995, 1688, 1883, 5222 *   TargetVpnGateway: 500, 4500 \n
                      @pattern: d+(?:-d+)?"
                    type: string
                  ports:
                    description: 'This field is used along with the `backend_service`
                      field for internal load balancing. When the load balancing scheme
                      is `INTERNAL`, a list of ports can be configured, for example,
                      [''80''], [''8000'',''9000'']. Only packets addressed to these
                      ports are forwarded to the backends configured with the forwarding
                      rule. If the forwarding rule''s loadBalancingScheme is INTERNAL,
                      you can specify ports in one of the following ways: * A list
                      of up to five ports, which can be non-contiguous * Keyword `ALL`,
                      which causes the forwarding rule to forward traffic on any port
                      of the forwarding rule''s protocol. @pattern: d+(?:-d+)? For
                      more information, refer to [Port specifications](/load-balancing/docs/forwarding-rule-concepts#port_specifications).'
                    items:
                      type: string
                    maxItems: 5
                    type: array
                  project:
                    description: The project this resource belongs in.
                    type: string
                  region:
                    description: The location of this resource.
                    type: string
                  selfLink:
                    description: '[Output Only] Server-defined URL for the resource.'
                    type: string
                  serviceLabel:
                    description: An optional prefix to the service name for this Forwarding
                      Rule. If specified, the prefix is the first label of the fully
                      qualified service name. The label must be 1-63 characters long,
                      and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
                      Specifically, the label must be 1-63 characters long and match
                      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
                      the first character must be a lowercase letter, and all following
                      characters must be a dash, lowercase letter, or digit, except
                      the last character, which cannot be a dash. This field is only
                      used for internal load balancing.
                    type: string
                  serviceName:
                    description: '[Output Only] The internal fully qualified service
                      name for this Forwarding Rule. This field is only used for internal
                      load balancing.'
                    type: string
                  subnetwork:
                    description: This field is only used for `INTERNAL` load balancing.
                      For internal load balancing, this field identifies the subnetwork
                      that the load balanced IP should belong to for this Forwarding
                      Rule. If the network specified is in auto subnet mode, this
                      field is optional. However, if the network is in custom subnet
                      mode, a subnetwork must be specified.
                    type: string
                  target:
                    description: The URL of the target resource to receive the matched
                      traffic. For regional forwarding rules, this target must live
                      in the same region as the forwarding rule. For global forwarding
                      rules, this target must be a global load balancing resource.
                      The forwarded traffic must be of a type appropriate to the target
                      object. For `INTERNAL_SELF_MANAGED` load balancing, only `targetHttpProxy`
                      is valid, not `targetHttpsProxy`.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              state:
                properties:
                  allPorts:
                    description: This field is used along with the `backend_service`
                      field for internal load balancing or with the `target` field
                      for internal TargetInstance. This field cannot be used with
                      `port` or `portRange` fields. When the load balancing scheme
                      is `INTERNAL` and protocol is TCP/UDP, specify this field to
                      allow packets addressed to any ports will be forwarded to the
                      backends configured with this forwarding rule.
                    type: boolean
                  allowGlobalAccess:
                    description: This field is used along with the `backend_service`
                      field for internal load balancing or with the `target` field
                      for internal TargetInstance. If the field is set to `TRUE`,
                      clients can access ILB from all regions. Otherwise only allows
                      access from clients in the same region as the internal load
                      balancer.
                    type: boolean
                  backendService:
                    description: This field is only used for `INTERNAL` load balancing.
                      For internal load balancing, this field identifies the BackendService
                      resource to receive the matched traffic.
                    type: string
                  creationTimestamp:
                    description: '[Output Only] Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
                      text format.'
                    type: string
                  description:
                    description: An optional description of this resource. Provide
                      this property when you create the resource.
                    type: string
                  id:
                    type: string
                  ipAddress:
                    description: 'IP address that this forwarding rule serves. When
                      a client sends traffic to this IP address, the forwarding rule
                      directs the traffic to the target that you specify in the forwarding
                      rule. If you don''t specify a reserved IP address, an ephemeral
                      IP address is assigned. Methods for specifying an IP address:
                      * IPv4 dotted decimal, as in `100.1.2.3` * Full URL, as in `https://www.googleapis.com/compute/v1/projects/project_id/regions/region/addresses/address-name`
                      * Partial URL or by name, as in: * `projects/project_id/regions/region/addresses/address-name`
                      * `regions/region/addresses/address-name` * `global/addresses/address-name`
                      * `address-name` The loadBalancingScheme and the forwarding
                      rule''s target determine the type of IP address that you can
                      use. For detailed information, refer to [IP address specifications](/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).'
                    type: string
                  ipProtocol:
                    description: The IP protocol to which this rule applies. For protocol
                      forwarding, valid options are `TCP`, `UDP`, `ESP`, `AH`, `SCTP`
                      or `ICMP`. For Internal TCP/UDP Load Balancing, the load balancing
                      scheme is `INTERNAL`, and one of `TCP` or `UDP` are valid. For
                      Traffic Director, the load balancing scheme is `INTERNAL_SELF_MANAGED`,
                      and only `TCP`is valid. For Internal HTTP(S) Load Balancing,
                      the load balancing scheme is `INTERNAL_MANAGED`, and only `TCP`
                      is valid. For HTTP(S), SSL Proxy, and TCP Proxy Load Balancing,
                      the load balancing scheme is `EXTERNAL` and only `TCP` is valid.
                      For Network TCP/UDP Load Balancing, the load balancing scheme
                      is `EXTERNAL`, and one of `TCP` or `UDP` is valid.
                    type: string
                  isMirroringCollector:
                    description: Indicates whether or not this load balancer can be
                      used as a collector for packet mirroring. To prevent mirroring
                      loops, instances behind this load balancer will not have their
                      traffic mirrored even if a `PacketMirroring` rule applies to
                      them. This can only be set to true for load balancers that have
                      their `loadBalancingScheme` set to `INTERNAL`.
                    type: boolean
                  labelFingerprint:
                    description: Used internally during label updates.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels to apply to this rule.
                    type: object
                  loadBalancingScheme:
                    description: "Specifies the forwarding rule type. \n *   `EXTERNAL`
                      is used for:     *   Classic Cloud VPN gateways     *   Protocol
                      forwarding to VMs from an external IP address     *   The following
                      load balancers: HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP
                      *   `INTERNAL` is used for:     *   Protocol forwarding to VMs
                      from an internal IP address     *   Internal TCP/UDP load balancers
                      *   `INTERNAL_MANAGED` is used for:     *   Internal HTTP(S)
                      load balancers *   `INTERNAL_SELF_MANAGED` is used for:     *
                      \  Traffic Director *   `EXTERNAL_MANAGED` is used for:     *
                      \  Global external HTTP(S) load balancers \n For more information
                      about forwarding rules, refer to [Forwarding rule concepts](/load-balancing/docs/forwarding-rule-concepts).
                      Possible values: INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED,
                      EXTERNAL, EXTERNAL_MANAGED"
                    type: string
                  name:
                    description: Name of the resource; provided by the client when
                      the resource is created. The name must be 1-63 characters long,
                      and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
                      Specifically, the name must be 1-63 characters long and match
                      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
                      the first character must be a lowercase letter, and all following
                      characters must be a dash, lowercase letter, or digit, except
                      the last character, which cannot be a dash.
                    type: string
                  network:
                    description: This field is not used for external load balancing.
                      For `INTERNAL` and `INTERNAL_SELF_MANAGED` load balancing, this
                      field identifies the network that the load balanced IP should
                      belong to for this Forwarding Rule. If this field is not specified,
                      the default network will be used.
                    type: string
                  networkTier:
                    description: 'This signifies the networking tier used for configuring
                      this load balancer and can only take the following values: `PREMIUM`,
                      `STANDARD`. For regional ForwardingRule, the valid values are
                      `PREMIUM` and `STANDARD`. For GlobalForwardingRule, the valid
                      value is `PREMIUM`. If this field is not specified, it is assumed
                      to be `PREMIUM`. If `IPAddress` is specified, this value must
                      be equal to the networkTier of the Address.'
                    type: string
                  portRange:
                    description: "When the load balancing scheme is `EXTERNAL`, `INTERNAL_SELF_MANAGED`
                      and `INTERNAL_MANAGED`, you can specify a `port_range`. Use
                      with a forwarding rule that points to a target proxy or a target
                      pool. Do not use with a forwarding rule that points to a backend
                      service. This field is used along with the `target` field for
                      TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy,
                      TargetVpnGateway, TargetPool, TargetInstance. Applicable only
                      when `IPProtocol` is `TCP`, `UDP`, or `SCTP`, only packets addressed
                      to ports in the specified range will be forwarded to `target`.
                      Forwarding rules with the same `[IPAddress, IPProtocol]` pair
                      must have disjoint port ranges. Some types of forwarding target
                      have constraints on the acceptable ports: \n *   TargetHttpProxy:
                      80, 8080 *   TargetHttpsProxy: 443 *   TargetTcpProxy: 25, 43,
                      110, 143, 195, 443, 465, 587, 700, 993, 995, 1688, 1883, 5222
                      *   TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700,
                      993, 995, 1688, 1883, 5222 *   TargetVpnGateway: 500, 4500 \n
                      @pattern: d+(?:-d+)?"
                    type: string
                  ports:
                    description: 'This field is used along with the `backend_service`
                      field for internal load balancing. When the load balancing scheme
                      is `INTERNAL`, a list of ports can be configured, for example,
                      [''80''], [''8000'',''9000'']. Only packets addressed to these
                      ports are forwarded to the backends configured with the forwarding
                      rule. If the forwarding rule''s loadBalancingScheme is INTERNAL,
                      you can specify ports in one of the following ways: * A list
                      of up to five ports, which can be non-contiguous * Keyword `ALL`,
                      which causes the forwarding rule to forward traffic on any port
                      of the forwarding rule''s protocol. @pattern: d+(?:-d+)? For
                      more information, refer to [Port specifications](/load-balancing/docs/forwarding-rule-concepts#port_specifications).'
                    items:
                      type: string
                    maxItems: 5
                    type: array
                  project:
                    description: The project this resource belongs in.
                    type: string
                  region:
                    description: The location of this resource.
                    type: string
                  selfLink:
                    description: '[Output Only] Server-defined URL for the resource.'
                    type: string
                  serviceLabel:
                    description: An optional prefix to the service name for this Forwarding
                      Rule. If specified, the prefix is the first label of the fully
                      qualified service name. The label must be 1-63 characters long,
                      and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).
                      Specifically, the label must be 1-63 characters long and match
                      the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
                      the first character must be a lowercase letter, and all following
                      characters must be a dash, lowercase letter, or digit, except
                      the last character, which cannot be a dash. This field is only
                      used for internal load balancing.
                    type: string
                  serviceName:
                    description: '[Output Only] The internal fully qualified service
                      name for this Forwarding Rule. This field is only used for internal
                      load balancing.'
                    type: string
                  subnetwork:
                    description: This field is only used for `INTERNAL` load balancing.
                      For internal load balancing, this field identifies the subnetwork
                      that the load balanced IP should belong to for this Forwarding
                      Rule. If the network specified is in auto subnet mode, this
                      field is optional. However, if the network is in custom subnet
                      mode, a subnetwork must be specified.
                    type: string
                  target:
                    description: The URL of the target resource to receive the matched
                      traffic. For regional forwarding rules, this target must live
                      in the same region as the forwarding rule. For global forwarding
                      rules, this target must be a global load balancing resource.
                      The forwarded traffic must be of a type appropriate to the target
                      object. For `INTERNAL_SELF_MANAGED` load balancing, only `targetHttpProxy`
                      is valid, not `targetHttpsProxy`.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
