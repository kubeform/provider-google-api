apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: schedulerjobs.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: SchedulerJob
    listKind: SchedulerJobList
    plural: schedulerjobs
    singular: schedulerjob
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  appEngineHTTPTarget:
                    description: App Engine HTTP target. If the job providers a App
                      Engine HTTP target the cron will send a request to the service
                      instance
                    properties:
                      appEngineRouting:
                        description: App Engine Routing setting for the job.
                        properties:
                          instance:
                            description: App instance. By default, the job is sent
                              to an instance which is available when the job is attempted.
                            type: string
                          service:
                            description: App service. By default, the job is sent
                              to the service which is the default service when the
                              job is attempted.
                            type: string
                          version:
                            description: App version. By default, the job is sent
                              to the version which is the default version when the
                              job is attempted.
                            type: string
                        type: object
                      body:
                        description: "HTTP request body. A request body is allowed
                          only if the HTTP method is POST or PUT. It will result in
                          invalid argument error to set a body on a job with an incompatible
                          HttpMethod. \n A base64-encoded string."
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: HTTP request headers. This map contains the header
                          field names and values. Headers can be set when the job
                          is created.
                        type: object
                      httpMethod:
                        description: Which HTTP method to use for the request.
                        type: string
                      relativeURI:
                        description: The relative URI. The relative URL must begin
                          with "/" and must be a valid HTTP relative URL. It can contain
                          a path, query string arguments, and \\# fragments. If the
                          relative URL is empty, then the root path "/" will be used.
                          No spaces are allowed, and the maximum length allowed is
                          2083 characters
                        type: string
                    required:
                    - relativeURI
                    type: object
                  attemptDeadline:
                    description: 'The deadline for job attempts. If the request handler
                      does not respond by this deadline then the request is cancelled
                      and the attempt is marked as a DEADLINE_EXCEEDED failure. The
                      failed attempt can be viewed in execution logs. Cloud Scheduler
                      will retry the job according to the RetryConfig. The allowed
                      duration for this deadline is: * For HTTP targets, between 15
                      seconds and 30 minutes. * For App Engine HTTP targets, between
                      15 seconds and 24 hours. * **Note**: For PubSub targets, this
                      field is ignored - setting it will introduce an unresolvable
                      diff. A duration in seconds with up to nine fractional digits,
                      terminated by ''s''. Example: "3.5s"'
                    type: string
                  description:
                    description: A human-readable description for the job. This string
                      must not contain more than 500 characters.
                    type: string
                  httpTarget:
                    description: HTTP target. If the job providers a http_target the
                      cron will send a request to the targeted url
                    properties:
                      body:
                        description: "HTTP request body. A request body is allowed
                          only if the HTTP method is POST, PUT, or PATCH. It is an
                          error to set body on a job with an incompatible HttpMethod.
                          \n A base64-encoded string."
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: This map contains the header field names and
                          values. Repeated headers are not supported, but a header
                          value can contain commas.
                        type: object
                      httpMethod:
                        description: Which HTTP method to use for the request.
                        type: string
                      oauthToken:
                        description: Contains information needed for generating an
                          OAuth token. This type of authorization should be used when
                          sending requests to a GCP endpoint.
                        properties:
                          scope:
                            description: OAuth scope to be used for generating OAuth
                              access token. If not specified, "https://www.googleapis.com/auth/cloud-platform"
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              OAuth token. The service account must be within the
                              same project as the job.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      oidcToken:
                        description: Contains information needed for generating an
                          OpenID Connect token. This type of authorization should
                          be used when sending requests to third party endpoints or
                          Cloud Run.
                        properties:
                          audience:
                            description: Audience to be used when generating OIDC
                              token. If not specified, the URI specified in target
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              OAuth token. The service account must be within the
                              same project as the job.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      uri:
                        description: The full URI path that the request will be sent
                          to.
                        type: string
                    required:
                    - uri
                    type: object
                  id:
                    type: string
                  name:
                    description: The name of the job.
                    type: string
                  project:
                    type: string
                  pubsubTarget:
                    description: Pub/Sub target If the job providers a Pub/Sub target
                      the cron will publish a message to the provided topic
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes for PubsubMessage. Pubsub message
                          must contain either non-empty data, or at least one attribute.
                        type: object
                      data:
                        description: "The message payload for PubsubMessage. Pubsub
                          message must contain either non-empty data, or at least
                          one attribute. \n  A base64-encoded string."
                        type: string
                      topicName:
                        description: The full resource name for the Cloud Pub/Sub
                          topic to which messages will be published when a job is
                          delivered. ~>**NOTE:** The topic name must be in the same
                          format as required by PubSub's PublishRequest.name, e.g.
                          'projects/my-project/topics/my-topic'.
                        type: string
                    required:
                    - topicName
                    type: object
                  region:
                    description: Region where the scheduler job resides. If it is
                      not provided, Terraform will use the provider default.
                    type: string
                  retryConfig:
                    description: By default, if a job does not complete successfully,
                      meaning that an acknowledgement is not received from the handler,
                      then it will be retried with exponential backoff according to
                      the settings
                    properties:
                      maxBackoffDuration:
                        description: The maximum amount of time to wait before retrying
                          a job after it fails. A duration in seconds with up to nine
                          fractional digits, terminated by 's'.
                        type: string
                      maxDoublings:
                        description: The time between retries will double maxDoublings
                          times. A job's retry interval starts at minBackoffDuration,
                          then doubles maxDoublings times, then increases linearly,
                          and finally retries retries at intervals of maxBackoffDuration
                          up to retryCount times.
                        format: int64
                        type: integer
                      maxRetryDuration:
                        description: The time limit for retrying a failed job, measured
                          from time when an execution was first attempted. If specified
                          with retryCount, the job will be retried until both limits
                          are reached. A duration in seconds with up to nine fractional
                          digits, terminated by 's'.
                        type: string
                      minBackoffDuration:
                        description: The minimum amount of time to wait before retrying
                          a job after it fails. A duration in seconds with up to nine
                          fractional digits, terminated by 's'.
                        type: string
                      retryCount:
                        description: The number of attempts that the system will make
                          to run a job using the exponential backoff procedure described
                          by maxDoublings. Values greater than 5 and negative values
                          are not allowed.
                        format: int64
                        type: integer
                    type: object
                  schedule:
                    description: Describes the schedule on which the job will be executed.
                    type: string
                  timeZone:
                    description: Specifies the time zone to be used in interpreting
                      schedule. The value of this field must be a time zone name from
                      the tz database.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              state:
                properties:
                  appEngineHTTPTarget:
                    description: App Engine HTTP target. If the job providers a App
                      Engine HTTP target the cron will send a request to the service
                      instance
                    properties:
                      appEngineRouting:
                        description: App Engine Routing setting for the job.
                        properties:
                          instance:
                            description: App instance. By default, the job is sent
                              to an instance which is available when the job is attempted.
                            type: string
                          service:
                            description: App service. By default, the job is sent
                              to the service which is the default service when the
                              job is attempted.
                            type: string
                          version:
                            description: App version. By default, the job is sent
                              to the version which is the default version when the
                              job is attempted.
                            type: string
                        type: object
                      body:
                        description: "HTTP request body. A request body is allowed
                          only if the HTTP method is POST or PUT. It will result in
                          invalid argument error to set a body on a job with an incompatible
                          HttpMethod. \n A base64-encoded string."
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: HTTP request headers. This map contains the header
                          field names and values. Headers can be set when the job
                          is created.
                        type: object
                      httpMethod:
                        description: Which HTTP method to use for the request.
                        type: string
                      relativeURI:
                        description: The relative URI. The relative URL must begin
                          with "/" and must be a valid HTTP relative URL. It can contain
                          a path, query string arguments, and \\# fragments. If the
                          relative URL is empty, then the root path "/" will be used.
                          No spaces are allowed, and the maximum length allowed is
                          2083 characters
                        type: string
                    required:
                    - relativeURI
                    type: object
                  attemptDeadline:
                    description: 'The deadline for job attempts. If the request handler
                      does not respond by this deadline then the request is cancelled
                      and the attempt is marked as a DEADLINE_EXCEEDED failure. The
                      failed attempt can be viewed in execution logs. Cloud Scheduler
                      will retry the job according to the RetryConfig. The allowed
                      duration for this deadline is: * For HTTP targets, between 15
                      seconds and 30 minutes. * For App Engine HTTP targets, between
                      15 seconds and 24 hours. * **Note**: For PubSub targets, this
                      field is ignored - setting it will introduce an unresolvable
                      diff. A duration in seconds with up to nine fractional digits,
                      terminated by ''s''. Example: "3.5s"'
                    type: string
                  description:
                    description: A human-readable description for the job. This string
                      must not contain more than 500 characters.
                    type: string
                  httpTarget:
                    description: HTTP target. If the job providers a http_target the
                      cron will send a request to the targeted url
                    properties:
                      body:
                        description: "HTTP request body. A request body is allowed
                          only if the HTTP method is POST, PUT, or PATCH. It is an
                          error to set body on a job with an incompatible HttpMethod.
                          \n A base64-encoded string."
                        type: string
                      headers:
                        additionalProperties:
                          type: string
                        description: This map contains the header field names and
                          values. Repeated headers are not supported, but a header
                          value can contain commas.
                        type: object
                      httpMethod:
                        description: Which HTTP method to use for the request.
                        type: string
                      oauthToken:
                        description: Contains information needed for generating an
                          OAuth token. This type of authorization should be used when
                          sending requests to a GCP endpoint.
                        properties:
                          scope:
                            description: OAuth scope to be used for generating OAuth
                              access token. If not specified, "https://www.googleapis.com/auth/cloud-platform"
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              OAuth token. The service account must be within the
                              same project as the job.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      oidcToken:
                        description: Contains information needed for generating an
                          OpenID Connect token. This type of authorization should
                          be used when sending requests to third party endpoints or
                          Cloud Run.
                        properties:
                          audience:
                            description: Audience to be used when generating OIDC
                              token. If not specified, the URI specified in target
                              will be used.
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              OAuth token. The service account must be within the
                              same project as the job.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      uri:
                        description: The full URI path that the request will be sent
                          to.
                        type: string
                    required:
                    - uri
                    type: object
                  id:
                    type: string
                  name:
                    description: The name of the job.
                    type: string
                  project:
                    type: string
                  pubsubTarget:
                    description: Pub/Sub target If the job providers a Pub/Sub target
                      the cron will publish a message to the provided topic
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: Attributes for PubsubMessage. Pubsub message
                          must contain either non-empty data, or at least one attribute.
                        type: object
                      data:
                        description: "The message payload for PubsubMessage. Pubsub
                          message must contain either non-empty data, or at least
                          one attribute. \n  A base64-encoded string."
                        type: string
                      topicName:
                        description: The full resource name for the Cloud Pub/Sub
                          topic to which messages will be published when a job is
                          delivered. ~>**NOTE:** The topic name must be in the same
                          format as required by PubSub's PublishRequest.name, e.g.
                          'projects/my-project/topics/my-topic'.
                        type: string
                    required:
                    - topicName
                    type: object
                  region:
                    description: Region where the scheduler job resides. If it is
                      not provided, Terraform will use the provider default.
                    type: string
                  retryConfig:
                    description: By default, if a job does not complete successfully,
                      meaning that an acknowledgement is not received from the handler,
                      then it will be retried with exponential backoff according to
                      the settings
                    properties:
                      maxBackoffDuration:
                        description: The maximum amount of time to wait before retrying
                          a job after it fails. A duration in seconds with up to nine
                          fractional digits, terminated by 's'.
                        type: string
                      maxDoublings:
                        description: The time between retries will double maxDoublings
                          times. A job's retry interval starts at minBackoffDuration,
                          then doubles maxDoublings times, then increases linearly,
                          and finally retries retries at intervals of maxBackoffDuration
                          up to retryCount times.
                        format: int64
                        type: integer
                      maxRetryDuration:
                        description: The time limit for retrying a failed job, measured
                          from time when an execution was first attempted. If specified
                          with retryCount, the job will be retried until both limits
                          are reached. A duration in seconds with up to nine fractional
                          digits, terminated by 's'.
                        type: string
                      minBackoffDuration:
                        description: The minimum amount of time to wait before retrying
                          a job after it fails. A duration in seconds with up to nine
                          fractional digits, terminated by 's'.
                        type: string
                      retryCount:
                        description: The number of attempts that the system will make
                          to run a job using the exponential backoff procedure described
                          by maxDoublings. Values greater than 5 and negative values
                          are not allowed.
                        format: int64
                        type: integer
                    type: object
                  schedule:
                    description: Describes the schedule on which the job will be executed.
                    type: string
                  timeZone:
                    description: Specifies the time zone to be used in interpreting
                      schedule. The value of this field must be a time zone name from
                      the tz database.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
