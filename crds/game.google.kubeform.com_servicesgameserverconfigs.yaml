apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: servicesgameserverconfigs.game.google.kubeform.com
spec:
  group: game.google.kubeform.com
  names:
    kind: ServicesGameServerConfig
    listKind: ServicesGameServerConfigList
    plural: servicesgameserverconfigs
    singular: servicesgameserverconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  configID:
                    description: A unique id for the deployment config.
                    type: string
                  deploymentID:
                    description: A unique id for the deployment.
                    type: string
                  description:
                    description: The description of the game server config.
                    type: string
                  fleetConfigs:
                    description: The fleet config contains list of fleet specs. In
                      the Single Cloud, there will be only one.
                    items:
                      properties:
                        fleetSpec:
                          description: "The fleet spec, which is sent to Agones to
                            configure fleet. The spec can be passed as inline json
                            but it is recommended to use a file reference instead.
                            File references can contain the json or yaml format of
                            the fleet spec. Eg: \n * fleet_spec = jsonencode(yamldecode(file(\"fleet_configs.yaml\")))
                            * fleet_spec = file(\"fleet_configs.json\") \n The format
                            of the spec can be found : 'https://agones.dev/site/docs/reference/fleet/'."
                          type: string
                        name:
                          description: The name of the FleetConfig.
                          type: string
                      required:
                      - fleetSpec
                      type: object
                    type: array
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The labels associated with this game server config.
                      Each label is a key-value pair.
                    type: object
                  location:
                    description: Location of the Deployment.
                    type: string
                  name:
                    description: "The resource name of the game server config, in
                      the form: \n 'projects/{project_id}/locations/{location}/gameServerDeployments/{deployment_id}/configs/{config_id}'."
                    type: string
                  project:
                    type: string
                  scalingConfigs:
                    description: Optional. This contains the autoscaling settings.
                    items:
                      properties:
                        fleetAutoscalerSpec:
                          description: 'Fleet autoscaler spec, which is sent to Agones.
                            Example spec can be found : https://agones.dev/site/docs/reference/fleetautoscaler/'
                          type: string
                        name:
                          description: The name of the ScalingConfig
                          type: string
                        schedules:
                          description: The schedules to which this scaling config
                            applies.
                          items:
                            properties:
                              cronJobDuration:
                                description: "The duration for the cron job event.
                                  The duration of the event is effective after the
                                  cron job's start time. \n A duration in seconds
                                  with up to nine fractional digits, terminated by
                                  's'. Example: \"3.5s\"."
                                type: string
                              cronSpec:
                                description: The cron definition of the scheduled
                                  event. See https://en.wikipedia.org/wiki/Cron. Cron
                                  spec specifies the local time as defined by the
                                  realm.
                                type: string
                              endTime:
                                description: "The end time of the event. \n A timestamp
                                  in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds.
                                  Example: \"2014-10-02T15:01:23.045123456Z\"."
                                type: string
                              startTime:
                                description: "The start time of the event. \n A timestamp
                                  in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds.
                                  Example: \"2014-10-02T15:01:23.045123456Z\"."
                                type: string
                            type: object
                          type: array
                        selectors:
                          description: Labels used to identify the clusters to which
                            this scaling config applies. A cluster is subject to this
                            scaling config if its labels match any of the selector
                            entries.
                          items:
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                description: Set of labels to group by.
                                type: object
                            type: object
                          type: array
                      required:
                      - fleetAutoscalerSpec
                      - name
                      type: object
                    type: array
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - configID
                - deploymentID
                - fleetConfigs
                type: object
              state:
                properties:
                  configID:
                    description: A unique id for the deployment config.
                    type: string
                  deploymentID:
                    description: A unique id for the deployment.
                    type: string
                  description:
                    description: The description of the game server config.
                    type: string
                  fleetConfigs:
                    description: The fleet config contains list of fleet specs. In
                      the Single Cloud, there will be only one.
                    items:
                      properties:
                        fleetSpec:
                          description: "The fleet spec, which is sent to Agones to
                            configure fleet. The spec can be passed as inline json
                            but it is recommended to use a file reference instead.
                            File references can contain the json or yaml format of
                            the fleet spec. Eg: \n * fleet_spec = jsonencode(yamldecode(file(\"fleet_configs.yaml\")))
                            * fleet_spec = file(\"fleet_configs.json\") \n The format
                            of the spec can be found : 'https://agones.dev/site/docs/reference/fleet/'."
                          type: string
                        name:
                          description: The name of the FleetConfig.
                          type: string
                      required:
                      - fleetSpec
                      type: object
                    type: array
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: The labels associated with this game server config.
                      Each label is a key-value pair.
                    type: object
                  location:
                    description: Location of the Deployment.
                    type: string
                  name:
                    description: "The resource name of the game server config, in
                      the form: \n 'projects/{project_id}/locations/{location}/gameServerDeployments/{deployment_id}/configs/{config_id}'."
                    type: string
                  project:
                    type: string
                  scalingConfigs:
                    description: Optional. This contains the autoscaling settings.
                    items:
                      properties:
                        fleetAutoscalerSpec:
                          description: 'Fleet autoscaler spec, which is sent to Agones.
                            Example spec can be found : https://agones.dev/site/docs/reference/fleetautoscaler/'
                          type: string
                        name:
                          description: The name of the ScalingConfig
                          type: string
                        schedules:
                          description: The schedules to which this scaling config
                            applies.
                          items:
                            properties:
                              cronJobDuration:
                                description: "The duration for the cron job event.
                                  The duration of the event is effective after the
                                  cron job's start time. \n A duration in seconds
                                  with up to nine fractional digits, terminated by
                                  's'. Example: \"3.5s\"."
                                type: string
                              cronSpec:
                                description: The cron definition of the scheduled
                                  event. See https://en.wikipedia.org/wiki/Cron. Cron
                                  spec specifies the local time as defined by the
                                  realm.
                                type: string
                              endTime:
                                description: "The end time of the event. \n A timestamp
                                  in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds.
                                  Example: \"2014-10-02T15:01:23.045123456Z\"."
                                type: string
                              startTime:
                                description: "The start time of the event. \n A timestamp
                                  in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds.
                                  Example: \"2014-10-02T15:01:23.045123456Z\"."
                                type: string
                            type: object
                          type: array
                        selectors:
                          description: Labels used to identify the clusters to which
                            this scaling config applies. A cluster is subject to this
                            scaling config if its labels match any of the selector
                            entries.
                          items:
                            properties:
                              labels:
                                additionalProperties:
                                  type: string
                                description: Set of labels to group by.
                                type: object
                            type: object
                          type: array
                      required:
                      - fleetAutoscalerSpec
                      - name
                      type: object
                    type: array
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - configID
                - deploymentID
                - fleetConfigs
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
