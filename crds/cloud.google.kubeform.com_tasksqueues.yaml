apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: tasksqueues.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: TasksQueue
    listKind: TasksQueueList
    plural: tasksqueues
    singular: tasksqueue
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  appEngineRoutingOverride:
                    description: Overrides for task-level appEngineRouting. These
                      settings apply only to App Engine tasks in this queue
                    properties:
                      host:
                        description: The host that the task is sent to.
                        type: string
                      instance:
                        description: "App instance. \n By default, the task is sent
                          to an instance which is available when the task is attempted."
                        type: string
                      service:
                        description: "App service. \n By default, the task is sent
                          to the service which is the default service when the task
                          is attempted."
                        type: string
                      version:
                        description: "App version. \n By default, the task is sent
                          to the version which is the default version when the task
                          is attempted."
                        type: string
                    type: object
                  id:
                    type: string
                  location:
                    description: The location of the queue
                    type: string
                  name:
                    description: The queue name.
                    type: string
                  project:
                    type: string
                  rateLimits:
                    description: "Rate limits for task dispatches. \n The queue's
                      actual dispatch rate is the result of: \n * Number of tasks
                      in the queue * User-specified throttling: rateLimits, retryConfig,
                      and the queue's state. * System throttling due to 429 (Too Many
                      Requests) or 503 (Service   Unavailable) responses from the
                      worker, high error rates, or to   smooth sudden large traffic
                      spikes."
                    properties:
                      maxBurstSize:
                        description: "The max burst size. \n Max burst size limits
                          how fast tasks in queue are processed when many tasks are
                          in the queue and the rate is high. This field allows the
                          queue to have a high rate so processing starts shortly after
                          a task is enqueued, but still limits resource usage when
                          many tasks are enqueued in a short period of time."
                        format: int64
                        type: integer
                      maxConcurrentDispatches:
                        description: The maximum number of concurrent tasks that Cloud
                          Tasks allows to be dispatched for this queue. After this
                          threshold has been reached, Cloud Tasks stops dispatching
                          tasks until the number of concurrent requests decreases.
                        format: int64
                        type: integer
                      maxDispatchesPerSecond:
                        description: "The maximum rate at which tasks are dispatched
                          from this queue. \n If unspecified when the queue is created,
                          Cloud Tasks will pick the default."
                        format: double
                        type: number
                    type: object
                  retryConfig:
                    description: Settings that determine the retry behavior.
                    properties:
                      maxAttempts:
                        description: "Number of attempts per task. \n Cloud Tasks
                          will attempt the task maxAttempts times (that is, if the
                          first attempt fails, then there will be maxAttempts - 1
                          retries). Must be >= -1. \n If unspecified when the queue
                          is created, Cloud Tasks will pick the default. \n -1 indicates
                          unlimited attempts."
                        format: int64
                        type: integer
                      maxBackoff:
                        description: A task will be scheduled for retry between minBackoff
                          and maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                      maxDoublings:
                        description: "The time between retries will double maxDoublings
                          times. \n A task's retry interval starts at minBackoff,
                          then doubles maxDoublings times, then increases linearly,
                          and finally retries retries at intervals of maxBackoff up
                          to maxAttempts times."
                        format: int64
                        type: integer
                      maxRetryDuration:
                        description: "If positive, maxRetryDuration specifies the
                          time limit for retrying a failed task, measured from when
                          the task was first attempted. Once maxRetryDuration time
                          has passed and the task has been attempted maxAttempts times,
                          no further attempts will be made and the task will be deleted.
                          \n If zero, then the task age is unlimited."
                        type: string
                      minBackoff:
                        description: A task will be scheduled for retry between minBackoff
                          and maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                    type: object
                  stackdriverLoggingConfig:
                    description: Configuration options for writing logs to Stackdriver
                      Logging.
                    properties:
                      samplingRatio:
                        description: Specifies the fraction of operations to write
                          to Stackdriver Logging. This field may contain any value
                          between 0.0 and 1.0, inclusive. 0.0 is the default and means
                          that no operations are logged.
                        format: double
                        type: number
                    required:
                    - samplingRatio
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - location
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  appEngineRoutingOverride:
                    description: Overrides for task-level appEngineRouting. These
                      settings apply only to App Engine tasks in this queue
                    properties:
                      host:
                        description: The host that the task is sent to.
                        type: string
                      instance:
                        description: "App instance. \n By default, the task is sent
                          to an instance which is available when the task is attempted."
                        type: string
                      service:
                        description: "App service. \n By default, the task is sent
                          to the service which is the default service when the task
                          is attempted."
                        type: string
                      version:
                        description: "App version. \n By default, the task is sent
                          to the version which is the default version when the task
                          is attempted."
                        type: string
                    type: object
                  id:
                    type: string
                  location:
                    description: The location of the queue
                    type: string
                  name:
                    description: The queue name.
                    type: string
                  project:
                    type: string
                  rateLimits:
                    description: "Rate limits for task dispatches. \n The queue's
                      actual dispatch rate is the result of: \n * Number of tasks
                      in the queue * User-specified throttling: rateLimits, retryConfig,
                      and the queue's state. * System throttling due to 429 (Too Many
                      Requests) or 503 (Service   Unavailable) responses from the
                      worker, high error rates, or to   smooth sudden large traffic
                      spikes."
                    properties:
                      maxBurstSize:
                        description: "The max burst size. \n Max burst size limits
                          how fast tasks in queue are processed when many tasks are
                          in the queue and the rate is high. This field allows the
                          queue to have a high rate so processing starts shortly after
                          a task is enqueued, but still limits resource usage when
                          many tasks are enqueued in a short period of time."
                        format: int64
                        type: integer
                      maxConcurrentDispatches:
                        description: The maximum number of concurrent tasks that Cloud
                          Tasks allows to be dispatched for this queue. After this
                          threshold has been reached, Cloud Tasks stops dispatching
                          tasks until the number of concurrent requests decreases.
                        format: int64
                        type: integer
                      maxDispatchesPerSecond:
                        description: "The maximum rate at which tasks are dispatched
                          from this queue. \n If unspecified when the queue is created,
                          Cloud Tasks will pick the default."
                        format: double
                        type: number
                    type: object
                  retryConfig:
                    description: Settings that determine the retry behavior.
                    properties:
                      maxAttempts:
                        description: "Number of attempts per task. \n Cloud Tasks
                          will attempt the task maxAttempts times (that is, if the
                          first attempt fails, then there will be maxAttempts - 1
                          retries). Must be >= -1. \n If unspecified when the queue
                          is created, Cloud Tasks will pick the default. \n -1 indicates
                          unlimited attempts."
                        format: int64
                        type: integer
                      maxBackoff:
                        description: A task will be scheduled for retry between minBackoff
                          and maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                      maxDoublings:
                        description: "The time between retries will double maxDoublings
                          times. \n A task's retry interval starts at minBackoff,
                          then doubles maxDoublings times, then increases linearly,
                          and finally retries retries at intervals of maxBackoff up
                          to maxAttempts times."
                        format: int64
                        type: integer
                      maxRetryDuration:
                        description: "If positive, maxRetryDuration specifies the
                          time limit for retrying a failed task, measured from when
                          the task was first attempted. Once maxRetryDuration time
                          has passed and the task has been attempted maxAttempts times,
                          no further attempts will be made and the task will be deleted.
                          \n If zero, then the task age is unlimited."
                        type: string
                      minBackoff:
                        description: A task will be scheduled for retry between minBackoff
                          and maxBackoff duration after it fails, if the queue's RetryConfig
                          specifies that the task should be retried.
                        type: string
                    type: object
                  stackdriverLoggingConfig:
                    description: Configuration options for writing logs to Stackdriver
                      Logging.
                    properties:
                      samplingRatio:
                        description: Specifies the fraction of operations to write
                          to Stackdriver Logging. This field may contain any value
                          between 0.0 and 1.0, inclusive. 0.0 is the default and means
                          that no operations are logged.
                        format: double
                        type: number
                    required:
                    - samplingRatio
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - location
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
