apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: subscriptions.pubsub.google.kubeform.com
spec:
  group: pubsub.google.kubeform.com
  names:
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    singular: subscription
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              kubeformOutput:
                properties:
                  ackDeadlineSeconds:
                    description: "This value is the maximum time after a subscriber
                      receives a message before the subscriber should acknowledge
                      the message. After message delivery but before the ack deadline
                      expires and before the message is acknowledged, it is an outstanding
                      message and will not be delivered again during that time (on
                      a best-effort basis). \n For pull subscriptions, this value
                      is used as the initial value for the ack deadline. To override
                      this value for a given message, call subscriptions.modifyAckDeadline
                      with the corresponding ackId if using pull. The minimum custom
                      deadline you can specify is 10 seconds. The maximum custom deadline
                      you can specify is 600 seconds (10 minutes). If this parameter
                      is 0, a default value of 10 seconds is used. \n For push delivery,
                      this value is also used to set the request timeout for the call
                      to the push endpoint. \n If the subscriber never acknowledges
                      the message, the Pub/Sub system will eventually redeliver the
                      message."
                    format: int64
                    type: integer
                  deadLetterPolicy:
                    description: "A policy that specifies the conditions for dead
                      lettering messages in this subscription. If dead_letter_policy
                      is not set, dead lettering is disabled. \n The Cloud Pub/Sub
                      service account associated with this subscription's parent project
                      (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)
                      must have permission to Acknowledge() messages on this subscription."
                    properties:
                      deadLetterTopic:
                        description: "The name of the topic to which dead letter messages
                          should be published. Format is 'projects/{project}/topics/{topic}'.
                          \n The Cloud Pub/Sub service account associated with the
                          enclosing subscription's parent project (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)
                          must have permission to Publish() to this topic. \n The
                          operation will fail if the topic does not exist. Users should
                          ensure that there is a subscription attached to this topic
                          since messages published to a topic with no subscriptions
                          are lost."
                        type: string
                      maxDeliveryAttempts:
                        description: "The maximum number of delivery attempts for
                          any message. The value must be between 5 and 100. \n The
                          number of delivery attempts is defined as 1 + (the sum of
                          number of NACKs and number of times the acknowledgement
                          deadline has been exceeded for the message). \n A NACK is
                          any call to ModifyAckDeadline with a 0 deadline. Note that
                          client libraries may automatically extend ack_deadlines.
                          \n This field will be honored on a best effort basis. \n
                          If this parameter is 0, a default value of 5 is used."
                        format: int64
                        type: integer
                    type: object
                  enableMessageOrdering:
                    description: If 'true', messages published with the same orderingKey
                      in PubsubMessage will be delivered to the subscribers in the
                      order in which they are received by the Pub/Sub system. Otherwise,
                      they may be delivered in any order.
                    type: boolean
                  expirationPolicy:
                    description: A policy that specifies the conditions for this subscription's
                      expiration. A subscription is considered active as long as any
                      connected subscriber is successfully consuming messages from
                      the subscription or is issuing operations on the subscription.
                      If expirationPolicy is not set, a default policy with ttl of
                      31 days will be used.  If it is set but ttl is "", the resource
                      never expires.  The minimum allowed value for expirationPolicy.ttl
                      is 1 day.
                    properties:
                      ttl:
                        description: Specifies the "time-to-live" duration for an
                          associated resource. The resource expires if it is not active
                          for a period of ttl. If ttl is not set, the associated resource
                          never expires. A duration in seconds with up to nine fractional
                          digits, terminated by 's'. Example - "3.5s".
                        type: string
                    required:
                    - ttl
                    type: object
                  filter:
                    description: The subscription only delivers the messages that
                      match the filter. Pub/Sub automatically acknowledges the messages
                      that don't match the filter. You can filter messages by their
                      attributes. The maximum length of a filter is 256 bytes. After
                      creating the subscription, you can't modify the filter.
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Subscription.
                    type: object
                  messageRetentionDuration:
                    description: "How long to retain unacknowledged messages in the
                      subscription's backlog, from the moment a message is published.
                      If retainAckedMessages is true, then this also configures the
                      retention of acknowledged messages, and thus configures how
                      far back in time a subscriptions.seek can be done. Defaults
                      to 7 days. Cannot be more than 7 days ('\"604800s\"') or less
                      than 10 minutes ('\"600s\"'). \n A duration in seconds with
                      up to nine fractional digits, terminated by 's'. Example: '\"600.5s\"'."
                    type: string
                  name:
                    description: Name of the subscription.
                    type: string
                  path:
                    description: ' Path of the subscription in the format projects/{project}/subscriptions/{name}
                      Deprecated'
                    type: string
                  project:
                    type: string
                  pushConfig:
                    description: If push delivery is used with this subscription,
                      this field is used to configure it. An empty pushConfig signifies
                      that the subscriber will pull and ack messages using API methods.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: "Endpoint configuration attributes. \n Every
                          endpoint has a set of API supported attributes that can
                          be used to control different aspects of the message delivery.
                          \n The currently supported attribute is x-goog-version,
                          which you can use to change the format of the pushed message.
                          This attribute indicates the version of the data expected
                          by the endpoint. This controls the shape of the pushed message
                          (i.e., its fields and metadata). The endpoint version is
                          based on the version of the Pub/Sub API. \n If not present
                          during the subscriptions.create call, it will default to
                          the version of the API used to make such call. If not present
                          during a subscriptions.modifyPushConfig call, its value
                          will not be changed. subscriptions.get calls will always
                          return a valid version, even if the subscription was created
                          without this attribute. \n The possible values for this
                          attribute are: \n - v1beta1: uses the push format defined
                          in the v1beta1 Pub/Sub API. - v1 or v1beta2: uses the push
                          format defined in the v1 Pub/Sub API."
                        type: object
                      oidcToken:
                        description: If specified, Pub/Sub will generate and attach
                          an OIDC JWT token as an Authorization header in the HTTP
                          request for every pushed message.
                        properties:
                          audience:
                            description: 'Audience to be used when generating OIDC
                              token. The audience claim identifies the recipients
                              that the JWT is intended for. The audience value is
                              a single case-sensitive string. Having multiple values
                              (array) for the audience field is not supported. More
                              info about the OIDC JWT token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
                              Note: if not specified, the Push endpoint URL will be
                              used.'
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              the OIDC token. The caller (for subscriptions.create,
                              subscriptions.patch, and subscriptions.modifyPushConfig
                              RPCs) must have the iam.serviceAccounts.actAs permission
                              for the service account.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      pushEndpoint:
                        description: A URL locating the endpoint to which messages
                          should be pushed. For example, a Webhook endpoint might
                          use "https://example.com/push".
                        type: string
                    required:
                    - pushEndpoint
                    type: object
                  retainAckedMessages:
                    description: Indicates whether to retain acknowledged messages.
                      If 'true', then messages are not expunged from the subscription's
                      backlog, even if they are acknowledged, until they fall out
                      of the messageRetentionDuration window.
                    type: boolean
                  retryPolicy:
                    description: "A policy that specifies how Pub/Sub retries message
                      delivery for this subscription. \n If not set, the default retry
                      policy is applied. This generally implies that messages will
                      be retried as soon as possible for healthy subscribers. RetryPolicy
                      will be triggered on NACKs or acknowledgement deadline exceeded
                      events for a given message"
                    properties:
                      maximumBackoff:
                        description: 'The maximum delay between consecutive deliveries
                          of a given message. Value should be between 0 and 600 seconds.
                          Defaults to 600 seconds. A duration in seconds with up to
                          nine fractional digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      minimumBackoff:
                        description: 'The minimum delay between consecutive deliveries
                          of a given message. Value should be between 0 and 600 seconds.
                          Defaults to 10 seconds. A duration in seconds with up to
                          nine fractional digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  topic:
                    description: A reference to a Topic resource.
                    type: string
                required:
                - name
                - topic
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  ackDeadlineSeconds:
                    description: "This value is the maximum time after a subscriber
                      receives a message before the subscriber should acknowledge
                      the message. After message delivery but before the ack deadline
                      expires and before the message is acknowledged, it is an outstanding
                      message and will not be delivered again during that time (on
                      a best-effort basis). \n For pull subscriptions, this value
                      is used as the initial value for the ack deadline. To override
                      this value for a given message, call subscriptions.modifyAckDeadline
                      with the corresponding ackId if using pull. The minimum custom
                      deadline you can specify is 10 seconds. The maximum custom deadline
                      you can specify is 600 seconds (10 minutes). If this parameter
                      is 0, a default value of 10 seconds is used. \n For push delivery,
                      this value is also used to set the request timeout for the call
                      to the push endpoint. \n If the subscriber never acknowledges
                      the message, the Pub/Sub system will eventually redeliver the
                      message."
                    format: int64
                    type: integer
                  deadLetterPolicy:
                    description: "A policy that specifies the conditions for dead
                      lettering messages in this subscription. If dead_letter_policy
                      is not set, dead lettering is disabled. \n The Cloud Pub/Sub
                      service account associated with this subscription's parent project
                      (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)
                      must have permission to Acknowledge() messages on this subscription."
                    properties:
                      deadLetterTopic:
                        description: "The name of the topic to which dead letter messages
                          should be published. Format is 'projects/{project}/topics/{topic}'.
                          \n The Cloud Pub/Sub service account associated with the
                          enclosing subscription's parent project (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)
                          must have permission to Publish() to this topic. \n The
                          operation will fail if the topic does not exist. Users should
                          ensure that there is a subscription attached to this topic
                          since messages published to a topic with no subscriptions
                          are lost."
                        type: string
                      maxDeliveryAttempts:
                        description: "The maximum number of delivery attempts for
                          any message. The value must be between 5 and 100. \n The
                          number of delivery attempts is defined as 1 + (the sum of
                          number of NACKs and number of times the acknowledgement
                          deadline has been exceeded for the message). \n A NACK is
                          any call to ModifyAckDeadline with a 0 deadline. Note that
                          client libraries may automatically extend ack_deadlines.
                          \n This field will be honored on a best effort basis. \n
                          If this parameter is 0, a default value of 5 is used."
                        format: int64
                        type: integer
                    type: object
                  enableMessageOrdering:
                    description: If 'true', messages published with the same orderingKey
                      in PubsubMessage will be delivered to the subscribers in the
                      order in which they are received by the Pub/Sub system. Otherwise,
                      they may be delivered in any order.
                    type: boolean
                  expirationPolicy:
                    description: A policy that specifies the conditions for this subscription's
                      expiration. A subscription is considered active as long as any
                      connected subscriber is successfully consuming messages from
                      the subscription or is issuing operations on the subscription.
                      If expirationPolicy is not set, a default policy with ttl of
                      31 days will be used.  If it is set but ttl is "", the resource
                      never expires.  The minimum allowed value for expirationPolicy.ttl
                      is 1 day.
                    properties:
                      ttl:
                        description: Specifies the "time-to-live" duration for an
                          associated resource. The resource expires if it is not active
                          for a period of ttl. If ttl is not set, the associated resource
                          never expires. A duration in seconds with up to nine fractional
                          digits, terminated by 's'. Example - "3.5s".
                        type: string
                    required:
                    - ttl
                    type: object
                  filter:
                    description: The subscription only delivers the messages that
                      match the filter. Pub/Sub automatically acknowledges the messages
                      that don't match the filter. You can filter messages by their
                      attributes. The maximum length of a filter is 256 bytes. After
                      creating the subscription, you can't modify the filter.
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to this
                      Subscription.
                    type: object
                  messageRetentionDuration:
                    description: "How long to retain unacknowledged messages in the
                      subscription's backlog, from the moment a message is published.
                      If retainAckedMessages is true, then this also configures the
                      retention of acknowledged messages, and thus configures how
                      far back in time a subscriptions.seek can be done. Defaults
                      to 7 days. Cannot be more than 7 days ('\"604800s\"') or less
                      than 10 minutes ('\"600s\"'). \n A duration in seconds with
                      up to nine fractional digits, terminated by 's'. Example: '\"600.5s\"'."
                    type: string
                  name:
                    description: Name of the subscription.
                    type: string
                  path:
                    description: ' Path of the subscription in the format projects/{project}/subscriptions/{name}
                      Deprecated'
                    type: string
                  project:
                    type: string
                  pushConfig:
                    description: If push delivery is used with this subscription,
                      this field is used to configure it. An empty pushConfig signifies
                      that the subscriber will pull and ack messages using API methods.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: "Endpoint configuration attributes. \n Every
                          endpoint has a set of API supported attributes that can
                          be used to control different aspects of the message delivery.
                          \n The currently supported attribute is x-goog-version,
                          which you can use to change the format of the pushed message.
                          This attribute indicates the version of the data expected
                          by the endpoint. This controls the shape of the pushed message
                          (i.e., its fields and metadata). The endpoint version is
                          based on the version of the Pub/Sub API. \n If not present
                          during the subscriptions.create call, it will default to
                          the version of the API used to make such call. If not present
                          during a subscriptions.modifyPushConfig call, its value
                          will not be changed. subscriptions.get calls will always
                          return a valid version, even if the subscription was created
                          without this attribute. \n The possible values for this
                          attribute are: \n - v1beta1: uses the push format defined
                          in the v1beta1 Pub/Sub API. - v1 or v1beta2: uses the push
                          format defined in the v1 Pub/Sub API."
                        type: object
                      oidcToken:
                        description: If specified, Pub/Sub will generate and attach
                          an OIDC JWT token as an Authorization header in the HTTP
                          request for every pushed message.
                        properties:
                          audience:
                            description: 'Audience to be used when generating OIDC
                              token. The audience claim identifies the recipients
                              that the JWT is intended for. The audience value is
                              a single case-sensitive string. Having multiple values
                              (array) for the audience field is not supported. More
                              info about the OIDC JWT token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3
                              Note: if not specified, the Push endpoint URL will be
                              used.'
                            type: string
                          serviceAccountEmail:
                            description: Service account email to be used for generating
                              the OIDC token. The caller (for subscriptions.create,
                              subscriptions.patch, and subscriptions.modifyPushConfig
                              RPCs) must have the iam.serviceAccounts.actAs permission
                              for the service account.
                            type: string
                        required:
                        - serviceAccountEmail
                        type: object
                      pushEndpoint:
                        description: A URL locating the endpoint to which messages
                          should be pushed. For example, a Webhook endpoint might
                          use "https://example.com/push".
                        type: string
                    required:
                    - pushEndpoint
                    type: object
                  retainAckedMessages:
                    description: Indicates whether to retain acknowledged messages.
                      If 'true', then messages are not expunged from the subscription's
                      backlog, even if they are acknowledged, until they fall out
                      of the messageRetentionDuration window.
                    type: boolean
                  retryPolicy:
                    description: "A policy that specifies how Pub/Sub retries message
                      delivery for this subscription. \n If not set, the default retry
                      policy is applied. This generally implies that messages will
                      be retried as soon as possible for healthy subscribers. RetryPolicy
                      will be triggered on NACKs or acknowledgement deadline exceeded
                      events for a given message"
                    properties:
                      maximumBackoff:
                        description: 'The maximum delay between consecutive deliveries
                          of a given message. Value should be between 0 and 600 seconds.
                          Defaults to 600 seconds. A duration in seconds with up to
                          nine fractional digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                      minimumBackoff:
                        description: 'The minimum delay between consecutive deliveries
                          of a given message. Value should be between 0 and 600 seconds.
                          Defaults to 10 seconds. A duration in seconds with up to
                          nine fractional digits, terminated by ''s''. Example: "3.5s".'
                        type: string
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  topic:
                    description: A reference to a Topic resource.
                    type: string
                required:
                - name
                - topic
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
