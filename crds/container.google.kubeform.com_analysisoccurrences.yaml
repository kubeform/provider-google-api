apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: analysisoccurrences.container.google.kubeform.com
spec:
  group: container.google.kubeform.com
  names:
    kind: AnalysisOccurrence
    listKind: AnalysisOccurrenceList
    plural: analysisoccurrences
    singular: analysisoccurrence
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  attestation:
                    description: Occurrence that represents a single "attestation".
                      The authenticity of an attestation can be verified using the
                      attached signature. If the verifier trusts the public key of
                      the signer, then verifying the signature is sufficient to establish
                      trust. In this circumstance, the authority to which this attestation
                      is attached is primarily useful for lookup (how to find this
                      attestation if you already know the authority and artifact to
                      be verified) and intent (for which authority this attestation
                      was intended to sign.
                    properties:
                      serializedPayload:
                        description: The serialized payload that is verified by one
                          or more signatures. A base64-encoded string.
                        type: string
                      signatures:
                        description: One or more signatures over serializedPayload.
                          Verifier implementations should consider this attestation
                          message verified if at least one signature verifies serializedPayload.
                          See Signature in common.proto for more details on signature
                          structure and verification.
                        items:
                          properties:
                            publicKeyID:
                              description: "The identifier for the public key that
                                verifies this signature. MUST be an RFC3986 conformant
                                URI. * When possible, the key id should be an immutable
                                reference, such as a cryptographic digest. Examples
                                of valid values: \n * OpenPGP V4 public key fingerprint.
                                See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr
                                \  for more details on this scheme.     * 'openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA'
                                * RFC6920 digest-named SubjectPublicKeyInfo (digest
                                of the DER serialization):     * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\""
                              type: string
                            signature:
                              description: The content of the signature, an opaque
                                bytestring. The payload that this signature verifies
                                MUST be unambiguously provided with the Signature
                                during verification. A wrapper message might provide
                                the payload explicitly. Alternatively, a message might
                                have a canonical serialization that can always be
                                unambiguously computed to derive the payload.
                              type: string
                          required:
                          - publicKeyID
                          type: object
                        type: array
                    required:
                    - serializedPayload
                    - signatures
                    type: object
                  createTime:
                    description: The time when the repository was created.
                    type: string
                  id:
                    type: string
                  kind:
                    description: The note kind which explicitly denotes which of the
                      occurrence details are specified. This field can be used as
                      a filter in list requests.
                    type: string
                  name:
                    description: The name of the occurrence.
                    type: string
                  noteName:
                    description: The analysis note associated with this occurrence,
                      in the form of projects/[PROJECT]/notes/[NOTE_ID]. This field
                      can be used as a filter in list requests.
                    type: string
                  project:
                    type: string
                  remediation:
                    description: A description of actions that can be taken to remedy
                      the note.
                    type: string
                  resourceURI:
                    description: Required. Immutable. A URI that represents the resource
                      for which the occurrence applies. For example, https://gcr.io/project/image@sha256:123abc
                      for a Docker image.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: The time when the repository was last updated.
                    type: string
                required:
                - attestation
                - noteName
                - resourceURI
                type: object
              state:
                properties:
                  attestation:
                    description: Occurrence that represents a single "attestation".
                      The authenticity of an attestation can be verified using the
                      attached signature. If the verifier trusts the public key of
                      the signer, then verifying the signature is sufficient to establish
                      trust. In this circumstance, the authority to which this attestation
                      is attached is primarily useful for lookup (how to find this
                      attestation if you already know the authority and artifact to
                      be verified) and intent (for which authority this attestation
                      was intended to sign.
                    properties:
                      serializedPayload:
                        description: The serialized payload that is verified by one
                          or more signatures. A base64-encoded string.
                        type: string
                      signatures:
                        description: One or more signatures over serializedPayload.
                          Verifier implementations should consider this attestation
                          message verified if at least one signature verifies serializedPayload.
                          See Signature in common.proto for more details on signature
                          structure and verification.
                        items:
                          properties:
                            publicKeyID:
                              description: "The identifier for the public key that
                                verifies this signature. MUST be an RFC3986 conformant
                                URI. * When possible, the key id should be an immutable
                                reference, such as a cryptographic digest. Examples
                                of valid values: \n * OpenPGP V4 public key fingerprint.
                                See https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr
                                \  for more details on this scheme.     * 'openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA'
                                * RFC6920 digest-named SubjectPublicKeyInfo (digest
                                of the DER serialization):     * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\""
                              type: string
                            signature:
                              description: The content of the signature, an opaque
                                bytestring. The payload that this signature verifies
                                MUST be unambiguously provided with the Signature
                                during verification. A wrapper message might provide
                                the payload explicitly. Alternatively, a message might
                                have a canonical serialization that can always be
                                unambiguously computed to derive the payload.
                              type: string
                          required:
                          - publicKeyID
                          type: object
                        type: array
                    required:
                    - serializedPayload
                    - signatures
                    type: object
                  createTime:
                    description: The time when the repository was created.
                    type: string
                  id:
                    type: string
                  kind:
                    description: The note kind which explicitly denotes which of the
                      occurrence details are specified. This field can be used as
                      a filter in list requests.
                    type: string
                  name:
                    description: The name of the occurrence.
                    type: string
                  noteName:
                    description: The analysis note associated with this occurrence,
                      in the form of projects/[PROJECT]/notes/[NOTE_ID]. This field
                      can be used as a filter in list requests.
                    type: string
                  project:
                    type: string
                  remediation:
                    description: A description of actions that can be taken to remedy
                      the note.
                    type: string
                  resourceURI:
                    description: Required. Immutable. A URI that represents the resource
                      for which the occurrence applies. For example, https://gcr.io/project/image@sha256:123abc
                      for a Docker image.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  updateTime:
                    description: The time when the repository was last updated.
                    type: string
                required:
                - attestation
                - noteName
                - resourceURI
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
