apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: nodes.tpu.google.kubeform.com
spec:
  group: tpu.google.kubeform.com
  names:
    kind: Node
    listKind: NodeList
    plural: nodes
    singular: node
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  acceleratorType:
                    description: The type of hardware accelerators associated with
                      this node.
                    type: string
                  cidrBlock:
                    description: "The CIDR block that the TPU node will use when selecting
                      an IP address. This CIDR block must be a /29 block; the Compute
                      Engine networks API forbids a smaller block, and using a larger
                      block would be wasteful (a node can only consume one IP address).
                      \n Errors will occur if the CIDR block has already been used
                      for a currently existing TPU node, the CIDR block conflicts
                      with any subnetworks in the user's provided network, or the
                      provided network is peered with another network that is using
                      that CIDR block."
                    type: string
                  description:
                    description: The user-supplied description of the TPU. Maximum
                      of 512 characters.
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Resource labels to represent user provided metadata.
                    type: object
                  name:
                    description: The immutable name of the TPU.
                    type: string
                  network:
                    description: The name of a network to peer the TPU node to. It
                      must be a preexisting Compute Engine network inside of the project
                      on which this API has been activated. If none is provided, "default"
                      will be used.
                    type: string
                  networkEndpoints:
                    description: The network endpoints where TPU workers can be accessed
                      and sent work. It is recommended that Tensorflow clients of
                      the node first reach out to the first (index 0) entry.
                    items:
                      properties:
                        ipAddress:
                          description: The IP address of this network endpoint.
                          type: string
                        port:
                          description: The port of this network endpoint.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  project:
                    type: string
                  schedulingConfig:
                    description: Sets the scheduling options for this TPU instance.
                    properties:
                      preemptible:
                        description: Defines whether the TPU instance is preemptible.
                        type: boolean
                    required:
                    - preemptible
                    type: object
                  serviceAccount:
                    description: The service account used to run the tensor flow services
                      within the node. To share resources, including Google Cloud
                      Storage data, with the Tensorflow job running in the Node, this
                      account must have permissions to that data.
                    type: string
                  tensorflowVersion:
                    description: The version of Tensorflow running in the Node.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  useServiceNetworking:
                    description: Whether the VPC peering for the node is set up through
                      Service Networking API. The VPC Peering should be set up before
                      provisioning the node. If this field is set, cidr_block field
                      should not be specified. If the network that you want to peer
                      the TPU Node to is a Shared VPC network, the node must be created
                      with this this field enabled.
                    type: boolean
                  zone:
                    description: The GCP location for the TPU. If it is not provided,
                      the provider zone is used.
                    type: string
                required:
                - acceleratorType
                - name
                - tensorflowVersion
                type: object
              state:
                properties:
                  acceleratorType:
                    description: The type of hardware accelerators associated with
                      this node.
                    type: string
                  cidrBlock:
                    description: "The CIDR block that the TPU node will use when selecting
                      an IP address. This CIDR block must be a /29 block; the Compute
                      Engine networks API forbids a smaller block, and using a larger
                      block would be wasteful (a node can only consume one IP address).
                      \n Errors will occur if the CIDR block has already been used
                      for a currently existing TPU node, the CIDR block conflicts
                      with any subnetworks in the user's provided network, or the
                      provided network is peered with another network that is using
                      that CIDR block."
                    type: string
                  description:
                    description: The user-supplied description of the TPU. Maximum
                      of 512 characters.
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Resource labels to represent user provided metadata.
                    type: object
                  name:
                    description: The immutable name of the TPU.
                    type: string
                  network:
                    description: The name of a network to peer the TPU node to. It
                      must be a preexisting Compute Engine network inside of the project
                      on which this API has been activated. If none is provided, "default"
                      will be used.
                    type: string
                  networkEndpoints:
                    description: The network endpoints where TPU workers can be accessed
                      and sent work. It is recommended that Tensorflow clients of
                      the node first reach out to the first (index 0) entry.
                    items:
                      properties:
                        ipAddress:
                          description: The IP address of this network endpoint.
                          type: string
                        port:
                          description: The port of this network endpoint.
                          format: int64
                          type: integer
                      type: object
                    type: array
                  project:
                    type: string
                  schedulingConfig:
                    description: Sets the scheduling options for this TPU instance.
                    properties:
                      preemptible:
                        description: Defines whether the TPU instance is preemptible.
                        type: boolean
                    required:
                    - preemptible
                    type: object
                  serviceAccount:
                    description: The service account used to run the tensor flow services
                      within the node. To share resources, including Google Cloud
                      Storage data, with the Tensorflow job running in the Node, this
                      account must have permissions to that data.
                    type: string
                  tensorflowVersion:
                    description: The version of Tensorflow running in the Node.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  useServiceNetworking:
                    description: Whether the VPC peering for the node is set up through
                      Service Networking API. The VPC Peering should be set up before
                      provisioning the node. If this field is set, cidr_block field
                      should not be specified. If the network that you want to peer
                      the TPU Node to is a Shared VPC network, the node must be created
                      with this this field enabled.
                    type: boolean
                  zone:
                    description: The GCP location for the TPU. If it is not provided,
                      the provider zone is used.
                    type: string
                required:
                - acceleratorType
                - name
                - tensorflowVersion
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
