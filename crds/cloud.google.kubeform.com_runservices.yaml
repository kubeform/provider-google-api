apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: runservices.cloud.google.kubeform.com
spec:
  group: cloud.google.kubeform.com
  names:
    kind: RunService
    listKind: RunServiceList
    plural: runservices
    singular: runservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  autogenerateRevisionName:
                    type: boolean
                  id:
                    type: string
                  location:
                    description: The location of the cloud run instance. eg us-central1
                    type: string
                  metadata:
                    description: Metadata associated with this Service, including
                      name, namespace, labels, and annotations.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: "Annotations is a key value map stored with a
                          resource that may be set by external tools to store and
                          retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                          \n **Note**: The Cloud Run API may add additional annotations
                          that were not provided in your config. If terraform plan
                          shows a diff where a server-side annotation is added, you
                          can add it to your config or apply the lifecycle.ignore_changes
                          rule to the metadata.0.annotations field. \n Cloud Run (fully
                          managed) uses the following annotation keys to configure
                          features on a Service: \n - 'run.googleapis.com/ingress'
                          sets the [ingress settings](https://cloud.google.com/sdk/gcloud/reference/run/deploy#--ingress)
                          \  for the Service. For example, '\"run.googleapis.com/ingress\"
                          = \"all\"'."
                        type: object
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state.
                        format: int64
                        type: integer
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and routes. More
                          info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      namespace:
                        description: In Cloud Run the namespace must be equal to either
                          the project ID or project number.
                        type: string
                      resourceVersion:
                        description: "An opaque value that represents the internal
                          version of this object that can be used by clients to determine
                          when objects have changed. May be used for optimistic concurrency,
                          change detection, and the watch operation on a resource
                          or set of resources. They may only be valid for a particular
                          resource or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object.
                        type: string
                      uid:
                        description: "UID is a unique id generated by the server on
                          successful creation of a resource and is not allowed to
                          change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                        type: string
                    type: object
                  name:
                    description: 'Name must be unique within a namespace, within a
                      Cloud Run region. Is required when creating resources. Name
                      is primarily intended for creation idempotence and configuration
                      definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  project:
                    type: string
                  status:
                    description: The current status of the Service.
                    items:
                      properties:
                        conditions:
                          description: Array of observed Service Conditions, indicating
                            the current ready state of the service.
                          items:
                            properties:
                              message:
                                description: Human readable message indicating details
                                  about the current status.
                                type: string
                              reason:
                                description: One-word CamelCase reason for the condition's
                                  current status.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of domain mapping condition.
                                type: string
                            type: object
                          type: array
                        latestCreatedRevisionName:
                          description: From ConfigurationStatus. LatestCreatedRevisionName
                            is the last revision that was created from this Service's
                            Configuration. It might not be ready yet, for that use
                            LatestReadyRevisionName.
                          type: string
                        latestReadyRevisionName:
                          description: From ConfigurationStatus. LatestReadyRevisionName
                            holds the name of the latest Revision stamped out from
                            this Service's Configuration that has had its "Ready"
                            condition become "True".
                          type: string
                        observedGeneration:
                          description: "ObservedGeneration is the 'Generation' of
                            the Route that was last processed by the controller. \n
                            Clients polling for completed reconciliation should poll
                            until observedGeneration = metadata.generation and the
                            Ready condition's status is True or False."
                          format: int64
                          type: integer
                        url:
                          description: From RouteStatus. URL holds the url that will
                            distribute traffic over the provided traffic targets.
                            It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
                          type: string
                      type: object
                    type: array
                  template:
                    description: "template holds the latest specification for the
                      Revision to be stamped out. The template references the container
                      image, and may also include labels and annotations that should
                      be attached to the Revision. To correlate a Revision, and/or
                      to force a Revision to be created when the spec doesn't otherwise
                      change, a nonce label may be provided in the template metadata.
                      For more details, see: https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions
                      \n Cloud Run does not currently support referencing a build
                      that is responsible for materializing the container image from
                      source."
                    properties:
                      metadata:
                        description: Optional metadata for this Revision, including
                          labels and annotations. Name will be generated by the Configuration.
                          To set minimum instances for this revision, use the "autoscaling.knative.dev/minScale"
                          annotation key. To set maximum instances for this revision,
                          use the "autoscaling.knative.dev/maxScale" annotation key.
                          To set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                          annotation key.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: "Annotations is a key value map stored with
                              a resource that may be set by external tools to store
                              and retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                              \n **Note**: The Cloud Run API may add additional annotations
                              that were not provided in your config. If terraform
                              plan shows a diff where a server-side annotation is
                              added, you can add it to your config or apply the lifecycle.ignore_changes
                              rule to the metadata.0.annotations field."
                            type: object
                          generation:
                            description: A sequence number representing a specific
                              generation of the desired state.
                            format: int64
                            type: integer
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Map of string keys and values that can be
                              used to organize and categorize (scope and select) objects.
                              May match selectors of replication controllers and routes.
                              More info: http://kubernetes.io/docs/user-guide/labels'
                            type: object
                          name:
                            description: 'Name must be unique within a namespace,
                              within a Cloud Run region. Is required when creating
                              resources. Name is primarily intended for creation idempotence
                              and configuration definition. Cannot be updated. More
                              info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          namespace:
                            description: In Cloud Run the namespace must be equal
                              to either the project ID or project number. It will
                              default to the resource's project.
                            type: string
                          resourceVersion:
                            description: "An opaque value that represents the internal
                              version of this object that can be used by clients to
                              determine when objects have changed. May be used for
                              optimistic concurrency, change detection, and the watch
                              operation on a resource or set of resources. They may
                              only be valid for a particular resource or set of resources.
                              \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                            type: string
                          selfLink:
                            description: SelfLink is a URL representing this object.
                            type: string
                          uid:
                            description: "UID is a unique id generated by the server
                              on successful creation of a resource and is not allowed
                              to change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            type: string
                        type: object
                      spec:
                        description: RevisionSpec holds the desired state of the Revision
                          (from the client).
                        properties:
                          containerConcurrency:
                            description: 'ContainerConcurrency specifies the maximum
                              allowed in-flight (concurrent) requests per container
                              of the Revision. Values are: - ''0'' thread-safe, the
                              system should manage the max concurrency. This is     the
                              default value. - ''1'' not-thread-safe. Single concurrency
                              - ''2-N'' thread-safe, max concurrency of N'
                            format: int64
                            type: integer
                          containers:
                            description: 'Container defines the unit of execution
                              for this Revision. In the context of a Revision, we
                              disallow a number of the fields of this Container, including:
                              name, ports, and volumeMounts. The runtime contract
                              is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md'
                            items:
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The docker
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. The $(VAR_NAME) syntax can
                                    be escaped with a double $$, ie: $$(VAR_NAME).
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. More info:
                                    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The docker image''s ENTRYPOINT is used
                                    if this is not provided. Variable references $(VAR_NAME)
                                    are expanded using the container''s environment.
                                    If a variable cannot be resolved, the reference
                                    in the input string will be unchanged. The $(VAR_NAME)
                                    syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. More info:
                                    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container.
                                  items:
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previous defined
                                          environment variables in the container and
                                          any route environment variables. If a variable
                                          cannot be resolved, the reference in the
                                          input string will be unchanged. The $(VAR_NAME)
                                          syntax can be escaped with a double $$,
                                          ie: $$(VAR_NAME). Escaped references will
                                          never be expanded, regardless of whether
                                          the variable exists or not. Defaults to
                                          "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Only supports secret_key_ref.
                                        properties:
                                          secretKeyRef:
                                            description: Selects a key (version) of
                                              a secret in Secret Manager.
                                            properties:
                                              key:
                                                description: A Cloud Secret Manager
                                                  secret version. Must be 'latest'
                                                  for the latest version or an integer
                                                  for a specific version.
                                                type: string
                                              name:
                                                description: The name of the secret
                                                  in Cloud Secret Manager. By default,
                                                  the secret is assumed to be in the
                                                  same project. If the secret is in
                                                  another project, you must define
                                                  an alias. You set the <alias> in
                                                  this field, and create an annotation
                                                  with the following structure "run.googleapis.com/secrets"
                                                  = "<alias>:projects/<project-id|project-number>/secrets/<secret-name>".
                                                  If multiple alias definitions are
                                                  needed, they must be separated by
                                                  commas in the annotation field.
                                                type: string
                                            required:
                                            - key
                                            - name
                                            type: object
                                        required:
                                        - secretKeyRef
                                        type: object
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. All invalid keys will
                                    be reported as an event when the container is
                                    starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Deprecated
                                  items:
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from.
                                        properties:
                                          localObjectReference:
                                            description: The ConfigMap to select from.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from.
                                        properties:
                                          localObjectReference:
                                            description: The Secret to select from.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Docker image name. This is most often
                                    a reference to a container located in the container
                                    registry, such as gcr.io/cloudrun/hello More info:
                                    https://kubernetes.io/docs/concepts/containers/images'
                                  type: string
                                ports:
                                  description: 'List of open ports in the container.
                                    More Info: https://cloud.google.com/run/docs/reference/rest/v1/RevisionSpec#ContainerPort'
                                  items:
                                    properties:
                                      containerPort:
                                        description: Port number the container listens
                                          on. This must be a valid port number, 0
                                          < x < 65536.
                                        format: int64
                                        type: integer
                                      name:
                                        description: If specified, used to specify
                                          which protocol to use. Allowed values are
                                          "http1" and "h2c".
                                        type: string
                                      protocol:
                                        description: Protocol for port. Must be "TCP".
                                          Defaults to "TCP".
                                        type: string
                                    type: object
                                  type: array
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Used to set values such as max memory
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. The values of
                                        the map is string form of the ''quantity''
                                        k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. The values
                                        of the map is string form of the ''quantity''
                                        k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                      type: object
                                  type: object
                                volumeMounts:
                                  description: Volume to mount into the container's
                                    filesystem. Only supports SecretVolumeSources.
                                  items:
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Deprecated
                                  type: string
                              required:
                              - image
                              type: object
                            type: array
                          serviceAccountName:
                            description: Email address of the IAM service account
                              associated with the revision of the service. The service
                              account represents the identity of the running revision,
                              and determines what permissions the revision has. If
                              not provided, the revision will use the project's default
                              service account.
                            type: string
                          servingState:
                            description: ServingState holds a value describing the
                              state the resources are in for this Revision. It is
                              expected that the system will manipulate this based
                              on routability and load. Deprecated
                            type: string
                          timeoutSeconds:
                            description: TimeoutSeconds holds the max duration the
                              instance is allowed for responding to a request.
                            format: int64
                            type: integer
                          volumes:
                            description: Volume represents a named volume in a container.
                            items:
                              properties:
                                name:
                                  description: Volume's name.
                                  type: string
                                secret:
                                  description: The secret's value will be presented
                                    as the content of a file whose name is defined
                                    in the item path. If no items are defined, the
                                    name of the file is the secret_name.
                                  properties:
                                    defaultMode:
                                      description: Mode bits to use on created files
                                        by default. Must be a value between 0000 and
                                        0777. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int64
                                      type: integer
                                    items:
                                      description: If unspecified, the volume will
                                        expose a file whose name is the secret_name.
                                        If specified, the key will be used as the
                                        version to fetch from Cloud Secret Manager
                                        and the path will be the name of the file
                                        exposed in the volume. When items are defined,
                                        they must specify a key and a path.
                                      items:
                                        properties:
                                          key:
                                            description: The Cloud Secret Manager
                                              secret version. Can be 'latest' for
                                              the latest value or an integer for a
                                              specific version.
                                            type: string
                                          mode:
                                            description: Mode bits to use on this
                                              file, must be a value between 0000 and
                                              0777. If not specified, the volume defaultMode
                                              will be used. This might be in conflict
                                              with other options that affect the file
                                              mode, like fsGroup, and the result can
                                              be other mode bits set.
                                            format: int64
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    secretName:
                                      description: 'The name of the secret in Cloud
                                        Secret Manager. By default, the secret is
                                        assumed to be in the same project. If the
                                        secret is in another project, you must define
                                        an alias. An alias definition has the form:
                                        <alias>:projects/<project-id|project-number>/secrets/<secret-name>.
                                        If multiple alias definitions are needed,
                                        they must be separated by commas. The alias
                                        definitions must be set on the run.googleapis.com/secrets
                                        annotation.'
                                      type: string
                                  required:
                                  - secretName
                                  type: object
                              required:
                              - name
                              - secret
                              type: object
                            type: array
                        type: object
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  traffic:
                    description: Traffic specifies how to distribute traffic over
                      a collection of Knative Revisions and Configurations
                    items:
                      properties:
                        latestRevision:
                          description: LatestRevision may be optionally provided to
                            indicate that the latest ready Revision of the Configuration
                            should be used for this traffic target. When provided
                            LatestRevision must be true if RevisionName is empty;
                            it must be false when RevisionName is non-empty.
                          type: boolean
                        percent:
                          description: Percent specifies percent of the traffic to
                            this Revision or Configuration.
                          format: int64
                          type: integer
                        revisionName:
                          description: RevisionName of a specific revision to which
                            to send this portion of traffic.
                          type: string
                      required:
                      - percent
                      type: object
                    type: array
                required:
                - location
                - name
                type: object
              state:
                properties:
                  autogenerateRevisionName:
                    type: boolean
                  id:
                    type: string
                  location:
                    description: The location of the cloud run instance. eg us-central1
                    type: string
                  metadata:
                    description: Metadata associated with this Service, including
                      name, namespace, labels, and annotations.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: "Annotations is a key value map stored with a
                          resource that may be set by external tools to store and
                          retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                          \n **Note**: The Cloud Run API may add additional annotations
                          that were not provided in your config. If terraform plan
                          shows a diff where a server-side annotation is added, you
                          can add it to your config or apply the lifecycle.ignore_changes
                          rule to the metadata.0.annotations field. \n Cloud Run (fully
                          managed) uses the following annotation keys to configure
                          features on a Service: \n - 'run.googleapis.com/ingress'
                          sets the [ingress settings](https://cloud.google.com/sdk/gcloud/reference/run/deploy#--ingress)
                          \  for the Service. For example, '\"run.googleapis.com/ingress\"
                          = \"all\"'."
                        type: object
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state.
                        format: int64
                        type: integer
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and routes. More
                          info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      namespace:
                        description: In Cloud Run the namespace must be equal to either
                          the project ID or project number.
                        type: string
                      resourceVersion:
                        description: "An opaque value that represents the internal
                          version of this object that can be used by clients to determine
                          when objects have changed. May be used for optimistic concurrency,
                          change detection, and the watch operation on a resource
                          or set of resources. They may only be valid for a particular
                          resource or set of resources. \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object.
                        type: string
                      uid:
                        description: "UID is a unique id generated by the server on
                          successful creation of a resource and is not allowed to
                          change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                        type: string
                    type: object
                  name:
                    description: 'Name must be unique within a namespace, within a
                      Cloud Run region. Is required when creating resources. Name
                      is primarily intended for creation idempotence and configuration
                      definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                    type: string
                  project:
                    type: string
                  status:
                    description: The current status of the Service.
                    items:
                      properties:
                        conditions:
                          description: Array of observed Service Conditions, indicating
                            the current ready state of the service.
                          items:
                            properties:
                              message:
                                description: Human readable message indicating details
                                  about the current status.
                                type: string
                              reason:
                                description: One-word CamelCase reason for the condition's
                                  current status.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of domain mapping condition.
                                type: string
                            type: object
                          type: array
                        latestCreatedRevisionName:
                          description: From ConfigurationStatus. LatestCreatedRevisionName
                            is the last revision that was created from this Service's
                            Configuration. It might not be ready yet, for that use
                            LatestReadyRevisionName.
                          type: string
                        latestReadyRevisionName:
                          description: From ConfigurationStatus. LatestReadyRevisionName
                            holds the name of the latest Revision stamped out from
                            this Service's Configuration that has had its "Ready"
                            condition become "True".
                          type: string
                        observedGeneration:
                          description: "ObservedGeneration is the 'Generation' of
                            the Route that was last processed by the controller. \n
                            Clients polling for completed reconciliation should poll
                            until observedGeneration = metadata.generation and the
                            Ready condition's status is True or False."
                          format: int64
                          type: integer
                        url:
                          description: From RouteStatus. URL holds the url that will
                            distribute traffic over the provided traffic targets.
                            It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
                          type: string
                      type: object
                    type: array
                  template:
                    description: "template holds the latest specification for the
                      Revision to be stamped out. The template references the container
                      image, and may also include labels and annotations that should
                      be attached to the Revision. To correlate a Revision, and/or
                      to force a Revision to be created when the spec doesn't otherwise
                      change, a nonce label may be provided in the template metadata.
                      For more details, see: https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions
                      \n Cloud Run does not currently support referencing a build
                      that is responsible for materializing the container image from
                      source."
                    properties:
                      metadata:
                        description: Optional metadata for this Revision, including
                          labels and annotations. Name will be generated by the Configuration.
                          To set minimum instances for this revision, use the "autoscaling.knative.dev/minScale"
                          annotation key. To set maximum instances for this revision,
                          use the "autoscaling.knative.dev/maxScale" annotation key.
                          To set Cloud SQL connections for the revision, use the "run.googleapis.com/cloudsql-instances"
                          annotation key.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: "Annotations is a key value map stored with
                              a resource that may be set by external tools to store
                              and retrieve arbitrary metadata. More info: http://kubernetes.io/docs/user-guide/annotations
                              \n **Note**: The Cloud Run API may add additional annotations
                              that were not provided in your config. If terraform
                              plan shows a diff where a server-side annotation is
                              added, you can add it to your config or apply the lifecycle.ignore_changes
                              rule to the metadata.0.annotations field."
                            type: object
                          generation:
                            description: A sequence number representing a specific
                              generation of the desired state.
                            format: int64
                            type: integer
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Map of string keys and values that can be
                              used to organize and categorize (scope and select) objects.
                              May match selectors of replication controllers and routes.
                              More info: http://kubernetes.io/docs/user-guide/labels'
                            type: object
                          name:
                            description: 'Name must be unique within a namespace,
                              within a Cloud Run region. Is required when creating
                              resources. Name is primarily intended for creation idempotence
                              and configuration definition. Cannot be updated. More
                              info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          namespace:
                            description: In Cloud Run the namespace must be equal
                              to either the project ID or project number. It will
                              default to the resource's project.
                            type: string
                          resourceVersion:
                            description: "An opaque value that represents the internal
                              version of this object that can be used by clients to
                              determine when objects have changed. May be used for
                              optimistic concurrency, change detection, and the watch
                              operation on a resource or set of resources. They may
                              only be valid for a particular resource or set of resources.
                              \n More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
                            type: string
                          selfLink:
                            description: SelfLink is a URL representing this object.
                            type: string
                          uid:
                            description: "UID is a unique id generated by the server
                              on successful creation of a resource and is not allowed
                              to change on PUT operations. \n More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
                            type: string
                        type: object
                      spec:
                        description: RevisionSpec holds the desired state of the Revision
                          (from the client).
                        properties:
                          containerConcurrency:
                            description: 'ContainerConcurrency specifies the maximum
                              allowed in-flight (concurrent) requests per container
                              of the Revision. Values are: - ''0'' thread-safe, the
                              system should manage the max concurrency. This is     the
                              default value. - ''1'' not-thread-safe. Single concurrency
                              - ''2-N'' thread-safe, max concurrency of N'
                            format: int64
                            type: integer
                          containers:
                            description: 'Container defines the unit of execution
                              for this Revision. In the context of a Revision, we
                              disallow a number of the fields of this Container, including:
                              name, ports, and volumeMounts. The runtime contract
                              is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md'
                            items:
                              properties:
                                args:
                                  description: 'Arguments to the entrypoint. The docker
                                    image''s CMD is used if this is not provided.
                                    Variable references $(VAR_NAME) are expanded using
                                    the container''s environment. If a variable cannot
                                    be resolved, the reference in the input string
                                    will be unchanged. The $(VAR_NAME) syntax can
                                    be escaped with a double $$, ie: $$(VAR_NAME).
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. More info:
                                    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: 'Entrypoint array. Not executed within
                                    a shell. The docker image''s ENTRYPOINT is used
                                    if this is not provided. Variable references $(VAR_NAME)
                                    are expanded using the container''s environment.
                                    If a variable cannot be resolved, the reference
                                    in the input string will be unchanged. The $(VAR_NAME)
                                    syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. More info:
                                    https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: List of environment variables to set
                                    in the container.
                                  items:
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previous defined
                                          environment variables in the container and
                                          any route environment variables. If a variable
                                          cannot be resolved, the reference in the
                                          input string will be unchanged. The $(VAR_NAME)
                                          syntax can be escaped with a double $$,
                                          ie: $$(VAR_NAME). Escaped references will
                                          never be expanded, regardless of whether
                                          the variable exists or not. Defaults to
                                          "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Only supports secret_key_ref.
                                        properties:
                                          secretKeyRef:
                                            description: Selects a key (version) of
                                              a secret in Secret Manager.
                                            properties:
                                              key:
                                                description: A Cloud Secret Manager
                                                  secret version. Must be 'latest'
                                                  for the latest version or an integer
                                                  for a specific version.
                                                type: string
                                              name:
                                                description: The name of the secret
                                                  in Cloud Secret Manager. By default,
                                                  the secret is assumed to be in the
                                                  same project. If the secret is in
                                                  another project, you must define
                                                  an alias. You set the <alias> in
                                                  this field, and create an annotation
                                                  with the following structure "run.googleapis.com/secrets"
                                                  = "<alias>:projects/<project-id|project-number>/secrets/<secret-name>".
                                                  If multiple alias definitions are
                                                  needed, they must be separated by
                                                  commas in the annotation field.
                                                type: string
                                            required:
                                            - key
                                            - name
                                            type: object
                                        required:
                                        - secretKeyRef
                                        type: object
                                    type: object
                                  type: array
                                envFrom:
                                  description: List of sources to populate environment
                                    variables in the container. All invalid keys will
                                    be reported as an event when the container is
                                    starting. When a key exists in multiple sources,
                                    the value associated with the last source will
                                    take precedence. Values defined by an Env with
                                    a duplicate key will take precedence. Deprecated
                                  items:
                                    properties:
                                      configMapRef:
                                        description: The ConfigMap to select from.
                                        properties:
                                          localObjectReference:
                                            description: The ConfigMap to select from.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          optional:
                                            description: Specify whether the ConfigMap
                                              must be defined
                                            type: boolean
                                        type: object
                                      prefix:
                                        description: An optional identifier to prepend
                                          to each key in the ConfigMap.
                                        type: string
                                      secretRef:
                                        description: The Secret to select from.
                                        properties:
                                          localObjectReference:
                                            description: The Secret to select from.
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          optional:
                                            description: Specify whether the Secret
                                              must be defined
                                            type: boolean
                                        type: object
                                    type: object
                                  type: array
                                image:
                                  description: 'Docker image name. This is most often
                                    a reference to a container located in the container
                                    registry, such as gcr.io/cloudrun/hello More info:
                                    https://kubernetes.io/docs/concepts/containers/images'
                                  type: string
                                ports:
                                  description: 'List of open ports in the container.
                                    More Info: https://cloud.google.com/run/docs/reference/rest/v1/RevisionSpec#ContainerPort'
                                  items:
                                    properties:
                                      containerPort:
                                        description: Port number the container listens
                                          on. This must be a valid port number, 0
                                          < x < 65536.
                                        format: int64
                                        type: integer
                                      name:
                                        description: If specified, used to specify
                                          which protocol to use. Allowed values are
                                          "http1" and "h2c".
                                        type: string
                                      protocol:
                                        description: Protocol for port. Must be "TCP".
                                          Defaults to "TCP".
                                        type: string
                                    type: object
                                  type: array
                                resources:
                                  description: 'Compute Resources required by this
                                    container. Used to set values such as max memory
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits'
                                  properties:
                                    limits:
                                      additionalProperties:
                                        type: string
                                      description: 'Limits describes the maximum amount
                                        of compute resources allowed. The values of
                                        the map is string form of the ''quantity''
                                        k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                      type: object
                                    requests:
                                      additionalProperties:
                                        type: string
                                      description: 'Requests describes the minimum
                                        amount of compute resources required. If Requests
                                        is omitted for a container, it defaults to
                                        Limits if that is explicitly specified, otherwise
                                        to an implementation-defined value. The values
                                        of the map is string form of the ''quantity''
                                        k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go'
                                      type: object
                                  type: object
                                volumeMounts:
                                  description: Volume to mount into the container's
                                    filesystem. Only supports SecretVolumeSources.
                                  items:
                                    properties:
                                      mountPath:
                                        description: Path within the container at
                                          which the volume should be mounted.  Must
                                          not contain ':'.
                                        type: string
                                      name:
                                        description: This must match the Name of a
                                          Volume.
                                        type: string
                                    required:
                                    - mountPath
                                    - name
                                    type: object
                                  type: array
                                workingDir:
                                  description: Container's working directory. If not
                                    specified, the container runtime's default will
                                    be used, which might be configured in the container
                                    image. Deprecated
                                  type: string
                              required:
                              - image
                              type: object
                            type: array
                          serviceAccountName:
                            description: Email address of the IAM service account
                              associated with the revision of the service. The service
                              account represents the identity of the running revision,
                              and determines what permissions the revision has. If
                              not provided, the revision will use the project's default
                              service account.
                            type: string
                          servingState:
                            description: ServingState holds a value describing the
                              state the resources are in for this Revision. It is
                              expected that the system will manipulate this based
                              on routability and load. Deprecated
                            type: string
                          timeoutSeconds:
                            description: TimeoutSeconds holds the max duration the
                              instance is allowed for responding to a request.
                            format: int64
                            type: integer
                          volumes:
                            description: Volume represents a named volume in a container.
                            items:
                              properties:
                                name:
                                  description: Volume's name.
                                  type: string
                                secret:
                                  description: The secret's value will be presented
                                    as the content of a file whose name is defined
                                    in the item path. If no items are defined, the
                                    name of the file is the secret_name.
                                  properties:
                                    defaultMode:
                                      description: Mode bits to use on created files
                                        by default. Must be a value between 0000 and
                                        0777. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int64
                                      type: integer
                                    items:
                                      description: If unspecified, the volume will
                                        expose a file whose name is the secret_name.
                                        If specified, the key will be used as the
                                        version to fetch from Cloud Secret Manager
                                        and the path will be the name of the file
                                        exposed in the volume. When items are defined,
                                        they must specify a key and a path.
                                      items:
                                        properties:
                                          key:
                                            description: The Cloud Secret Manager
                                              secret version. Can be 'latest' for
                                              the latest value or an integer for a
                                              specific version.
                                            type: string
                                          mode:
                                            description: Mode bits to use on this
                                              file, must be a value between 0000 and
                                              0777. If not specified, the volume defaultMode
                                              will be used. This might be in conflict
                                              with other options that affect the file
                                              mode, like fsGroup, and the result can
                                              be other mode bits set.
                                            format: int64
                                            type: integer
                                          path:
                                            description: The relative path of the
                                              file to map the key to. May not be an
                                              absolute path. May not contain the path
                                              element '..'. May not start with the
                                              string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    secretName:
                                      description: 'The name of the secret in Cloud
                                        Secret Manager. By default, the secret is
                                        assumed to be in the same project. If the
                                        secret is in another project, you must define
                                        an alias. An alias definition has the form:
                                        <alias>:projects/<project-id|project-number>/secrets/<secret-name>.
                                        If multiple alias definitions are needed,
                                        they must be separated by commas. The alias
                                        definitions must be set on the run.googleapis.com/secrets
                                        annotation.'
                                      type: string
                                  required:
                                  - secretName
                                  type: object
                              required:
                              - name
                              - secret
                              type: object
                            type: array
                        type: object
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  traffic:
                    description: Traffic specifies how to distribute traffic over
                      a collection of Knative Revisions and Configurations
                    items:
                      properties:
                        latestRevision:
                          description: LatestRevision may be optionally provided to
                            indicate that the latest ready Revision of the Configuration
                            should be used for this traffic target. When provided
                            LatestRevision must be true if RevisionName is empty;
                            it must be false when RevisionName is non-empty.
                          type: boolean
                        percent:
                          description: Percent specifies percent of the traffic to
                            this Revision or Configuration.
                          format: int64
                          type: integer
                        revisionName:
                          description: RevisionName of a specific revision to which
                            to send this portion of traffic.
                          type: string
                      required:
                      - percent
                      type: object
                    type: array
                required:
                - location
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
