apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: attestors.binaryauthorization.google.kubeform.com
spec:
  group: binaryauthorization.google.kubeform.com
  names:
    kind: Attestor
    listKind: AttestorList
    plural: attestors
    singular: attestor
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  attestationAuthorityNote:
                    description: A Container Analysis ATTESTATION_AUTHORITY Note,
                      created by the user.
                    properties:
                      delegationServiceAccountEmail:
                        description: This field will contain the service account email
                          address that this Attestor will use as the principal when
                          querying Container Analysis. Attestor administrators must
                          grant this service account the IAM role needed to read attestations
                          from the noteReference in Container Analysis (containeranalysis.notes.occurrences.viewer).
                          This email address is fixed for the lifetime of the Attestor,
                          but callers should not make any other assumptions about
                          the service account email; future versions may use an email
                          based on a different naming pattern.
                        type: string
                      noteReference:
                        description: The resource name of a ATTESTATION_AUTHORITY
                          Note, created by the user. If the Note is in a different
                          project from the Attestor, it should be specified in the
                          format 'projects/*/notes/*' (or the legacy 'providers/*/notes/*').
                          This field may not be updated. An attestation by this attestor
                          is stored as a Container Analysis ATTESTATION_AUTHORITY
                          Occurrence that names a container image and that links to
                          this Note.
                        type: string
                      publicKeys:
                        description: Public keys that verify attestations signed by
                          this attestor. This field may be updated. If this field
                          is non-empty, one of the specified public keys must verify
                          that an attestation was signed by this attestor for the
                          image specified in the admission request. If this field
                          is empty, this attestor always returns that no valid attestations
                          exist.
                        items:
                          properties:
                            ID:
                              description: The ID of this public key. Signatures verified
                                by BinAuthz must include the ID of the public key
                                that can be used to verify them, and that ID must
                                match the contents of this field exactly. Additional
                                restrictions on this field can be imposed based on
                                which public key type is encapsulated. See the documentation
                                on publicKey cases below for details.
                              type: string
                            asciiArmoredPgpPublicKey:
                              description: ASCII-armored representation of a PGP public
                                key, as the entire output by the command 'gpg --export
                                --armor foo@example.com' (either LF or CRLF line endings).
                                When using this field, id should be left blank. The
                                BinAuthz API handlers will calculate the ID and fill
                                it in automatically. BinAuthz computes this ID as
                                the OpenPGP RFC4880 V4 fingerprint, represented as
                                upper-case hex. If id is provided by the caller, it
                                will be overwritten by the API-calculated ID.
                              type: string
                            comment:
                              description: A descriptive comment. This field may be
                                updated.
                              type: string
                            pkixPublicKey:
                              description: "A raw PKIX SubjectPublicKeyInfo format
                                public key. \n NOTE: id may be explicitly provided
                                by the caller when using this type of public key,
                                but it MUST be a valid RFC3986 URI. If id is left
                                blank, a default one will be computed based on the
                                digest of the DER encoding of the public key."
                              properties:
                                publicKeyPem:
                                  description: A PEM-encoded public key, as described
                                    in 'https://tools.ietf.org/html/rfc7468#section-13'
                                  type: string
                                signatureAlgorithm:
                                  description: The signature algorithm used to verify
                                    a message against a signature using this key.
                                    These signature algorithm must match the structure
                                    and any object identifiers encoded in publicKeyPem
                                    (i.e. this algorithm must match that of the public
                                    key).
                                  type: string
                              type: object
                          type: object
                        type: array
                    required:
                    - noteReference
                    type: object
                  description:
                    description: A descriptive comment. This field may be updated.
                      The field may be displayed in chooser dialogs.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource name.
                    type: string
                  project:
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - attestationAuthorityNote
                - name
                type: object
              state:
                properties:
                  attestationAuthorityNote:
                    description: A Container Analysis ATTESTATION_AUTHORITY Note,
                      created by the user.
                    properties:
                      delegationServiceAccountEmail:
                        description: This field will contain the service account email
                          address that this Attestor will use as the principal when
                          querying Container Analysis. Attestor administrators must
                          grant this service account the IAM role needed to read attestations
                          from the noteReference in Container Analysis (containeranalysis.notes.occurrences.viewer).
                          This email address is fixed for the lifetime of the Attestor,
                          but callers should not make any other assumptions about
                          the service account email; future versions may use an email
                          based on a different naming pattern.
                        type: string
                      noteReference:
                        description: The resource name of a ATTESTATION_AUTHORITY
                          Note, created by the user. If the Note is in a different
                          project from the Attestor, it should be specified in the
                          format 'projects/*/notes/*' (or the legacy 'providers/*/notes/*').
                          This field may not be updated. An attestation by this attestor
                          is stored as a Container Analysis ATTESTATION_AUTHORITY
                          Occurrence that names a container image and that links to
                          this Note.
                        type: string
                      publicKeys:
                        description: Public keys that verify attestations signed by
                          this attestor. This field may be updated. If this field
                          is non-empty, one of the specified public keys must verify
                          that an attestation was signed by this attestor for the
                          image specified in the admission request. If this field
                          is empty, this attestor always returns that no valid attestations
                          exist.
                        items:
                          properties:
                            ID:
                              description: The ID of this public key. Signatures verified
                                by BinAuthz must include the ID of the public key
                                that can be used to verify them, and that ID must
                                match the contents of this field exactly. Additional
                                restrictions on this field can be imposed based on
                                which public key type is encapsulated. See the documentation
                                on publicKey cases below for details.
                              type: string
                            asciiArmoredPgpPublicKey:
                              description: ASCII-armored representation of a PGP public
                                key, as the entire output by the command 'gpg --export
                                --armor foo@example.com' (either LF or CRLF line endings).
                                When using this field, id should be left blank. The
                                BinAuthz API handlers will calculate the ID and fill
                                it in automatically. BinAuthz computes this ID as
                                the OpenPGP RFC4880 V4 fingerprint, represented as
                                upper-case hex. If id is provided by the caller, it
                                will be overwritten by the API-calculated ID.
                              type: string
                            comment:
                              description: A descriptive comment. This field may be
                                updated.
                              type: string
                            pkixPublicKey:
                              description: "A raw PKIX SubjectPublicKeyInfo format
                                public key. \n NOTE: id may be explicitly provided
                                by the caller when using this type of public key,
                                but it MUST be a valid RFC3986 URI. If id is left
                                blank, a default one will be computed based on the
                                digest of the DER encoding of the public key."
                              properties:
                                publicKeyPem:
                                  description: A PEM-encoded public key, as described
                                    in 'https://tools.ietf.org/html/rfc7468#section-13'
                                  type: string
                                signatureAlgorithm:
                                  description: The signature algorithm used to verify
                                    a message against a signature using this key.
                                    These signature algorithm must match the structure
                                    and any object identifiers encoded in publicKeyPem
                                    (i.e. this algorithm must match that of the public
                                    key).
                                  type: string
                              type: object
                          type: object
                        type: array
                    required:
                    - noteReference
                    type: object
                  description:
                    description: A descriptive comment. This field may be updated.
                      The field may be displayed in chooser dialogs.
                    type: string
                  id:
                    type: string
                  name:
                    description: The resource name.
                    type: string
                  project:
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - attestationAuthorityNote
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
