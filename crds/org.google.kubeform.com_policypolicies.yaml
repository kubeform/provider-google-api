apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: policypolicies.org.google.kubeform.com
spec:
  group: org.google.kubeform.com
  names:
    kind: PolicyPolicy
    listKind: PolicyPolicyList
    plural: policypolicies
    singular: policypolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  id:
                    type: string
                  name:
                    description: 'Immutable. The resource name of the Policy. Must
                      be one of the following forms, where constraint_name is the
                      name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}`
                      * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}`
                      For example, "projects/123/policies/compute.disableSerialPortAccess".
                      Note: `projects/{project_id}/policies/{constraint_name}` is
                      also an acceptable name for API requests, but responses will
                      return the name using the equivalent project number.'
                    type: string
                  parent:
                    description: The parent of the resource.
                    type: string
                  spec:
                    description: Basic information about the Organization Policy.
                    properties:
                      etag:
                        description: An opaque tag indicating the current version
                          of the `Policy`, used for concurrency control. This field
                          is ignored if used in a `CreatePolicy` request. When the
                          `Policy` is returned from either a `GetPolicy` or a `ListPolicies`
                          request, this `etag` indicates the version of the current
                          `Policy` to use when executing a read-modify-write loop.
                          When the `Policy` is returned from a `GetEffectivePolicy`
                          request, the `etag` will be unset.
                        type: string
                      inheritFromParent:
                        description: Determines the inheritance behavior for this
                          `Policy`. If `inherit_from_parent` is true, PolicyRules
                          set higher up in the hierarchy (up to the closest root)
                          are inherited and present in the effective policy. If it
                          is false, then no rules are inherited, and this Policy becomes
                          the new root for evaluation. This field can be set only
                          for Policies which configure list constraints.
                        type: boolean
                      reset:
                        description: Ignores policies set above this resource and
                          restores the `constraint_default` enforcement behavior of
                          the specific `Constraint` at this resource. This field can
                          be set in policies for either list or boolean constraints.
                          If set, `rules` must be empty and `inherit_from_parent`
                          must be set to false.
                        type: boolean
                      rules:
                        description: 'Up to 10 PolicyRules are allowed. In Policies
                          for boolean constraints, the following requirements apply:
                          - There must be one and only one PolicyRule where condition
                          is unset. - BooleanPolicyRules with conditions must set
                          `enforced` to the opposite of the PolicyRule without a condition.
                          - During policy evaluation, PolicyRules with conditions
                          that are true for a target resource take precedence.'
                        items:
                          properties:
                            allowAll:
                              description: Setting this to true means that all values
                                are allowed. This field can be set only in Policies
                                for list constraints.
                              type: string
                            condition:
                              description: 'A condition which determines whether this
                                rule is used in the evaluation of the policy. When
                                set, the `expression` field in the `Expr'' must include
                                from 1 to 10 subexpressions, joined by the "||" or
                                "&&" operators. Each subexpression must be of the
                                form "resource.matchTag(''/tag_key_short_name, ''tag_value_short_name'')".
                                or "resource.matchTagId(''tagKeys/key_id'', ''tagValues/value_id'')".
                                where key_name and value_name are the resource names
                                for Label Keys and Values. These names are available
                                from the Tag Manager Service. An example expression
                                is: "resource.matchTag(''123456789/environment, ''prod'')".
                                or "resource.matchTagId(''tagKeys/123'', ''tagValues/456'')".'
                              properties:
                                description:
                                  description: Optional. Description of the expression.
                                    This is a longer text which describes the expression,
                                    e.g. when hovered over it in a UI.
                                  type: string
                                expression:
                                  description: Textual representation of an expression
                                    in Common Expression Language syntax.
                                  type: string
                                location:
                                  description: Optional. String indicating the location
                                    of the expression for error reporting, e.g. a
                                    file name and a position in the file.
                                  type: string
                                title:
                                  description: Optional. Title for the expression,
                                    i.e. a short string describing its purpose. This
                                    can be used e.g. in UIs which allow to enter the
                                    expression.
                                  type: string
                              type: object
                            denyAll:
                              description: Setting this to true means that all values
                                are denied. This field can be set only in Policies
                                for list constraints.
                              type: string
                            enforce:
                              description: If `true`, then the `Policy` is enforced.
                                If `false`, then any configuration is acceptable.
                                This field can be set only in Policies for boolean
                                constraints.
                              type: string
                            values:
                              description: List of values to be used for this PolicyRule.
                                This field can be set only in Policies for list constraints.
                              properties:
                                allowedValues:
                                  description: List of values allowed at this resource.
                                  items:
                                    type: string
                                  type: array
                                deniedValues:
                                  description: List of values denied at this resource.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      updateTime:
                        description: Output only. The time stamp this was previously
                          updated. This represents the last time a call to `CreatePolicy`
                          or `UpdatePolicy` was made for that `Policy`.
                        type: string
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - parent
                type: object
              state:
                properties:
                  id:
                    type: string
                  name:
                    description: 'Immutable. The resource name of the Policy. Must
                      be one of the following forms, where constraint_name is the
                      name of the constraint which this Policy configures: * `projects/{project_number}/policies/{constraint_name}`
                      * `folders/{folder_id}/policies/{constraint_name}` * `organizations/{organization_id}/policies/{constraint_name}`
                      For example, "projects/123/policies/compute.disableSerialPortAccess".
                      Note: `projects/{project_id}/policies/{constraint_name}` is
                      also an acceptable name for API requests, but responses will
                      return the name using the equivalent project number.'
                    type: string
                  parent:
                    description: The parent of the resource.
                    type: string
                  spec:
                    description: Basic information about the Organization Policy.
                    properties:
                      etag:
                        description: An opaque tag indicating the current version
                          of the `Policy`, used for concurrency control. This field
                          is ignored if used in a `CreatePolicy` request. When the
                          `Policy` is returned from either a `GetPolicy` or a `ListPolicies`
                          request, this `etag` indicates the version of the current
                          `Policy` to use when executing a read-modify-write loop.
                          When the `Policy` is returned from a `GetEffectivePolicy`
                          request, the `etag` will be unset.
                        type: string
                      inheritFromParent:
                        description: Determines the inheritance behavior for this
                          `Policy`. If `inherit_from_parent` is true, PolicyRules
                          set higher up in the hierarchy (up to the closest root)
                          are inherited and present in the effective policy. If it
                          is false, then no rules are inherited, and this Policy becomes
                          the new root for evaluation. This field can be set only
                          for Policies which configure list constraints.
                        type: boolean
                      reset:
                        description: Ignores policies set above this resource and
                          restores the `constraint_default` enforcement behavior of
                          the specific `Constraint` at this resource. This field can
                          be set in policies for either list or boolean constraints.
                          If set, `rules` must be empty and `inherit_from_parent`
                          must be set to false.
                        type: boolean
                      rules:
                        description: 'Up to 10 PolicyRules are allowed. In Policies
                          for boolean constraints, the following requirements apply:
                          - There must be one and only one PolicyRule where condition
                          is unset. - BooleanPolicyRules with conditions must set
                          `enforced` to the opposite of the PolicyRule without a condition.
                          - During policy evaluation, PolicyRules with conditions
                          that are true for a target resource take precedence.'
                        items:
                          properties:
                            allowAll:
                              description: Setting this to true means that all values
                                are allowed. This field can be set only in Policies
                                for list constraints.
                              type: string
                            condition:
                              description: 'A condition which determines whether this
                                rule is used in the evaluation of the policy. When
                                set, the `expression` field in the `Expr'' must include
                                from 1 to 10 subexpressions, joined by the "||" or
                                "&&" operators. Each subexpression must be of the
                                form "resource.matchTag(''/tag_key_short_name, ''tag_value_short_name'')".
                                or "resource.matchTagId(''tagKeys/key_id'', ''tagValues/value_id'')".
                                where key_name and value_name are the resource names
                                for Label Keys and Values. These names are available
                                from the Tag Manager Service. An example expression
                                is: "resource.matchTag(''123456789/environment, ''prod'')".
                                or "resource.matchTagId(''tagKeys/123'', ''tagValues/456'')".'
                              properties:
                                description:
                                  description: Optional. Description of the expression.
                                    This is a longer text which describes the expression,
                                    e.g. when hovered over it in a UI.
                                  type: string
                                expression:
                                  description: Textual representation of an expression
                                    in Common Expression Language syntax.
                                  type: string
                                location:
                                  description: Optional. String indicating the location
                                    of the expression for error reporting, e.g. a
                                    file name and a position in the file.
                                  type: string
                                title:
                                  description: Optional. Title for the expression,
                                    i.e. a short string describing its purpose. This
                                    can be used e.g. in UIs which allow to enter the
                                    expression.
                                  type: string
                              type: object
                            denyAll:
                              description: Setting this to true means that all values
                                are denied. This field can be set only in Policies
                                for list constraints.
                              type: string
                            enforce:
                              description: If `true`, then the `Policy` is enforced.
                                If `false`, then any configuration is acceptable.
                                This field can be set only in Policies for boolean
                                constraints.
                              type: string
                            values:
                              description: List of values to be used for this PolicyRule.
                                This field can be set only in Policies for list constraints.
                              properties:
                                allowedValues:
                                  description: List of values allowed at this resource.
                                  items:
                                    type: string
                                  type: array
                                deniedValues:
                                  description: List of values denied at this resource.
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      updateTime:
                        description: Output only. The time stamp this was previously
                          updated. This represents the last time a call to `CreatePolicy`
                          or `UpdatePolicy` was made for that `Policy`.
                        type: string
                    type: object
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - name
                - parent
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
