apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: routernats.compute.google.kubeform.com
spec:
  group: compute.google.kubeform.com
  names:
    kind: RouterNAT
    listKind: RouterNATList
    plural: routernats
    singular: routernat
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  drainNATIPS:
                    description: A list of URLs of the IP resources to be drained.
                      These IPs must be valid static external IPs that have been assigned
                      to the NAT.
                    items:
                      type: string
                    type: array
                  enableEndpointIndependentMapping:
                    description: Specifies if endpoint independent mapping is enabled.
                      This is enabled by default. For more information see the [official
                      documentation](https://cloud.google.com/nat/docs/overview#specs-rfcs).
                    type: boolean
                  icmpIdleTimeoutSec:
                    description: Timeout (in seconds) for ICMP connections. Defaults
                      to 30s if not set.
                    format: int64
                    type: integer
                  id:
                    type: string
                  logConfig:
                    description: Configuration for logging on NAT
                    properties:
                      enable:
                        description: Indicates whether or not to export logs.
                        type: boolean
                      filter:
                        description: 'Specifies the desired filtering of logs on this
                          NAT. Possible values: ["ERRORS_ONLY", "TRANSLATIONS_ONLY",
                          "ALL"]'
                        type: string
                    required:
                    - enable
                    - filter
                    type: object
                  minPortsPerVm:
                    description: Minimum number of ports allocated to a VM from this
                      NAT.
                    format: int64
                    type: integer
                  name:
                    description: Name of the NAT service. The name must be 1-63 characters
                      long and comply with RFC1035.
                    type: string
                  natIPAllocateOption:
                    description: 'How external IPs should be allocated for this NAT.
                      Valid values are ''AUTO_ONLY'' for only allowing NAT IPs allocated
                      by Google Cloud Platform, or ''MANUAL_ONLY'' for only user-allocated
                      NAT IP addresses. Possible values: ["MANUAL_ONLY", "AUTO_ONLY"]'
                    type: string
                  natIPS:
                    description: Self-links of NAT IPs. Only valid if natIpAllocateOption
                      is set to MANUAL_ONLY.
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  region:
                    description: Region where the router and NAT reside.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this NAT will
                      be configured.
                    type: string
                  sourceSubnetworkIPRangesToNAT:
                    description: 'How NAT should be configured per Subnetwork. If
                      ''ALL_SUBNETWORKS_ALL_IP_RANGES'', all of the IP ranges in every
                      Subnetwork are allowed to Nat. If ''ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES'',
                      all of the primary IP ranges in every Subnetwork are allowed
                      to Nat. ''LIST_OF_SUBNETWORKS'': A list of Subnetworks are allowed
                      to Nat (specified in the field subnetwork below). Note that
                      if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES,
                      then there should not be any other RouterNat section in any
                      Router for this network in this region. Possible values: ["ALL_SUBNETWORKS_ALL_IP_RANGES",
                      "ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES", "LIST_OF_SUBNETWORKS"]'
                    type: string
                  subnetwork:
                    description: One or more subnetwork NAT configurations. Only used
                      if 'source_subnetwork_ip_ranges_to_nat' is set to 'LIST_OF_SUBNETWORKS'
                    items:
                      properties:
                        name:
                          description: Self-link of subnetwork to NAT
                          type: string
                        secondaryIPRangeNames:
                          description: List of the secondary ranges of the subnetwork
                            that are allowed to use NAT. This can be populated only
                            if 'LIST_OF_SECONDARY_IP_RANGES' is one of the values
                            in sourceIpRangesToNat
                          items:
                            type: string
                          type: array
                        sourceIPRangesToNAT:
                          description: 'List of options for which source IPs in the
                            subnetwork should have NAT enabled. Supported values include:
                            ''ALL_IP_RANGES'', ''LIST_OF_SECONDARY_IP_RANGES'', ''PRIMARY_IP_RANGE''.'
                          items:
                            type: string
                          minItems: 1
                          type: array
                      required:
                      - name
                      - sourceIPRangesToNAT
                      type: object
                    type: array
                  tcpEstablishedIdleTimeoutSec:
                    description: Timeout (in seconds) for TCP established connections.
                      Defaults to 1200s if not set.
                    format: int64
                    type: integer
                  tcpTransitoryIdleTimeoutSec:
                    description: Timeout (in seconds) for TCP transitory connections.
                      Defaults to 30s if not set.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  udpIdleTimeoutSec:
                    description: Timeout (in seconds) for UDP connections. Defaults
                      to 30s if not set.
                    format: int64
                    type: integer
                required:
                - name
                - natIPAllocateOption
                - router
                - sourceSubnetworkIPRangesToNAT
                type: object
              state:
                properties:
                  drainNATIPS:
                    description: A list of URLs of the IP resources to be drained.
                      These IPs must be valid static external IPs that have been assigned
                      to the NAT.
                    items:
                      type: string
                    type: array
                  enableEndpointIndependentMapping:
                    description: Specifies if endpoint independent mapping is enabled.
                      This is enabled by default. For more information see the [official
                      documentation](https://cloud.google.com/nat/docs/overview#specs-rfcs).
                    type: boolean
                  icmpIdleTimeoutSec:
                    description: Timeout (in seconds) for ICMP connections. Defaults
                      to 30s if not set.
                    format: int64
                    type: integer
                  id:
                    type: string
                  logConfig:
                    description: Configuration for logging on NAT
                    properties:
                      enable:
                        description: Indicates whether or not to export logs.
                        type: boolean
                      filter:
                        description: 'Specifies the desired filtering of logs on this
                          NAT. Possible values: ["ERRORS_ONLY", "TRANSLATIONS_ONLY",
                          "ALL"]'
                        type: string
                    required:
                    - enable
                    - filter
                    type: object
                  minPortsPerVm:
                    description: Minimum number of ports allocated to a VM from this
                      NAT.
                    format: int64
                    type: integer
                  name:
                    description: Name of the NAT service. The name must be 1-63 characters
                      long and comply with RFC1035.
                    type: string
                  natIPAllocateOption:
                    description: 'How external IPs should be allocated for this NAT.
                      Valid values are ''AUTO_ONLY'' for only allowing NAT IPs allocated
                      by Google Cloud Platform, or ''MANUAL_ONLY'' for only user-allocated
                      NAT IP addresses. Possible values: ["MANUAL_ONLY", "AUTO_ONLY"]'
                    type: string
                  natIPS:
                    description: Self-links of NAT IPs. Only valid if natIpAllocateOption
                      is set to MANUAL_ONLY.
                    items:
                      type: string
                    type: array
                  project:
                    type: string
                  region:
                    description: Region where the router and NAT reside.
                    type: string
                  router:
                    description: The name of the Cloud Router in which this NAT will
                      be configured.
                    type: string
                  sourceSubnetworkIPRangesToNAT:
                    description: 'How NAT should be configured per Subnetwork. If
                      ''ALL_SUBNETWORKS_ALL_IP_RANGES'', all of the IP ranges in every
                      Subnetwork are allowed to Nat. If ''ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES'',
                      all of the primary IP ranges in every Subnetwork are allowed
                      to Nat. ''LIST_OF_SUBNETWORKS'': A list of Subnetworks are allowed
                      to Nat (specified in the field subnetwork below). Note that
                      if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES,
                      then there should not be any other RouterNat section in any
                      Router for this network in this region. Possible values: ["ALL_SUBNETWORKS_ALL_IP_RANGES",
                      "ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES", "LIST_OF_SUBNETWORKS"]'
                    type: string
                  subnetwork:
                    description: One or more subnetwork NAT configurations. Only used
                      if 'source_subnetwork_ip_ranges_to_nat' is set to 'LIST_OF_SUBNETWORKS'
                    items:
                      properties:
                        name:
                          description: Self-link of subnetwork to NAT
                          type: string
                        secondaryIPRangeNames:
                          description: List of the secondary ranges of the subnetwork
                            that are allowed to use NAT. This can be populated only
                            if 'LIST_OF_SECONDARY_IP_RANGES' is one of the values
                            in sourceIpRangesToNat
                          items:
                            type: string
                          type: array
                        sourceIPRangesToNAT:
                          description: 'List of options for which source IPs in the
                            subnetwork should have NAT enabled. Supported values include:
                            ''ALL_IP_RANGES'', ''LIST_OF_SECONDARY_IP_RANGES'', ''PRIMARY_IP_RANGE''.'
                          items:
                            type: string
                          minItems: 1
                          type: array
                      required:
                      - name
                      - sourceIPRangesToNAT
                      type: object
                    type: array
                  tcpEstablishedIdleTimeoutSec:
                    description: Timeout (in seconds) for TCP established connections.
                      Defaults to 1200s if not set.
                    format: int64
                    type: integer
                  tcpTransitoryIdleTimeoutSec:
                    description: Timeout (in seconds) for TCP transitory connections.
                      Defaults to 30s if not set.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  udpIdleTimeoutSec:
                    description: Timeout (in seconds) for UDP connections. Defaults
                      to 30s if not set.
                    format: int64
                    type: integer
                required:
                - name
                - natIPAllocateOption
                - router
                - sourceSubnetworkIPRangesToNAT
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
