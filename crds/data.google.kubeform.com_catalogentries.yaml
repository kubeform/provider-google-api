apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: catalogentries.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogEntry
    listKind: CatalogEntryList
    plural: catalogentries
    singular: catalogentry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  bigqueryDateShardedSpec:
                    description: 'Specification for a group of BigQuery tables with
                      name pattern [prefix]YYYYMMDD. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.'
                    items:
                      properties:
                        dataset:
                          description: The Data Catalog resource name of the dataset
                            entry the current table belongs to, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
                          type: string
                        shardCount:
                          description: Total number of shards.
                          format: int64
                          type: integer
                        tablePrefix:
                          description: The table name prefix of the shards. The name
                            of any given shard is [tablePrefix]YYYYMMDD, for example,
                            for shard MyTable20180101, the tablePrefix is MyTable.
                          type: string
                      type: object
                    type: array
                  bigqueryTableSpec:
                    description: Specification that applies to a BigQuery table. This
                      is only valid on entries of type TABLE.
                    items:
                      properties:
                        tableSourceType:
                          description: The table source type.
                          type: string
                        tableSpec:
                          description: Spec of a BigQuery table. This field should
                            only be populated if tableSourceType is BIGQUERY_TABLE.
                          items:
                            properties:
                              groupedEntry:
                                description: If the table is a dated shard, i.e.,
                                  with name pattern [prefix]YYYYMMDD, groupedEntry
                                  is the Data Catalog resource name of the date sharded
                                  grouped entry, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}.
                                  Otherwise, groupedEntry is empty.
                                type: string
                            type: object
                          type: array
                        viewSpec:
                          description: Table view specification. This field should
                            only be populated if tableSourceType is BIGQUERY_VIEW.
                          items:
                            properties:
                              viewQuery:
                                description: The query that defines the table view.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: Entry description, which can consist of several sentences
                      or paragraphs that describe entry contents.
                    type: string
                  displayName:
                    description: Display information such as title and description.
                      A short name to identify the entry, for example, "Analytics
                      Data - Jan 2011".
                    type: string
                  entryGroup:
                    description: The name of the entry group this entry is in.
                    type: string
                  entryID:
                    description: The id of the entry to create.
                    type: string
                  gcsFilesetSpec:
                    description: Specification that applies to a Cloud Storage fileset.
                      This is only valid on entries of type FILESET.
                    properties:
                      filePatterns:
                        description: "Patterns to identify a set of files in Google
                          Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
                          for more information. Note that bucket wildcards are currently
                          not supported. Examples of valid filePatterns: \n * gs://bucket_name/dir/*:
                          matches all files within bucket_name/dir directory. * gs://bucket_name/dir/**:
                          matches all files in bucket_name/dir spanning all subdirectories.
                          * gs://bucket_name/file*: matches files prefixed by file
                          in bucket_name * gs://bucket_name/??.txt: matches files
                          with two characters followed by .txt in bucket_name * gs://bucket_name/[aeiou].txt:
                          matches files that contain a single vowel character followed
                          by .txt in bucket_name * gs://bucket_name/[a-m].txt: matches
                          files that contain a, b, ... or m followed by .txt in bucket_name
                          * gs://bucket_name/a/*/b: matches all files in bucket_name
                          that match a/*/b pattern, such as a/c/b, a/d/b * gs://another_bucket/a.txt:
                          matches gs://another_bucket/a.txt"
                        items:
                          type: string
                        type: array
                      sampleGcsFileSpecs:
                        description: Sample files contained in this fileset, not all
                          files contained in this fileset are represented here.
                        items:
                          properties:
                            filePath:
                              description: The full file path
                              type: string
                            sizeBytes:
                              description: The size of the file, in bytes.
                              format: int64
                              type: integer
                          type: object
                        type: array
                    required:
                    - filePatterns
                    type: object
                  id:
                    type: string
                  integratedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog integrates with, such as BigQuery or Pub/Sub.
                    type: string
                  linkedResource:
                    description: 'The resource this metadata entry refers to. For
                      Google Cloud Platform resources, linkedResource is the full
                      name of the resource. For example, the linkedResource for a
                      table resource from BigQuery is: //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
                      Output only when Entry is of type in the EntryType enum. For
                      entries with userSpecifiedType, this field is optional and defaults
                      to an empty string.'
                    type: string
                  name:
                    description: 'The Data Catalog resource name of the entry in URL
                      format. Example: projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}.
                      Note that this Entry and its child resources may not actually
                      be stored in the location in this name.'
                    type: string
                  schema:
                    description: Schema of the entry (e.g. BigQuery, GoogleSQL, Avro
                      schema), as a json string. An entry might not have any schema
                      attached to it. See https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
                      for what fields this schema can contain.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: 'The type of the entry. Only used for Entries with
                      types in the EntryType enum. Currently, only FILESET enum value
                      is allowed. All other entries created through Data Catalog must
                      use userSpecifiedType. Possible values: ["FILESET"]'
                    type: string
                  userSpecifiedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog does not integrate with. userSpecifiedSystem strings
                      must begin with a letter or underscore and can only contain
                      letters, numbers, and underscores; are case insensitive; must
                      be at least 1 character and at most 64 characters long.
                    type: string
                  userSpecifiedType:
                    description: Entry type if it does not fit any of the input-allowed
                      values listed in EntryType enum above. When creating an entry,
                      users should check the enum values first, if nothing matches
                      the entry to be created, then provide a custom value, for example
                      "my_special_type". userSpecifiedType strings must begin with
                      a letter or underscore and can only contain letters, numbers,
                      and underscores; are case insensitive; must be at least 1 character
                      and at most 64 characters long.
                    type: string
                required:
                - entryGroup
                - entryID
                type: object
              state:
                properties:
                  bigqueryDateShardedSpec:
                    description: 'Specification for a group of BigQuery tables with
                      name pattern [prefix]YYYYMMDD. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding.'
                    items:
                      properties:
                        dataset:
                          description: The Data Catalog resource name of the dataset
                            entry the current table belongs to, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}
                          type: string
                        shardCount:
                          description: Total number of shards.
                          format: int64
                          type: integer
                        tablePrefix:
                          description: The table name prefix of the shards. The name
                            of any given shard is [tablePrefix]YYYYMMDD, for example,
                            for shard MyTable20180101, the tablePrefix is MyTable.
                          type: string
                      type: object
                    type: array
                  bigqueryTableSpec:
                    description: Specification that applies to a BigQuery table. This
                      is only valid on entries of type TABLE.
                    items:
                      properties:
                        tableSourceType:
                          description: The table source type.
                          type: string
                        tableSpec:
                          description: Spec of a BigQuery table. This field should
                            only be populated if tableSourceType is BIGQUERY_TABLE.
                          items:
                            properties:
                              groupedEntry:
                                description: If the table is a dated shard, i.e.,
                                  with name pattern [prefix]YYYYMMDD, groupedEntry
                                  is the Data Catalog resource name of the date sharded
                                  grouped entry, for example, projects/{project_id}/locations/{location}/entrygroups/{entryGroupId}/entries/{entryId}.
                                  Otherwise, groupedEntry is empty.
                                type: string
                            type: object
                          type: array
                        viewSpec:
                          description: Table view specification. This field should
                            only be populated if tableSourceType is BIGQUERY_VIEW.
                          items:
                            properties:
                              viewQuery:
                                description: The query that defines the table view.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  description:
                    description: Entry description, which can consist of several sentences
                      or paragraphs that describe entry contents.
                    type: string
                  displayName:
                    description: Display information such as title and description.
                      A short name to identify the entry, for example, "Analytics
                      Data - Jan 2011".
                    type: string
                  entryGroup:
                    description: The name of the entry group this entry is in.
                    type: string
                  entryID:
                    description: The id of the entry to create.
                    type: string
                  gcsFilesetSpec:
                    description: Specification that applies to a Cloud Storage fileset.
                      This is only valid on entries of type FILESET.
                    properties:
                      filePatterns:
                        description: "Patterns to identify a set of files in Google
                          Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames)
                          for more information. Note that bucket wildcards are currently
                          not supported. Examples of valid filePatterns: \n * gs://bucket_name/dir/*:
                          matches all files within bucket_name/dir directory. * gs://bucket_name/dir/**:
                          matches all files in bucket_name/dir spanning all subdirectories.
                          * gs://bucket_name/file*: matches files prefixed by file
                          in bucket_name * gs://bucket_name/??.txt: matches files
                          with two characters followed by .txt in bucket_name * gs://bucket_name/[aeiou].txt:
                          matches files that contain a single vowel character followed
                          by .txt in bucket_name * gs://bucket_name/[a-m].txt: matches
                          files that contain a, b, ... or m followed by .txt in bucket_name
                          * gs://bucket_name/a/*/b: matches all files in bucket_name
                          that match a/*/b pattern, such as a/c/b, a/d/b * gs://another_bucket/a.txt:
                          matches gs://another_bucket/a.txt"
                        items:
                          type: string
                        type: array
                      sampleGcsFileSpecs:
                        description: Sample files contained in this fileset, not all
                          files contained in this fileset are represented here.
                        items:
                          properties:
                            filePath:
                              description: The full file path
                              type: string
                            sizeBytes:
                              description: The size of the file, in bytes.
                              format: int64
                              type: integer
                          type: object
                        type: array
                    required:
                    - filePatterns
                    type: object
                  id:
                    type: string
                  integratedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog integrates with, such as BigQuery or Pub/Sub.
                    type: string
                  linkedResource:
                    description: 'The resource this metadata entry refers to. For
                      Google Cloud Platform resources, linkedResource is the full
                      name of the resource. For example, the linkedResource for a
                      table resource from BigQuery is: //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId
                      Output only when Entry is of type in the EntryType enum. For
                      entries with userSpecifiedType, this field is optional and defaults
                      to an empty string.'
                    type: string
                  name:
                    description: 'The Data Catalog resource name of the entry in URL
                      format. Example: projects/{project_id}/locations/{location}/entryGroups/{entryGroupId}/entries/{entryId}.
                      Note that this Entry and its child resources may not actually
                      be stored in the location in this name.'
                    type: string
                  schema:
                    description: Schema of the entry (e.g. BigQuery, GoogleSQL, Avro
                      schema), as a json string. An entry might not have any schema
                      attached to it. See https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries#schema
                      for what fields this schema can contain.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  type:
                    description: 'The type of the entry. Only used for Entries with
                      types in the EntryType enum. Currently, only FILESET enum value
                      is allowed. All other entries created through Data Catalog must
                      use userSpecifiedType. Possible values: ["FILESET"]'
                    type: string
                  userSpecifiedSystem:
                    description: This field indicates the entry's source system that
                      Data Catalog does not integrate with. userSpecifiedSystem strings
                      must begin with a letter or underscore and can only contain
                      letters, numbers, and underscores; are case insensitive; must
                      be at least 1 character and at most 64 characters long.
                    type: string
                  userSpecifiedType:
                    description: Entry type if it does not fit any of the input-allowed
                      values listed in EntryType enum above. When creating an entry,
                      users should check the enum values first, if nothing matches
                      the entry to be created, then provide a custom value, for example
                      "my_special_type". userSpecifiedType strings must begin with
                      a letter or underscore and can only contain letters, numbers,
                      and underscores; are case insensitive; must be at least 1 character
                      and at most 64 characters long.
                    type: string
                required:
                - entryGroup
                - entryID
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
