apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: cxintents.dialogflow.google.kubeform.com
spec:
  group: dialogflow.google.kubeform.com
  names:
    kind: CxIntent
    listKind: CxIntentList
    plural: cxintents
    singular: cxintent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  description:
                    description: 'Human readable description for better understanding
                      an intent like its scope, content, result etc. Maximum character
                      limit: 140 characters.'
                    type: string
                  displayName:
                    description: The human-readable name of the intent, unique within
                      the agent.
                    type: string
                  id:
                    type: string
                  isFallback:
                    description: Indicates whether this is a fallback intent. Currently
                      only default fallback intent is allowed in the agent, which
                      is added upon agent creation. Adding training phrases to fallback
                      intent is useful in the case of requests that are mistakenly
                      matched, since training phrases assigned to fallback intents
                      act as negative examples that triggers no-match event.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'The key/value metadata to label an intent. Labels
                      can contain lowercase letters, digits and the symbols ''-''
                      and ''_''. International characters are allowed, including letters
                      from unicase alphabets. Keys must start with a letter. Keys
                      and values can be no longer than 63 characters and no more than
                      128 bytes. Prefix "sys-" is reserved for Dialogflow defined
                      labels. Currently allowed Dialogflow defined labels include:
                      * sys-head * sys-contextual The above labels do not require
                      value. "sys-head" means the intent is a head intent. "sys.contextual"
                      means the intent is a contextual intent. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  languageCode:
                    description: 'The language of the following fields in intent:
                      Intent.training_phrases.parts.text If not specified, the agent''s
                      default language is used. Many languages are supported. Note:
                      languages must be enabled in the agent before they can be used.'
                    type: string
                  name:
                    description: 'The unique identifier of the intent. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent
                      ID>.'
                    type: string
                  parameters:
                    description: The collection of parameters associated with the
                      intent.
                    items:
                      properties:
                        ID:
                          description: The unique identifier of the parameter. This
                            field is used by training phrases to annotate their parts.
                          type: string
                        entityType:
                          description: 'The entity type of the parameter. Format:
                            projects/-/locations/-/agents/-/entityTypes/<System Entity
                            Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date),
                            or projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/entityTypes/<Entity Type ID> for developer entity
                            types.'
                          type: string
                        isList:
                          description: Indicates whether the parameter represents
                            a list of values.
                          type: boolean
                        redact:
                          description: 'Indicates whether the parameter content should
                            be redacted in log. If redaction is enabled, the parameter
                            content will be replaced by parameter name during logging.
                            Note: the parameter content is subject to redaction if
                            either parameter level redaction or entity type level
                            redaction is enabled.'
                          type: boolean
                      required:
                      - ID
                      - entityType
                      type: object
                    type: array
                  parent:
                    description: 'The agent to create an intent for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>.'
                    type: string
                  priority:
                    description: The priority of this intent. Higher numbers represent
                      higher priorities. If the supplied value is unspecified or 0,
                      the service translates the value to 500,000, which corresponds
                      to the Normal priority in the console. If the supplied value
                      is negative, the intent is ignored in runtime detect intent
                      requests.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  trainingPhrases:
                    description: The collection of training phrases the agent is trained
                      on to identify the intent.
                    items:
                      properties:
                        ID:
                          description: The unique identifier of the training phrase.
                          type: string
                        parts:
                          description: 'The ordered list of training phrase parts.
                            The parts are concatenated in order to form the training
                            phrase. Note: The API does not automatically annotate
                            training phrases like the Dialogflow Console does. Note:
                            Do not forget to include whitespace at part boundaries,
                            so the training phrase is well formatted when the parts
                            are concatenated. If the training phrase does not need
                            to be annotated with parameters, you just need a single
                            part with only the Part.text field set. If you want to
                            annotate the training phrase, you must create multiple
                            parts, where the fields of each part are populated in
                            one of two ways: Part.text is set to a part of the phrase
                            that has no parameters. Part.text is set to a part of
                            the phrase that you want to annotate, and the parameterId
                            field is set.'
                          items:
                            properties:
                              parameterID:
                                description: The parameter used to annotate this part
                                  of the training phrase. This field is required for
                                  annotated parts of the training phrase.
                                type: string
                              text:
                                description: The text for this part.
                                type: string
                            required:
                            - text
                            type: object
                          type: array
                        repeatCount:
                          description: Indicates how many times this example was added
                            to the intent.
                          format: int64
                          type: integer
                      required:
                      - parts
                      type: object
                    type: array
                required:
                - displayName
                type: object
              state:
                properties:
                  description:
                    description: 'Human readable description for better understanding
                      an intent like its scope, content, result etc. Maximum character
                      limit: 140 characters.'
                    type: string
                  displayName:
                    description: The human-readable name of the intent, unique within
                      the agent.
                    type: string
                  id:
                    type: string
                  isFallback:
                    description: Indicates whether this is a fallback intent. Currently
                      only default fallback intent is allowed in the agent, which
                      is added upon agent creation. Adding training phrases to fallback
                      intent is useful in the case of requests that are mistakenly
                      matched, since training phrases assigned to fallback intents
                      act as negative examples that triggers no-match event.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: 'The key/value metadata to label an intent. Labels
                      can contain lowercase letters, digits and the symbols ''-''
                      and ''_''. International characters are allowed, including letters
                      from unicase alphabets. Keys must start with a letter. Keys
                      and values can be no longer than 63 characters and no more than
                      128 bytes. Prefix "sys-" is reserved for Dialogflow defined
                      labels. Currently allowed Dialogflow defined labels include:
                      * sys-head * sys-contextual The above labels do not require
                      value. "sys-head" means the intent is a head intent. "sys.contextual"
                      means the intent is a contextual intent. An object containing
                      a list of "key": value pairs. Example: { "name": "wrench", "mass":
                      "1.3kg", "count": "3" }.'
                    type: object
                  languageCode:
                    description: 'The language of the following fields in intent:
                      Intent.training_phrases.parts.text If not specified, the agent''s
                      default language is used. Many languages are supported. Note:
                      languages must be enabled in the agent before they can be used.'
                    type: string
                  name:
                    description: 'The unique identifier of the intent. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>/intents/<Intent
                      ID>.'
                    type: string
                  parameters:
                    description: The collection of parameters associated with the
                      intent.
                    items:
                      properties:
                        ID:
                          description: The unique identifier of the parameter. This
                            field is used by training phrases to annotate their parts.
                          type: string
                        entityType:
                          description: 'The entity type of the parameter. Format:
                            projects/-/locations/-/agents/-/entityTypes/<System Entity
                            Type ID> for system entity types (for example, projects/-/locations/-/agents/-/entityTypes/sys.date),
                            or projects/<Project ID>/locations/<Location ID>/agents/<Agent
                            ID>/entityTypes/<Entity Type ID> for developer entity
                            types.'
                          type: string
                        isList:
                          description: Indicates whether the parameter represents
                            a list of values.
                          type: boolean
                        redact:
                          description: 'Indicates whether the parameter content should
                            be redacted in log. If redaction is enabled, the parameter
                            content will be replaced by parameter name during logging.
                            Note: the parameter content is subject to redaction if
                            either parameter level redaction or entity type level
                            redaction is enabled.'
                          type: boolean
                      required:
                      - ID
                      - entityType
                      type: object
                    type: array
                  parent:
                    description: 'The agent to create an intent for. Format: projects/<Project
                      ID>/locations/<Location ID>/agents/<Agent ID>.'
                    type: string
                  priority:
                    description: The priority of this intent. Higher numbers represent
                      higher priorities. If the supplied value is unspecified or 0,
                      the service translates the value to 500,000, which corresponds
                      to the Normal priority in the console. If the supplied value
                      is negative, the intent is ignored in runtime detect intent
                      requests.
                    format: int64
                    type: integer
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  trainingPhrases:
                    description: The collection of training phrases the agent is trained
                      on to identify the intent.
                    items:
                      properties:
                        ID:
                          description: The unique identifier of the training phrase.
                          type: string
                        parts:
                          description: 'The ordered list of training phrase parts.
                            The parts are concatenated in order to form the training
                            phrase. Note: The API does not automatically annotate
                            training phrases like the Dialogflow Console does. Note:
                            Do not forget to include whitespace at part boundaries,
                            so the training phrase is well formatted when the parts
                            are concatenated. If the training phrase does not need
                            to be annotated with parameters, you just need a single
                            part with only the Part.text field set. If you want to
                            annotate the training phrase, you must create multiple
                            parts, where the fields of each part are populated in
                            one of two ways: Part.text is set to a part of the phrase
                            that has no parameters. Part.text is set to a part of
                            the phrase that you want to annotate, and the parameterId
                            field is set.'
                          items:
                            properties:
                              parameterID:
                                description: The parameter used to annotate this part
                                  of the training phrase. This field is required for
                                  annotated parts of the training phrase.
                                type: string
                              text:
                                description: The text for this part.
                                type: string
                            required:
                            - text
                            type: object
                          type: array
                        repeatCount:
                          description: Indicates how many times this example was added
                            to the intent.
                          format: int64
                          type: integer
                      required:
                      - parts
                      type: object
                    type: array
                required:
                - displayName
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
