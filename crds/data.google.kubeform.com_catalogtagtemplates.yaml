apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: catalogtagtemplates.data.google.kubeform.com
spec:
  group: data.google.kubeform.com
  names:
    kind: CatalogTagTemplate
    listKind: CatalogTagTemplateList
    plural: catalogtagtemplates
    singular: catalogtagtemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  displayName:
                    description: The display name for this template.
                    type: string
                  fields:
                    description: Set of tag template field IDs and the settings for
                      the field. This set is an exhaustive list of the allowed fields.
                      This set must contain at least one field and at most 500 fields.
                    items:
                      properties:
                        description:
                          description: A description for this field.
                          type: string
                        displayName:
                          description: The display name for this field.
                          type: string
                        fieldID:
                          type: string
                        isRequired:
                          description: Whether this is a required field. Defaults
                            to false.
                          type: boolean
                        name:
                          description: 'The resource name of the tag template field
                            in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}'
                          type: string
                        order:
                          description: The order of this field with respect to other
                            fields in this tag template. A higher value indicates
                            a more important field. The value can be negative. Multiple
                            fields can have the same order, and field orders within
                            a tag do not have to be sequential.
                          format: int64
                          type: integer
                        type:
                          description: The type of value this tag field can contain.
                          properties:
                            enumType:
                              description: Represents an enum type.  Exactly one of
                                'primitive_type' or 'enum_type' must be set
                              properties:
                                allowedValues:
                                  description: The set of allowed values for this
                                    enum. The display names of the values must be
                                    case-insensitively unique within this set. Currently,
                                    enum values can only be added to the list of allowed
                                    values. Deletion and renaming of enum values are
                                    not supported. Can have up to 500 allowed values.
                                  items:
                                    properties:
                                      displayName:
                                        description: The display name of the enum
                                          value.
                                        type: string
                                    required:
                                    - displayName
                                    type: object
                                  type: array
                              required:
                              - allowedValues
                              type: object
                            primitiveType:
                              description: 'Represents primitive types - string, bool
                                etc.  Exactly one of ''primitive_type'' or ''enum_type''
                                must be set Possible values: ["DOUBLE", "STRING",
                                "BOOL", "TIMESTAMP"]'
                              type: string
                          type: object
                      required:
                      - fieldID
                      - type
                      type: object
                    type: array
                  forceDelete:
                    description: This confirms the deletion of any possible tags using
                      this template. Must be set to true in order to delete the tag
                      template.
                    type: boolean
                  id:
                    type: string
                  name:
                    description: 'The resource name of the tag template in URL format.
                      Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}'
                    type: string
                  project:
                    type: string
                  region:
                    description: Template location region.
                    type: string
                  tagTemplateID:
                    description: The id of the tag template to create.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - fields
                - tagTemplateID
                type: object
              state:
                properties:
                  displayName:
                    description: The display name for this template.
                    type: string
                  fields:
                    description: Set of tag template field IDs and the settings for
                      the field. This set is an exhaustive list of the allowed fields.
                      This set must contain at least one field and at most 500 fields.
                    items:
                      properties:
                        description:
                          description: A description for this field.
                          type: string
                        displayName:
                          description: The display name for this field.
                          type: string
                        fieldID:
                          type: string
                        isRequired:
                          description: Whether this is a required field. Defaults
                            to false.
                          type: boolean
                        name:
                          description: 'The resource name of the tag template field
                            in URL format. Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}/fields/{field}'
                          type: string
                        order:
                          description: The order of this field with respect to other
                            fields in this tag template. A higher value indicates
                            a more important field. The value can be negative. Multiple
                            fields can have the same order, and field orders within
                            a tag do not have to be sequential.
                          format: int64
                          type: integer
                        type:
                          description: The type of value this tag field can contain.
                          properties:
                            enumType:
                              description: Represents an enum type.  Exactly one of
                                'primitive_type' or 'enum_type' must be set
                              properties:
                                allowedValues:
                                  description: The set of allowed values for this
                                    enum. The display names of the values must be
                                    case-insensitively unique within this set. Currently,
                                    enum values can only be added to the list of allowed
                                    values. Deletion and renaming of enum values are
                                    not supported. Can have up to 500 allowed values.
                                  items:
                                    properties:
                                      displayName:
                                        description: The display name of the enum
                                          value.
                                        type: string
                                    required:
                                    - displayName
                                    type: object
                                  type: array
                              required:
                              - allowedValues
                              type: object
                            primitiveType:
                              description: 'Represents primitive types - string, bool
                                etc.  Exactly one of ''primitive_type'' or ''enum_type''
                                must be set Possible values: ["DOUBLE", "STRING",
                                "BOOL", "TIMESTAMP"]'
                              type: string
                          type: object
                      required:
                      - fieldID
                      - type
                      type: object
                    type: array
                  forceDelete:
                    description: This confirms the deletion of any possible tags using
                      this template. Must be set to true in order to delete the tag
                      template.
                    type: boolean
                  id:
                    type: string
                  name:
                    description: 'The resource name of the tag template in URL format.
                      Example: projects/{project_id}/locations/{location}/tagTemplates/{tagTemplateId}'
                    type: string
                  project:
                    type: string
                  region:
                    description: Template location region.
                    type: string
                  tagTemplateID:
                    description: The id of the tag template to create.
                    type: string
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                required:
                - fields
                - tagTemplateID
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
