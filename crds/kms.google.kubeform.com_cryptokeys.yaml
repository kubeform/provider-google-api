apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: cryptokeys.kms.google.kubeform.com
spec:
  group: kms.google.kubeform.com
  names:
    kind: CryptoKey
    listKind: CryptoKeyList
    plural: cryptokeys
    singular: cryptokey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  id:
                    type: string
                  keyRing:
                    description: 'The KeyRing that this key belongs to. Format: ''''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''''.'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels with user-defined metadata to apply to this
                      resource.
                    type: object
                  name:
                    description: The resource name for the CryptoKey.
                    type: string
                  purpose:
                    description: 'The immutable purpose of this CryptoKey. See the
                      [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
                      for possible inputs. Default value: "ENCRYPT_DECRYPT" Possible
                      values: ["ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT"]'
                    type: string
                  rotationPeriod:
                    description: Every time this period passes, generate a new CryptoKeyVersion
                      and set it as the primary. The first rotation will take place
                      after the specified period. The rotation period has the format
                      of a decimal number with up to 9 fractional digits, followed
                      by the letter 's' (seconds). It must be greater than a day (ie,
                      86400).
                    type: string
                  selfLink:
                    description: The self link of the created KeyRing in the format
                      projects/{project}/locations/{location}/keyRings/{name}. Deprecated
                    type: string
                  skipInitialVersionCreation:
                    description: If set to true, the request will create a CryptoKey
                      without any CryptoKeyVersions. You must use the 'google_kms_key_ring_import_job'
                      resource to import the CryptoKeyVersion.
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  versionTemplate:
                    description: A template describing settings for new crypto key
                      versions.
                    properties:
                      algorithm:
                        description: The algorithm to use when creating a version
                          based on this template. See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm)
                          for possible inputs.
                        type: string
                      protectionLevel:
                        description: 'The protection level to use when creating a
                          version based on this template. Default value: "SOFTWARE"
                          Possible values: ["SOFTWARE", "HSM"]'
                        type: string
                    required:
                    - algorithm
                    type: object
                required:
                - keyRing
                - name
                type: object
              state:
                properties:
                  id:
                    type: string
                  keyRing:
                    description: 'The KeyRing that this key belongs to. Format: ''''projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}''''.'
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels with user-defined metadata to apply to this
                      resource.
                    type: object
                  name:
                    description: The resource name for the CryptoKey.
                    type: string
                  purpose:
                    description: 'The immutable purpose of this CryptoKey. See the
                      [purpose reference](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose)
                      for possible inputs. Default value: "ENCRYPT_DECRYPT" Possible
                      values: ["ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT"]'
                    type: string
                  rotationPeriod:
                    description: Every time this period passes, generate a new CryptoKeyVersion
                      and set it as the primary. The first rotation will take place
                      after the specified period. The rotation period has the format
                      of a decimal number with up to 9 fractional digits, followed
                      by the letter 's' (seconds). It must be greater than a day (ie,
                      86400).
                    type: string
                  selfLink:
                    description: The self link of the created KeyRing in the format
                      projects/{project}/locations/{location}/keyRings/{name}. Deprecated
                    type: string
                  skipInitialVersionCreation:
                    description: If set to true, the request will create a CryptoKey
                      without any CryptoKeyVersions. You must use the 'google_kms_key_ring_import_job'
                      resource to import the CryptoKeyVersion.
                    type: boolean
                  timeouts:
                    properties:
                      create:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      default:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      delete:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      read:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                      update:
                        description: A Duration represents the elapsed time between
                          two instants as an int64 nanosecond count. The representation
                          limits the largest representable duration to approximately
                          290 years.
                        format: int64
                        type: integer
                    type: object
                  versionTemplate:
                    description: A template describing settings for new crypto key
                      versions.
                    properties:
                      algorithm:
                        description: The algorithm to use when creating a version
                          based on this template. See the [algorithm reference](https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm)
                          for possible inputs.
                        type: string
                      protectionLevel:
                        description: 'The protection level to use when creating a
                          version based on this template. Default value: "SOFTWARE"
                          Possible values: ["SOFTWARE", "HSM"]'
                        type: string
                    required:
                    - algorithm
                    type: object
                required:
                - keyRing
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
