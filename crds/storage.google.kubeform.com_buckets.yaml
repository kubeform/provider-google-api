apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: buckets.storage.google.kubeform.com
spec:
  group: storage.google.kubeform.com
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    singular: bucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  bucketPolicyOnly:
                    description: Enables Bucket Policy Only access to a bucket. Deprecated
                    type: boolean
                  cors:
                    description: The bucket's Cross-Origin Resource Sharing (CORS)
                      configuration.
                    items:
                      properties:
                        maxAgeSeconds:
                          description: The value, in seconds, to return in the Access-Control-Max-Age
                            header used in preflight responses.
                          format: int64
                          type: integer
                        method:
                          description: 'The list of HTTP methods on which to include
                            CORS response headers, (GET, OPTIONS, POST, etc) Note:
                            "*" is permitted in the list of methods, and means "any
                            method".'
                          items:
                            type: string
                          type: array
                        origin:
                          description: 'The list of Origins eligible to receive CORS
                            response headers. Note: "*" is permitted in the list of
                            origins, and means "any Origin".'
                          items:
                            type: string
                          type: array
                        responseHeader:
                          description: The list of HTTP headers other than the simple
                            response headers to give permission for the user-agent
                            to share across domains.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  defaultEventBasedHold:
                    type: boolean
                  encryption:
                    description: The bucket's encryption configuration.
                    properties:
                      defaultKmsKeyName:
                        description: A Cloud KMS key that will be used to encrypt
                          objects inserted into this bucket, if no encryption method
                          is specified. You must pay attention to whether the crypto
                          key is available in the location that this bucket is created
                          in. See the docs for more details.
                        type: string
                    required:
                    - defaultKmsKeyName
                    type: object
                  forceDestroy:
                    description: When deleting a bucket, this boolean option will
                      delete all contained objects. If you try to delete a bucket
                      that contains objects, Terraform will fail that run.
                    type: boolean
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the bucket.
                    type: object
                  lifecycleRule:
                    description: The bucket's Lifecycle Rules configuration.
                    items:
                      properties:
                        action:
                          description: The Lifecycle Rule's action configuration.
                            A single block of this type is supported.
                          properties:
                            storageClass:
                              description: 'The target Storage Class of objects affected
                                by this Lifecycle Rule. Supported values include:
                                MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.'
                              type: string
                            type:
                              description: 'The type of the action of this Lifecycle
                                Rule. Supported values include: Delete and SetStorageClass.'
                              type: string
                          required:
                          - type
                          type: object
                        condition:
                          description: The Lifecycle Rule's condition configuration.
                          properties:
                            age:
                              description: Minimum age of an object in days to satisfy
                                this condition.
                              format: int64
                              type: integer
                            createdBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            customTimeBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            daysSinceCustomTime:
                              description: Number of days elapsed since the user-specified
                                timestamp set on an object.
                              format: int64
                              type: integer
                            daysSinceNoncurrentTime:
                              description: "Number of days elapsed since the noncurrent
                                timestamp of an object. This \t\t\t\t\t\t\t\t\t\tcondition
                                is relevant only for versioned objects."
                              format: int64
                              type: integer
                            matchesStorageClass:
                              description: 'Storage Class of objects to satisfy this
                                condition. Supported values include: MULTI_REGIONAL,
                                REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, DURABLE_REDUCED_AVAILABILITY.'
                              items:
                                type: string
                              type: array
                            noncurrentTimeBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            numNewerVersions:
                              description: Relevant only for versioned objects. The
                                number of newer versions of an object to satisfy this
                                condition.
                              format: int64
                              type: integer
                            withState:
                              description: 'Match to live and/or archived objects.
                                Unversioned buckets have only live objects. Supported
                                values include: "LIVE", "ARCHIVED", "ANY".'
                              type: string
                          type: object
                      required:
                      - action
                      - condition
                      type: object
                    maxItems: 100
                    type: array
                  location:
                    description: The Google Cloud Storage location
                    type: string
                  logging:
                    description: The bucket's Access & Storage Logs configuration.
                    properties:
                      logBucket:
                        description: The bucket that will receive log objects.
                        type: string
                      logObjectPrefix:
                        description: The object prefix for log objects. If it's not
                          provided, by default Google Cloud Storage sets this to this
                          bucket's name.
                        type: string
                    required:
                    - logBucket
                    type: object
                  name:
                    description: The name of the bucket.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  requesterPays:
                    description: Enables Requester Pays on a storage bucket.
                    type: boolean
                  retentionPolicy:
                    description: Configuration of the bucket's data retention policy
                      for how long objects in the bucket should be retained.
                    properties:
                      isLocked:
                        description: 'If set to true, the bucket will be locked and
                          permanently restrict edits to the bucket''s retention policy.  Caution:
                          Locking a bucket is an irreversible action.'
                        type: boolean
                      retentionPeriod:
                        description: The period of time, in seconds, that objects
                          in the bucket must be retained and cannot be deleted, overwritten,
                          or archived. The value must be less than 3,155,760,000 seconds.
                        format: int64
                        type: integer
                    required:
                    - retentionPeriod
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  storageClass:
                    description: 'The Storage Class of the new bucket. Supported values
                      include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
                      ARCHIVE.'
                    type: string
                  uniformBucketLevelAccess:
                    description: Enables uniform bucket-level access on a bucket.
                    type: boolean
                  url:
                    description: The base URL of the bucket, in the format gs://<bucket-name>.
                    type: string
                  versioning:
                    description: The bucket's Versioning configuration.
                    properties:
                      enabled:
                        description: While set to true, versioning is fully enabled
                          for this bucket.
                        type: boolean
                    required:
                    - enabled
                    type: object
                  website:
                    description: Configuration if the bucket acts as a website.
                    properties:
                      mainPageSuffix:
                        description: Behaves as the bucket's directory index where
                          missing objects are treated as potential directories.
                        type: string
                      notFoundPage:
                        description: The custom object to return when a requested
                          resource is not found.
                        type: string
                    type: object
                required:
                - name
                type: object
              state:
                properties:
                  bucketPolicyOnly:
                    description: Enables Bucket Policy Only access to a bucket. Deprecated
                    type: boolean
                  cors:
                    description: The bucket's Cross-Origin Resource Sharing (CORS)
                      configuration.
                    items:
                      properties:
                        maxAgeSeconds:
                          description: The value, in seconds, to return in the Access-Control-Max-Age
                            header used in preflight responses.
                          format: int64
                          type: integer
                        method:
                          description: 'The list of HTTP methods on which to include
                            CORS response headers, (GET, OPTIONS, POST, etc) Note:
                            "*" is permitted in the list of methods, and means "any
                            method".'
                          items:
                            type: string
                          type: array
                        origin:
                          description: 'The list of Origins eligible to receive CORS
                            response headers. Note: "*" is permitted in the list of
                            origins, and means "any Origin".'
                          items:
                            type: string
                          type: array
                        responseHeader:
                          description: The list of HTTP headers other than the simple
                            response headers to give permission for the user-agent
                            to share across domains.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  defaultEventBasedHold:
                    type: boolean
                  encryption:
                    description: The bucket's encryption configuration.
                    properties:
                      defaultKmsKeyName:
                        description: A Cloud KMS key that will be used to encrypt
                          objects inserted into this bucket, if no encryption method
                          is specified. You must pay attention to whether the crypto
                          key is available in the location that this bucket is created
                          in. See the docs for more details.
                        type: string
                    required:
                    - defaultKmsKeyName
                    type: object
                  forceDestroy:
                    description: When deleting a bucket, this boolean option will
                      delete all contained objects. If you try to delete a bucket
                      that contains objects, Terraform will fail that run.
                    type: boolean
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: A set of key/value label pairs to assign to the bucket.
                    type: object
                  lifecycleRule:
                    description: The bucket's Lifecycle Rules configuration.
                    items:
                      properties:
                        action:
                          description: The Lifecycle Rule's action configuration.
                            A single block of this type is supported.
                          properties:
                            storageClass:
                              description: 'The target Storage Class of objects affected
                                by this Lifecycle Rule. Supported values include:
                                MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE.'
                              type: string
                            type:
                              description: 'The type of the action of this Lifecycle
                                Rule. Supported values include: Delete and SetStorageClass.'
                              type: string
                          required:
                          - type
                          type: object
                        condition:
                          description: The Lifecycle Rule's condition configuration.
                          properties:
                            age:
                              description: Minimum age of an object in days to satisfy
                                this condition.
                              format: int64
                              type: integer
                            createdBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            customTimeBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            daysSinceCustomTime:
                              description: Number of days elapsed since the user-specified
                                timestamp set on an object.
                              format: int64
                              type: integer
                            daysSinceNoncurrentTime:
                              description: "Number of days elapsed since the noncurrent
                                timestamp of an object. This \t\t\t\t\t\t\t\t\t\tcondition
                                is relevant only for versioned objects."
                              format: int64
                              type: integer
                            matchesStorageClass:
                              description: 'Storage Class of objects to satisfy this
                                condition. Supported values include: MULTI_REGIONAL,
                                REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, DURABLE_REDUCED_AVAILABILITY.'
                              items:
                                type: string
                              type: array
                            noncurrentTimeBefore:
                              description: Creation date of an object in RFC 3339
                                (e.g. 2017-06-13) to satisfy this condition.
                              type: string
                            numNewerVersions:
                              description: Relevant only for versioned objects. The
                                number of newer versions of an object to satisfy this
                                condition.
                              format: int64
                              type: integer
                            withState:
                              description: 'Match to live and/or archived objects.
                                Unversioned buckets have only live objects. Supported
                                values include: "LIVE", "ARCHIVED", "ANY".'
                              type: string
                          type: object
                      required:
                      - action
                      - condition
                      type: object
                    maxItems: 100
                    type: array
                  location:
                    description: The Google Cloud Storage location
                    type: string
                  logging:
                    description: The bucket's Access & Storage Logs configuration.
                    properties:
                      logBucket:
                        description: The bucket that will receive log objects.
                        type: string
                      logObjectPrefix:
                        description: The object prefix for log objects. If it's not
                          provided, by default Google Cloud Storage sets this to this
                          bucket's name.
                        type: string
                    required:
                    - logBucket
                    type: object
                  name:
                    description: The name of the bucket.
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  requesterPays:
                    description: Enables Requester Pays on a storage bucket.
                    type: boolean
                  retentionPolicy:
                    description: Configuration of the bucket's data retention policy
                      for how long objects in the bucket should be retained.
                    properties:
                      isLocked:
                        description: 'If set to true, the bucket will be locked and
                          permanently restrict edits to the bucket''s retention policy.  Caution:
                          Locking a bucket is an irreversible action.'
                        type: boolean
                      retentionPeriod:
                        description: The period of time, in seconds, that objects
                          in the bucket must be retained and cannot be deleted, overwritten,
                          or archived. The value must be less than 3,155,760,000 seconds.
                        format: int64
                        type: integer
                    required:
                    - retentionPeriod
                    type: object
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                  storageClass:
                    description: 'The Storage Class of the new bucket. Supported values
                      include: STANDARD, MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE,
                      ARCHIVE.'
                    type: string
                  uniformBucketLevelAccess:
                    description: Enables uniform bucket-level access on a bucket.
                    type: boolean
                  url:
                    description: The base URL of the bucket, in the format gs://<bucket-name>.
                    type: string
                  versioning:
                    description: The bucket's Versioning configuration.
                    properties:
                      enabled:
                        description: While set to true, versioning is fully enabled
                          for this bucket.
                        type: boolean
                    required:
                    - enabled
                    type: object
                  website:
                    description: Configuration if the bucket acts as a website.
                    properties:
                      mainPageSuffix:
                        description: Behaves as the bucket's directory index where
                          missing objects are treated as potential directories.
                        type: string
                      notFoundPage:
                        description: The custom object to return when a requested
                          resource is not found.
                        type: string
                    type: object
                required:
                - name
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
