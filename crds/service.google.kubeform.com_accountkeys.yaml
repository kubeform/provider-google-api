apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: google.kubeform.com
    app.kubernetes.io/part-of: kubeform.com
  name: accountkeys.service.google.kubeform.com
spec:
  group: service.google.kubeform.com
  names:
    kind: AccountKey
    listKind: AccountKeyList
    plural: accountkeys
    singular: accountkey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              backendRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              providerRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              resource:
                properties:
                  id:
                    type: string
                  keepers:
                    additionalProperties:
                      type: string
                    description: Arbitrary map of values that, when changed, will
                      trigger recreation of resource.
                    type: object
                  keyAlgorithm:
                    description: 'The algorithm used to generate the key, used only
                      on create. KEY_ALG_RSA_2048 is the default algorithm. Valid
                      values are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".'
                    type: string
                  name:
                    description: The name used for this key pair
                    type: string
                  privateKeyType:
                    type: string
                  publicKey:
                    description: The public key, base64 encoded
                    type: string
                  publicKeyData:
                    description: A field that allows clients to upload their own public
                      key. If set, use this public key data to create a service account
                      key for given service account. Please note, the expected format
                      for this field is a base64 encoded X509_PEM.
                    type: string
                  publicKeyType:
                    type: string
                  serviceAccountID:
                    description: The ID of the parent service account of the key.
                      This can be a string in the format {ACCOUNT} or projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT},
                      where {ACCOUNT} is the email address or unique id of the service
                      account. If the {ACCOUNT} syntax is used, the project will be
                      inferred from the provider's configuration.
                    type: string
                  validAfter:
                    description: 'The key can be used after this timestamp. A timestamp
                      in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                      "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  validBefore:
                    description: 'The key can be used before this timestamp. A timestamp
                      in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                      "2014-10-02T15:01:23.045123456Z".'
                    type: string
                required:
                - serviceAccountID
                type: object
              secretRef:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
              state:
                properties:
                  id:
                    type: string
                  keepers:
                    additionalProperties:
                      type: string
                    description: Arbitrary map of values that, when changed, will
                      trigger recreation of resource.
                    type: object
                  keyAlgorithm:
                    description: 'The algorithm used to generate the key, used only
                      on create. KEY_ALG_RSA_2048 is the default algorithm. Valid
                      values are: "KEY_ALG_RSA_1024", "KEY_ALG_RSA_2048".'
                    type: string
                  name:
                    description: The name used for this key pair
                    type: string
                  privateKeyType:
                    type: string
                  publicKey:
                    description: The public key, base64 encoded
                    type: string
                  publicKeyData:
                    description: A field that allows clients to upload their own public
                      key. If set, use this public key data to create a service account
                      key for given service account. Please note, the expected format
                      for this field is a base64 encoded X509_PEM.
                    type: string
                  publicKeyType:
                    type: string
                  serviceAccountID:
                    description: The ID of the parent service account of the key.
                      This can be a string in the format {ACCOUNT} or projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT},
                      where {ACCOUNT} is the email address or unique id of the service
                      account. If the {ACCOUNT} syntax is used, the project will be
                      inferred from the provider's configuration.
                    type: string
                  validAfter:
                    description: 'The key can be used after this timestamp. A timestamp
                      in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                      "2014-10-02T15:01:23.045123456Z".'
                    type: string
                  validBefore:
                    description: 'The key can be used before this timestamp. A timestamp
                      in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example:
                      "2014-10-02T15:01:23.045123456Z".'
                    type: string
                required:
                - serviceAccountID
                type: object
              terminationPolicy:
                enum:
                - Delete
                - DoNotTerminate
                type: string
              updatePolicy:
                enum:
                - Destroy
                - DoNotDestroy
                type: string
            required:
            - providerRef
            - resource
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    observedGeneration:
                      description: If set, this represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.condition[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: Resource generation, which is updated on mutation by
                  the API Server.
                format: int64
                type: integer
              phase:
                description: Status defines the set of statuses a resource can have.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
